// Code generated by protoc-gen-go. DO NOT EDIT.
// source: douban.proto

package jarviscrawlercore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// DoubanMode - douban mode
type DoubanMode int32

const (
	// DBM_SEARCH - search
	DoubanMode_DBM_SEARCH DoubanMode = 0
	// DBM_BOOK - book
	DoubanMode_DBM_BOOK DoubanMode = 1
)

var DoubanMode_name = map[int32]string{
	0: "DBM_SEARCH",
	1: "DBM_BOOK",
}
var DoubanMode_value = map[string]int32{
	"DBM_SEARCH": 0,
	"DBM_BOOK":   1,
}

func (x DoubanMode) String() string {
	return proto.EnumName(DoubanMode_name, int32(x))
}
func (DoubanMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{0}
}

// DoubanType - douban type
type DoubanType int32

const (
	// DBT_BOOK - book
	DoubanType_DBT_BOOK DoubanType = 0
)

var DoubanType_name = map[int32]string{
	0: "DBT_BOOK",
}
var DoubanType_value = map[string]int32{
	"DBT_BOOK": 0,
}

func (x DoubanType) String() string {
	return proto.EnumName(DoubanType_name, int32(x))
}
func (DoubanType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{1}
}

// DoubanSubject - douban subject
type DoubanSubject struct {
	Title                string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url                  string     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	DoubanType           DoubanType `protobuf:"varint,3,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
	Id                   string     `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *DoubanSubject) Reset()         { *m = DoubanSubject{} }
func (m *DoubanSubject) String() string { return proto.CompactTextString(m) }
func (*DoubanSubject) ProtoMessage()    {}
func (*DoubanSubject) Descriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{0}
}
func (m *DoubanSubject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubanSubject.Unmarshal(m, b)
}
func (m *DoubanSubject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubanSubject.Marshal(b, m, deterministic)
}
func (dst *DoubanSubject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubanSubject.Merge(dst, src)
}
func (m *DoubanSubject) XXX_Size() int {
	return xxx_messageInfo_DoubanSubject.Size(m)
}
func (m *DoubanSubject) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubanSubject.DiscardUnknown(m)
}

var xxx_messageInfo_DoubanSubject proto.InternalMessageInfo

func (m *DoubanSubject) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DoubanSubject) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DoubanSubject) GetDoubanType() DoubanType {
	if m != nil {
		return m.DoubanType
	}
	return DoubanType_DBT_BOOK
}

func (m *DoubanSubject) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

// DoubanSearch - douban search
type DoubanSearch struct {
	Text                 string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Subjects             []*DoubanSubject `protobuf:"bytes,2,rep,name=subjects,proto3" json:"subjects,omitempty"`
	DoubanType           DoubanType       `protobuf:"varint,3,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DoubanSearch) Reset()         { *m = DoubanSearch{} }
func (m *DoubanSearch) String() string { return proto.CompactTextString(m) }
func (*DoubanSearch) ProtoMessage()    {}
func (*DoubanSearch) Descriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{1}
}
func (m *DoubanSearch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubanSearch.Unmarshal(m, b)
}
func (m *DoubanSearch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubanSearch.Marshal(b, m, deterministic)
}
func (dst *DoubanSearch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubanSearch.Merge(dst, src)
}
func (m *DoubanSearch) XXX_Size() int {
	return xxx_messageInfo_DoubanSearch.Size(m)
}
func (m *DoubanSearch) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubanSearch.DiscardUnknown(m)
}

var xxx_messageInfo_DoubanSearch proto.InternalMessageInfo

func (m *DoubanSearch) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *DoubanSearch) GetSubjects() []*DoubanSubject {
	if m != nil {
		return m.Subjects
	}
	return nil
}

func (m *DoubanSearch) GetDoubanType() DoubanType {
	if m != nil {
		return m.DoubanType
	}
	return DoubanType_DBT_BOOK
}

// DoubanBook - douban book
type DoubanBook struct {
	Title                string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url                  string           `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Id                   string           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Cover                string           `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Authors              []string         `protobuf:"bytes,5,rep,name=authors,proto3" json:"authors,omitempty"`
	Score                float32          `protobuf:"fixed32,6,opt,name=score,proto3" json:"score,omitempty"`
	RatingNums           int32            `protobuf:"varint,7,opt,name=ratingNums,proto3" json:"ratingNums,omitempty"`
	Intro                string           `protobuf:"bytes,8,opt,name=intro,proto3" json:"intro,omitempty"`
	LstLink              []*DoubanSubject `protobuf:"bytes,9,rep,name=lstLink,proto3" json:"lstLink,omitempty"`
	Tags                 []string         `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	OtherTitle           []string         `protobuf:"bytes,11,rep,name=otherTitle,proto3" json:"otherTitle,omitempty"`
	LastUpdatedTime      int64            `protobuf:"varint,12,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *DoubanBook) Reset()         { *m = DoubanBook{} }
func (m *DoubanBook) String() string { return proto.CompactTextString(m) }
func (*DoubanBook) ProtoMessage()    {}
func (*DoubanBook) Descriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{2}
}
func (m *DoubanBook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DoubanBook.Unmarshal(m, b)
}
func (m *DoubanBook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DoubanBook.Marshal(b, m, deterministic)
}
func (dst *DoubanBook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DoubanBook.Merge(dst, src)
}
func (m *DoubanBook) XXX_Size() int {
	return xxx_messageInfo_DoubanBook.Size(m)
}
func (m *DoubanBook) XXX_DiscardUnknown() {
	xxx_messageInfo_DoubanBook.DiscardUnknown(m)
}

var xxx_messageInfo_DoubanBook proto.InternalMessageInfo

func (m *DoubanBook) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *DoubanBook) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *DoubanBook) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DoubanBook) GetCover() string {
	if m != nil {
		return m.Cover
	}
	return ""
}

func (m *DoubanBook) GetAuthors() []string {
	if m != nil {
		return m.Authors
	}
	return nil
}

func (m *DoubanBook) GetScore() float32 {
	if m != nil {
		return m.Score
	}
	return 0
}

func (m *DoubanBook) GetRatingNums() int32 {
	if m != nil {
		return m.RatingNums
	}
	return 0
}

func (m *DoubanBook) GetIntro() string {
	if m != nil {
		return m.Intro
	}
	return ""
}

func (m *DoubanBook) GetLstLink() []*DoubanSubject {
	if m != nil {
		return m.LstLink
	}
	return nil
}

func (m *DoubanBook) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DoubanBook) GetOtherTitle() []string {
	if m != nil {
		return m.OtherTitle
	}
	return nil
}

func (m *DoubanBook) GetLastUpdatedTime() int64 {
	if m != nil {
		return m.LastUpdatedTime
	}
	return 0
}

// RequestDouban - request douban
type RequestDouban struct {
	Mode                 DoubanMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.DoubanMode" json:"mode,omitempty"`
	Text                 string     `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Id                   string     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	DoubanType           DoubanType `protobuf:"varint,4,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *RequestDouban) Reset()         { *m = RequestDouban{} }
func (m *RequestDouban) String() string { return proto.CompactTextString(m) }
func (*RequestDouban) ProtoMessage()    {}
func (*RequestDouban) Descriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{3}
}
func (m *RequestDouban) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestDouban.Unmarshal(m, b)
}
func (m *RequestDouban) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestDouban.Marshal(b, m, deterministic)
}
func (dst *RequestDouban) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestDouban.Merge(dst, src)
}
func (m *RequestDouban) XXX_Size() int {
	return xxx_messageInfo_RequestDouban.Size(m)
}
func (m *RequestDouban) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestDouban.DiscardUnknown(m)
}

var xxx_messageInfo_RequestDouban proto.InternalMessageInfo

func (m *RequestDouban) GetMode() DoubanMode {
	if m != nil {
		return m.Mode
	}
	return DoubanMode_DBM_SEARCH
}

func (m *RequestDouban) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RequestDouban) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RequestDouban) GetDoubanType() DoubanType {
	if m != nil {
		return m.DoubanType
	}
	return DoubanType_DBT_BOOK
}

// ReplyDouban - reply douban
type ReplyDouban struct {
	Mode DoubanMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.DoubanMode" json:"mode,omitempty"`
	// Types that are valid to be assigned to Reply:
	//	*ReplyDouban_Search
	//	*ReplyDouban_Book
	Reply                isReplyDouban_Reply `protobuf_oneof:"reply"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *ReplyDouban) Reset()         { *m = ReplyDouban{} }
func (m *ReplyDouban) String() string { return proto.CompactTextString(m) }
func (*ReplyDouban) ProtoMessage()    {}
func (*ReplyDouban) Descriptor() ([]byte, []int) {
	return fileDescriptor_douban_784a8694eb05fc28, []int{4}
}
func (m *ReplyDouban) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyDouban.Unmarshal(m, b)
}
func (m *ReplyDouban) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyDouban.Marshal(b, m, deterministic)
}
func (dst *ReplyDouban) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyDouban.Merge(dst, src)
}
func (m *ReplyDouban) XXX_Size() int {
	return xxx_messageInfo_ReplyDouban.Size(m)
}
func (m *ReplyDouban) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyDouban.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyDouban proto.InternalMessageInfo

type isReplyDouban_Reply interface {
	isReplyDouban_Reply()
}

type ReplyDouban_Search struct {
	Search *DoubanSearch `protobuf:"bytes,100,opt,name=search,proto3,oneof"`
}
type ReplyDouban_Book struct {
	Book *DoubanBook `protobuf:"bytes,101,opt,name=book,proto3,oneof"`
}

func (*ReplyDouban_Search) isReplyDouban_Reply() {}
func (*ReplyDouban_Book) isReplyDouban_Reply()   {}

func (m *ReplyDouban) GetReply() isReplyDouban_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *ReplyDouban) GetMode() DoubanMode {
	if m != nil {
		return m.Mode
	}
	return DoubanMode_DBM_SEARCH
}

func (m *ReplyDouban) GetSearch() *DoubanSearch {
	if x, ok := m.GetReply().(*ReplyDouban_Search); ok {
		return x.Search
	}
	return nil
}

func (m *ReplyDouban) GetBook() *DoubanBook {
	if x, ok := m.GetReply().(*ReplyDouban_Book); ok {
		return x.Book
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplyDouban) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplyDouban_OneofMarshaler, _ReplyDouban_OneofUnmarshaler, _ReplyDouban_OneofSizer, []interface{}{
		(*ReplyDouban_Search)(nil),
		(*ReplyDouban_Book)(nil),
	}
}

func _ReplyDouban_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplyDouban)
	// reply
	switch x := m.Reply.(type) {
	case *ReplyDouban_Search:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Search); err != nil {
			return err
		}
	case *ReplyDouban_Book:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Book); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplyDouban.Reply has unexpected type %T", x)
	}
	return nil
}

func _ReplyDouban_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplyDouban)
	switch tag {
	case 100: // reply.search
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DoubanSearch)
		err := b.DecodeMessage(msg)
		m.Reply = &ReplyDouban_Search{msg}
		return true, err
	case 101: // reply.book
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(DoubanBook)
		err := b.DecodeMessage(msg)
		m.Reply = &ReplyDouban_Book{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplyDouban_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplyDouban)
	// reply
	switch x := m.Reply.(type) {
	case *ReplyDouban_Search:
		s := proto.Size(x.Search)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyDouban_Book:
		s := proto.Size(x.Book)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*DoubanSubject)(nil), "jarviscrawlercore.DoubanSubject")
	proto.RegisterType((*DoubanSearch)(nil), "jarviscrawlercore.DoubanSearch")
	proto.RegisterType((*DoubanBook)(nil), "jarviscrawlercore.DoubanBook")
	proto.RegisterType((*RequestDouban)(nil), "jarviscrawlercore.RequestDouban")
	proto.RegisterType((*ReplyDouban)(nil), "jarviscrawlercore.ReplyDouban")
	proto.RegisterEnum("jarviscrawlercore.DoubanMode", DoubanMode_name, DoubanMode_value)
	proto.RegisterEnum("jarviscrawlercore.DoubanType", DoubanType_name, DoubanType_value)
}

func init() { proto.RegisterFile("douban.proto", fileDescriptor_douban_784a8694eb05fc28) }

var fileDescriptor_douban_784a8694eb05fc28 = []byte{
	// 495 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0xcd, 0x8e, 0xd3, 0x30,
	0x10, 0xae, 0x93, 0xf4, 0x6f, 0xda, 0x2d, 0xc5, 0xe2, 0x60, 0x21, 0x01, 0x51, 0x4f, 0x51, 0x0f,
	0x95, 0xe8, 0x9e, 0x40, 0x70, 0xa0, 0x14, 0xa9, 0x12, 0x2c, 0x2b, 0x79, 0xcb, 0x19, 0xa5, 0x89,
	0xb5, 0xcd, 0x36, 0xad, 0x8b, 0xed, 0x2c, 0xec, 0x0b, 0xf0, 0x1a, 0x9c, 0x78, 0x08, 0x5e, 0x85,
	0xa7, 0x41, 0x1e, 0x27, 0x55, 0x59, 0x54, 0x54, 0xd8, 0x9b, 0x67, 0xe6, 0xfb, 0x3c, 0xdf, 0x8c,
	0xbf, 0x04, 0xba, 0xa9, 0x2c, 0x16, 0xf1, 0x66, 0xb4, 0x55, 0xd2, 0x48, 0x7a, 0xff, 0x2a, 0x56,
	0xd7, 0x99, 0x4e, 0x54, 0xfc, 0x39, 0x17, 0x2a, 0x91, 0x4a, 0x0c, 0xbe, 0x12, 0x38, 0x99, 0x22,
	0xe6, 0xa2, 0x58, 0x5c, 0x89, 0xc4, 0xd0, 0x07, 0x50, 0x37, 0x99, 0xc9, 0x05, 0x23, 0x21, 0x89,
	0xda, 0xdc, 0x05, 0xb4, 0x0f, 0x7e, 0xa1, 0x72, 0xe6, 0x61, 0xce, 0x1e, 0xe9, 0x4b, 0x00, 0x77,
	0xf9, 0xfc, 0x66, 0x2b, 0x98, 0x1f, 0x92, 0xa8, 0x37, 0x7e, 0x34, 0xfa, 0xa3, 0xc3, 0x68, 0xba,
	0x03, 0xf1, 0x3d, 0x02, 0xed, 0x81, 0x97, 0xa5, 0x2c, 0xc0, 0xfb, 0xbc, 0x2c, 0x1d, 0x7c, 0x23,
	0xd0, 0x2d, 0x85, 0x88, 0x58, 0x25, 0x4b, 0x4a, 0x21, 0x30, 0xe2, 0x8b, 0x29, 0x65, 0xe0, 0x99,
	0xbe, 0x80, 0x96, 0x76, 0x32, 0x35, 0xf3, 0x42, 0x3f, 0xea, 0x8c, 0xc3, 0x83, 0x1d, 0xcb, 0x79,
	0xf8, 0x8e, 0x71, 0x47, 0xc5, 0x83, 0x9f, 0x1e, 0x80, 0x2b, 0x4d, 0xa4, 0x5c, 0x1d, 0xbd, 0x27,
	0x37, 0xa8, 0x5f, 0x0d, 0x6a, 0x79, 0x89, 0xbc, 0x16, 0xaa, 0x9c, 0xdd, 0x05, 0x94, 0x41, 0x33,
	0x2e, 0xcc, 0x52, 0x2a, 0xcd, 0xea, 0xa1, 0x1f, 0xb5, 0x79, 0x15, 0x5a, 0xbc, 0xb6, 0xb2, 0x58,
	0x23, 0x24, 0x91, 0xc7, 0x5d, 0x40, 0x1f, 0x03, 0xa8, 0xd8, 0x64, 0x9b, 0xcb, 0xf7, 0xc5, 0x5a,
	0xb3, 0x66, 0x48, 0xa2, 0x3a, 0xdf, 0xcb, 0x58, 0x56, 0xb6, 0x31, 0x4a, 0xb2, 0x96, 0xeb, 0x82,
	0x01, 0x7d, 0x0e, 0xcd, 0x5c, 0x9b, 0x77, 0xd9, 0x66, 0xc5, 0xda, 0x47, 0xae, 0xaf, 0x22, 0xe0,
	0x7b, 0xc4, 0x97, 0x9a, 0x01, 0xca, 0xc3, 0xb3, 0x55, 0x21, 0xcd, 0x52, 0xa8, 0x39, 0x2e, 0xa2,
	0x83, 0x95, 0xbd, 0x0c, 0x8d, 0xe0, 0x5e, 0x1e, 0x6b, 0xf3, 0x61, 0x9b, 0xc6, 0x46, 0xa4, 0xf3,
	0x6c, 0x2d, 0x58, 0x37, 0x24, 0x91, 0xcf, 0x6f, 0xa7, 0x07, 0xdf, 0x09, 0x9c, 0x70, 0xf1, 0xa9,
	0x10, 0xda, 0xb8, 0xfe, 0xf4, 0x29, 0x04, 0x6b, 0x99, 0xba, 0xf5, 0xfe, 0xed, 0x9d, 0xce, 0x64,
	0x2a, 0x38, 0x42, 0x77, 0x96, 0xf1, 0xf6, 0x2c, 0x73, 0x7b, 0xfd, 0xbf, 0x9b, 0x20, 0xf8, 0x57,
	0x13, 0xfc, 0x20, 0xd0, 0xe1, 0x62, 0x9b, 0xdf, 0xfc, 0xbf, 0xca, 0x67, 0xd0, 0xd0, 0x68, 0x71,
	0x96, 0x86, 0x24, 0xea, 0x8c, 0x9f, 0x1c, 0x7e, 0x03, 0x84, 0xcd, 0x6a, 0xbc, 0x24, 0xd0, 0x53,
	0x08, 0x16, 0x52, 0xae, 0x98, 0x40, 0xe2, 0xe1, 0x6e, 0xd6, 0xa0, 0xb3, 0x1a, 0x47, 0xf0, 0xa4,
	0x09, 0x75, 0x65, 0x15, 0x0f, 0x87, 0x95, 0x7f, 0xad, 0x18, 0xda, 0x03, 0x98, 0x4e, 0xce, 0x3e,
	0x5e, 0xbc, 0x79, 0xc5, 0x5f, 0xcf, 0xfa, 0x35, 0xda, 0x85, 0x96, 0x8d, 0x27, 0xe7, 0xe7, 0x6f,
	0xfb, 0x64, 0xf8, 0xb0, 0xc2, 0xe2, 0xc7, 0x8a, 0xb5, 0xb9, 0xab, 0xd5, 0x16, 0x0d, 0xfc, 0x9b,
	0x9c, 0xfe, 0x0a, 0x00, 0x00, 0xff, 0xff, 0xc3, 0x48, 0x06, 0xa8, 0x5d, 0x04, 0x00, 0x00,
}
