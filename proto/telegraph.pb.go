// Code generated by protoc-gen-go. DO NOT EDIT.
// source: telegraph.proto

package jarviscrawlercore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// TelegraphMode - telegraph mode
type TelegraphMode int32

const (
	// TGPHM_IMAGES - images
	TelegraphMode_TGPHM_IMAGES TelegraphMode = 0
)

var TelegraphMode_name = map[int32]string{
	0: "TGPHM_IMAGES",
}
var TelegraphMode_value = map[string]int32{
	"TGPHM_IMAGES": 0,
}

func (x TelegraphMode) String() string {
	return proto.EnumName(TelegraphMode_name, int32(x))
}
func (TelegraphMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{0}
}

// TelegraphArticle - telegraph article
type TelegraphArticle struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelegraphArticle) Reset()         { *m = TelegraphArticle{} }
func (m *TelegraphArticle) String() string { return proto.CompactTextString(m) }
func (*TelegraphArticle) ProtoMessage()    {}
func (*TelegraphArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{0}
}
func (m *TelegraphArticle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelegraphArticle.Unmarshal(m, b)
}
func (m *TelegraphArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelegraphArticle.Marshal(b, m, deterministic)
}
func (dst *TelegraphArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelegraphArticle.Merge(dst, src)
}
func (m *TelegraphArticle) XXX_Size() int {
	return xxx_messageInfo_TelegraphArticle.Size(m)
}
func (m *TelegraphArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_TelegraphArticle.DiscardUnknown(m)
}

var xxx_messageInfo_TelegraphArticle proto.InternalMessageInfo

func (m *TelegraphArticle) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TelegraphArticle) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

// TelegraphImage - telegraph image
type TelegraphImage struct {
	Url                  string   `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Buf                  []byte   `protobuf:"bytes,2,opt,name=buf,proto3" json:"buf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TelegraphImage) Reset()         { *m = TelegraphImage{} }
func (m *TelegraphImage) String() string { return proto.CompactTextString(m) }
func (*TelegraphImage) ProtoMessage()    {}
func (*TelegraphImage) Descriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{1}
}
func (m *TelegraphImage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelegraphImage.Unmarshal(m, b)
}
func (m *TelegraphImage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelegraphImage.Marshal(b, m, deterministic)
}
func (dst *TelegraphImage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelegraphImage.Merge(dst, src)
}
func (m *TelegraphImage) XXX_Size() int {
	return xxx_messageInfo_TelegraphImage.Size(m)
}
func (m *TelegraphImage) XXX_DiscardUnknown() {
	xxx_messageInfo_TelegraphImage.DiscardUnknown(m)
}

var xxx_messageInfo_TelegraphImage proto.InternalMessageInfo

func (m *TelegraphImage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TelegraphImage) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

// TelegraphImages - telegraph images
type TelegraphImages struct {
	Url                  string            `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Images               []*TelegraphImage `protobuf:"bytes,2,rep,name=images,proto3" json:"images,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TelegraphImages) Reset()         { *m = TelegraphImages{} }
func (m *TelegraphImages) String() string { return proto.CompactTextString(m) }
func (*TelegraphImages) ProtoMessage()    {}
func (*TelegraphImages) Descriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{2}
}
func (m *TelegraphImages) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TelegraphImages.Unmarshal(m, b)
}
func (m *TelegraphImages) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TelegraphImages.Marshal(b, m, deterministic)
}
func (dst *TelegraphImages) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TelegraphImages.Merge(dst, src)
}
func (m *TelegraphImages) XXX_Size() int {
	return xxx_messageInfo_TelegraphImages.Size(m)
}
func (m *TelegraphImages) XXX_DiscardUnknown() {
	xxx_messageInfo_TelegraphImages.DiscardUnknown(m)
}

var xxx_messageInfo_TelegraphImages proto.InternalMessageInfo

func (m *TelegraphImages) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *TelegraphImages) GetImages() []*TelegraphImage {
	if m != nil {
		return m.Images
	}
	return nil
}

// RequestTelegraph - request telegraph
type RequestTelegraph struct {
	Mode                 TelegraphMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.TelegraphMode" json:"mode,omitempty"`
	Url                  string        `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *RequestTelegraph) Reset()         { *m = RequestTelegraph{} }
func (m *RequestTelegraph) String() string { return proto.CompactTextString(m) }
func (*RequestTelegraph) ProtoMessage()    {}
func (*RequestTelegraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{3}
}
func (m *RequestTelegraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTelegraph.Unmarshal(m, b)
}
func (m *RequestTelegraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTelegraph.Marshal(b, m, deterministic)
}
func (dst *RequestTelegraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTelegraph.Merge(dst, src)
}
func (m *RequestTelegraph) XXX_Size() int {
	return xxx_messageInfo_RequestTelegraph.Size(m)
}
func (m *RequestTelegraph) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTelegraph.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTelegraph proto.InternalMessageInfo

func (m *RequestTelegraph) GetMode() TelegraphMode {
	if m != nil {
		return m.Mode
	}
	return TelegraphMode_TGPHM_IMAGES
}

func (m *RequestTelegraph) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// ReplyTelegraph - reply telegraph
type ReplyTelegraph struct {
	Mode TelegraphMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.TelegraphMode" json:"mode,omitempty"`
	// Types that are valid to be assigned to Reply:
	//	*ReplyTelegraph_Images
	Reply                isReplyTelegraph_Reply `protobuf_oneof:"reply"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ReplyTelegraph) Reset()         { *m = ReplyTelegraph{} }
func (m *ReplyTelegraph) String() string { return proto.CompactTextString(m) }
func (*ReplyTelegraph) ProtoMessage()    {}
func (*ReplyTelegraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_telegraph_ee91a30410949888, []int{4}
}
func (m *ReplyTelegraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTelegraph.Unmarshal(m, b)
}
func (m *ReplyTelegraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTelegraph.Marshal(b, m, deterministic)
}
func (dst *ReplyTelegraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTelegraph.Merge(dst, src)
}
func (m *ReplyTelegraph) XXX_Size() int {
	return xxx_messageInfo_ReplyTelegraph.Size(m)
}
func (m *ReplyTelegraph) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTelegraph.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTelegraph proto.InternalMessageInfo

type isReplyTelegraph_Reply interface {
	isReplyTelegraph_Reply()
}

type ReplyTelegraph_Images struct {
	Images *TelegraphImages `protobuf:"bytes,100,opt,name=images,proto3,oneof"`
}

func (*ReplyTelegraph_Images) isReplyTelegraph_Reply() {}

func (m *ReplyTelegraph) GetReply() isReplyTelegraph_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (m *ReplyTelegraph) GetMode() TelegraphMode {
	if m != nil {
		return m.Mode
	}
	return TelegraphMode_TGPHM_IMAGES
}

func (m *ReplyTelegraph) GetImages() *TelegraphImages {
	if x, ok := m.GetReply().(*ReplyTelegraph_Images); ok {
		return x.Images
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplyTelegraph) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplyTelegraph_OneofMarshaler, _ReplyTelegraph_OneofUnmarshaler, _ReplyTelegraph_OneofSizer, []interface{}{
		(*ReplyTelegraph_Images)(nil),
	}
}

func _ReplyTelegraph_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplyTelegraph)
	// reply
	switch x := m.Reply.(type) {
	case *ReplyTelegraph_Images:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Images); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplyTelegraph.Reply has unexpected type %T", x)
	}
	return nil
}

func _ReplyTelegraph_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplyTelegraph)
	switch tag {
	case 100: // reply.images
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TelegraphImages)
		err := b.DecodeMessage(msg)
		m.Reply = &ReplyTelegraph_Images{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplyTelegraph_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplyTelegraph)
	// reply
	switch x := m.Reply.(type) {
	case *ReplyTelegraph_Images:
		s := proto.Size(x.Images)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*TelegraphArticle)(nil), "jarviscrawlercore.TelegraphArticle")
	proto.RegisterType((*TelegraphImage)(nil), "jarviscrawlercore.TelegraphImage")
	proto.RegisterType((*TelegraphImages)(nil), "jarviscrawlercore.TelegraphImages")
	proto.RegisterType((*RequestTelegraph)(nil), "jarviscrawlercore.RequestTelegraph")
	proto.RegisterType((*ReplyTelegraph)(nil), "jarviscrawlercore.ReplyTelegraph")
	proto.RegisterEnum("jarviscrawlercore.TelegraphMode", TelegraphMode_name, TelegraphMode_value)
}

func init() { proto.RegisterFile("telegraph.proto", fileDescriptor_telegraph_ee91a30410949888) }

var fileDescriptor_telegraph_ee91a30410949888 = []byte{
	// 270 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0x49, 0xcd, 0x49,
	0x4d, 0x2f, 0x4a, 0x2c, 0xc8, 0xd0, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x12, 0xcc, 0x4a, 0x2c,
	0x2a, 0xcb, 0x2c, 0x4e, 0x2e, 0x4a, 0x2c, 0xcf, 0x49, 0x2d, 0x4a, 0xce, 0x2f, 0x4a, 0x55, 0xb2,
	0xe2, 0x12, 0x08, 0x81, 0xa9, 0x72, 0x2c, 0x2a, 0xc9, 0x4c, 0xce, 0x49, 0x15, 0x12, 0xe0, 0x62,
	0x2e, 0x2d, 0xca, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x02, 0x31, 0x85, 0x44, 0xb8, 0x58,
	0x4b, 0x32, 0x4b, 0x72, 0x52, 0x25, 0x98, 0xc0, 0x62, 0x10, 0x8e, 0x92, 0x09, 0x17, 0x1f, 0x5c,
	0xaf, 0x67, 0x6e, 0x62, 0x3a, 0x36, 0x9d, 0x02, 0x5c, 0xcc, 0x49, 0xa5, 0x69, 0x60, 0x7d, 0x3c,
	0x41, 0x20, 0xa6, 0x52, 0x1c, 0x17, 0x3f, 0xaa, 0xae, 0x62, 0x2c, 0xda, 0x2c, 0xb9, 0xd8, 0x32,
	0xc1, 0x72, 0x12, 0x4c, 0x0a, 0xcc, 0x1a, 0xdc, 0x46, 0x8a, 0x7a, 0x18, 0x4e, 0xd7, 0x43, 0x35,
	0x25, 0x08, 0xaa, 0x41, 0x29, 0x8a, 0x4b, 0x20, 0x28, 0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x04, 0xae,
	0x40, 0xc8, 0x84, 0x8b, 0x25, 0x37, 0x3f, 0x25, 0x15, 0x6c, 0x03, 0x9f, 0x91, 0x02, 0x3e, 0xc3,
	0x7c, 0xf3, 0x53, 0x52, 0x83, 0xc0, 0xaa, 0x61, 0xce, 0x62, 0x82, 0x3b, 0x4b, 0xa9, 0x97, 0x91,
	0x8b, 0x2f, 0x28, 0xb5, 0x20, 0xa7, 0x92, 0x52, 0xa3, 0x6d, 0xe0, 0xfe, 0x4b, 0x51, 0x60, 0xd4,
	0xe0, 0x36, 0x52, 0x22, 0xe8, 0xbf, 0x62, 0x0f, 0x06, 0x98, 0x17, 0x9d, 0xd8, 0xb9, 0x58, 0x8b,
	0x40, 0xae, 0xd0, 0x52, 0xe4, 0xe2, 0x45, 0x31, 0x5d, 0x48, 0x80, 0x8b, 0x27, 0xc4, 0x3d, 0xc0,
	0xc3, 0x37, 0xde, 0xd3, 0xd7, 0xd1, 0xdd, 0x35, 0x58, 0x80, 0x21, 0x89, 0x0d, 0x1c, 0xf5, 0xc6,
	0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x16, 0xcc, 0x6f, 0xa9, 0x0d, 0x02, 0x00, 0x00,
}
