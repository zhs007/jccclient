// Code generated by protoc-gen-go. DO NOT EDIT.
// source: result.proto

package jarviscrawlercore

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ParagraphType - paragraph type
type ParagraphType int32

const (
	ParagraphType_PT_NULL     ParagraphType = 0
	ParagraphType_PT_TEXT     ParagraphType = 1
	ParagraphType_PT_IMAGE    ParagraphType = 2
	ParagraphType_PT_HEADLINE ParagraphType = 3
	ParagraphType_PT_POSTLIST ParagraphType = 4
	ParagraphType_PT_COMMENT  ParagraphType = 5
)

var ParagraphType_name = map[int32]string{
	0: "PT_NULL",
	1: "PT_TEXT",
	2: "PT_IMAGE",
	3: "PT_HEADLINE",
	4: "PT_POSTLIST",
	5: "PT_COMMENT",
}
var ParagraphType_value = map[string]int32{
	"PT_NULL":     0,
	"PT_TEXT":     1,
	"PT_IMAGE":    2,
	"PT_HEADLINE": 3,
	"PT_POSTLIST": 4,
	"PT_COMMENT":  5,
}

func (x ParagraphType) String() string {
	return proto.EnumName(ParagraphType_name, int32(x))
}
func (ParagraphType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{0}
}

// CrawlerType - crawler type
type CrawlerType int32

const (
	CrawlerType_CT_TRANSLATE2     CrawlerType = 0
	CrawlerType_CT_CB_COMPANY     CrawlerType = 1
	CrawlerType_CT_DTDATA         CrawlerType = 2
	CrawlerType_CT_ANALYZEPAGE    CrawlerType = 3
	CrawlerType_CT_GEOIP          CrawlerType = 5
	CrawlerType_CT_TECHINASIA     CrawlerType = 6
	CrawlerType_CT_STEEPANDCHEAP  CrawlerType = 7
	CrawlerType_CT_JRJ            CrawlerType = 8
	CrawlerType_CT_JD             CrawlerType = 9
	CrawlerType_CT_ALIMAMA        CrawlerType = 10
	CrawlerType_CT_MOUNTAINSTEALS CrawlerType = 11
	CrawlerType_CT_TMALL          CrawlerType = 12
	CrawlerType_CT_TAOBAO         CrawlerType = 13
	CrawlerType_CT_MANHUADB       CrawlerType = 15
	CrawlerType_CT_DOUBAN         CrawlerType = 16
	CrawlerType_CT_TELEGRAPH      CrawlerType = 17
	CrawlerType_CT_OABT           CrawlerType = 18
	CrawlerType_CT_HAO6V          CrawlerType = 19
	CrawlerType_CT_PUBLICTRANSIT  CrawlerType = 20
	CrawlerType_CT_ARTICLE2       CrawlerType = 21
	CrawlerType_CT_6VDY           CrawlerType = 22
)

var CrawlerType_name = map[int32]string{
	0:  "CT_TRANSLATE2",
	1:  "CT_CB_COMPANY",
	2:  "CT_DTDATA",
	3:  "CT_ANALYZEPAGE",
	5:  "CT_GEOIP",
	6:  "CT_TECHINASIA",
	7:  "CT_STEEPANDCHEAP",
	8:  "CT_JRJ",
	9:  "CT_JD",
	10: "CT_ALIMAMA",
	11: "CT_MOUNTAINSTEALS",
	12: "CT_TMALL",
	13: "CT_TAOBAO",
	15: "CT_MANHUADB",
	16: "CT_DOUBAN",
	17: "CT_TELEGRAPH",
	18: "CT_OABT",
	19: "CT_HAO6V",
	20: "CT_PUBLICTRANSIT",
	21: "CT_ARTICLE2",
	22: "CT_6VDY",
}
var CrawlerType_value = map[string]int32{
	"CT_TRANSLATE2":     0,
	"CT_CB_COMPANY":     1,
	"CT_DTDATA":         2,
	"CT_ANALYZEPAGE":    3,
	"CT_GEOIP":          5,
	"CT_TECHINASIA":     6,
	"CT_STEEPANDCHEAP":  7,
	"CT_JRJ":            8,
	"CT_JD":             9,
	"CT_ALIMAMA":        10,
	"CT_MOUNTAINSTEALS": 11,
	"CT_TMALL":          12,
	"CT_TAOBAO":         13,
	"CT_MANHUADB":       15,
	"CT_DOUBAN":         16,
	"CT_TELEGRAPH":      17,
	"CT_OABT":           18,
	"CT_HAO6V":          19,
	"CT_PUBLICTRANSIT":  20,
	"CT_ARTICLE2":       21,
	"CT_6VDY":           22,
}

func (x CrawlerType) String() string {
	return proto.EnumName(CrawlerType_name, int32(x))
}
func (CrawlerType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{1}
}

// AnalyzeScreenshotType - screenshot type
type AnalyzeScreenshotType int32

const (
	// AST_JPG - jpg
	AnalyzeScreenshotType_AST_JPG AnalyzeScreenshotType = 0
	// AST_PNG - png
	AnalyzeScreenshotType_AST_PNG AnalyzeScreenshotType = 1
)

var AnalyzeScreenshotType_name = map[int32]string{
	0: "AST_JPG",
	1: "AST_PNG",
}
var AnalyzeScreenshotType_value = map[string]int32{
	"AST_JPG": 0,
	"AST_PNG": 1,
}

func (x AnalyzeScreenshotType) String() string {
	return proto.EnumName(AnalyzeScreenshotType_name, int32(x))
}
func (AnalyzeScreenshotType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{2}
}

// ImageInfo - image info
type ImageInfo struct {
	HashName             string   `protobuf:"bytes,1,opt,name=hashName,proto3" json:"hashName,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Width                int32    `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               int32    `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Data                 []byte   `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageInfo) Reset()         { *m = ImageInfo{} }
func (m *ImageInfo) String() string { return proto.CompactTextString(m) }
func (*ImageInfo) ProtoMessage()    {}
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{0}
}
func (m *ImageInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageInfo.Unmarshal(m, b)
}
func (m *ImageInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageInfo.Marshal(b, m, deterministic)
}
func (dst *ImageInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageInfo.Merge(dst, src)
}
func (m *ImageInfo) XXX_Size() int {
	return xxx_messageInfo_ImageInfo.Size(m)
}
func (m *ImageInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ImageInfo proto.InternalMessageInfo

func (m *ImageInfo) GetHashName() string {
	if m != nil {
		return m.HashName
	}
	return ""
}

func (m *ImageInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ImageInfo) GetWidth() int32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *ImageInfo) GetHeight() int32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *ImageInfo) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// Paragraph - paragraph
type Paragraph struct {
	Pt                   ParagraphType `protobuf:"varint,1,opt,name=pt,proto3,enum=jarviscrawlercore.ParagraphType" json:"pt,omitempty"`
	ImgHashName          string        `protobuf:"bytes,2,opt,name=imgHashName,proto3" json:"imgHashName,omitempty"`
	Text                 string        `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
	ImgURL               string        `protobuf:"bytes,4,opt,name=imgURL,proto3" json:"imgURL,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Paragraph) Reset()         { *m = Paragraph{} }
func (m *Paragraph) String() string { return proto.CompactTextString(m) }
func (*Paragraph) ProtoMessage()    {}
func (*Paragraph) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{1}
}
func (m *Paragraph) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Paragraph.Unmarshal(m, b)
}
func (m *Paragraph) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Paragraph.Marshal(b, m, deterministic)
}
func (dst *Paragraph) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Paragraph.Merge(dst, src)
}
func (m *Paragraph) XXX_Size() int {
	return xxx_messageInfo_Paragraph.Size(m)
}
func (m *Paragraph) XXX_DiscardUnknown() {
	xxx_messageInfo_Paragraph.DiscardUnknown(m)
}

var xxx_messageInfo_Paragraph proto.InternalMessageInfo

func (m *Paragraph) GetPt() ParagraphType {
	if m != nil {
		return m.Pt
	}
	return ParagraphType_PT_NULL
}

func (m *Paragraph) GetImgHashName() string {
	if m != nil {
		return m.ImgHashName
	}
	return ""
}

func (m *Paragraph) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Paragraph) GetImgURL() string {
	if m != nil {
		return m.ImgURL
	}
	return ""
}

// ExportArticleResult - export article result
type ExportArticleResult struct {
	Title                string       `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author               string       `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	WriteTime            string       `protobuf:"bytes,3,opt,name=writeTime,proto3" json:"writeTime,omitempty"`
	Article              string       `protobuf:"bytes,4,opt,name=article,proto3" json:"article,omitempty"`
	Url                  string       `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Imgs                 []*ImageInfo `protobuf:"bytes,6,rep,name=imgs,proto3" json:"imgs,omitempty"`
	TitleImage           *ImageInfo   `protobuf:"bytes,7,opt,name=titleImage,proto3" json:"titleImage,omitempty"`
	Tags                 []string     `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`
	Paragraphs           []*Paragraph `protobuf:"bytes,9,rep,name=paragraphs,proto3" json:"paragraphs,omitempty"`
	Summary              string       `protobuf:"bytes,10,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ExportArticleResult) Reset()         { *m = ExportArticleResult{} }
func (m *ExportArticleResult) String() string { return proto.CompactTextString(m) }
func (*ExportArticleResult) ProtoMessage()    {}
func (*ExportArticleResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{2}
}
func (m *ExportArticleResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ExportArticleResult.Unmarshal(m, b)
}
func (m *ExportArticleResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ExportArticleResult.Marshal(b, m, deterministic)
}
func (dst *ExportArticleResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ExportArticleResult.Merge(dst, src)
}
func (m *ExportArticleResult) XXX_Size() int {
	return xxx_messageInfo_ExportArticleResult.Size(m)
}
func (m *ExportArticleResult) XXX_DiscardUnknown() {
	xxx_messageInfo_ExportArticleResult.DiscardUnknown(m)
}

var xxx_messageInfo_ExportArticleResult proto.InternalMessageInfo

func (m *ExportArticleResult) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ExportArticleResult) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ExportArticleResult) GetWriteTime() string {
	if m != nil {
		return m.WriteTime
	}
	return ""
}

func (m *ExportArticleResult) GetArticle() string {
	if m != nil {
		return m.Article
	}
	return ""
}

func (m *ExportArticleResult) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ExportArticleResult) GetImgs() []*ImageInfo {
	if m != nil {
		return m.Imgs
	}
	return nil
}

func (m *ExportArticleResult) GetTitleImage() *ImageInfo {
	if m != nil {
		return m.TitleImage
	}
	return nil
}

func (m *ExportArticleResult) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *ExportArticleResult) GetParagraphs() []*Paragraph {
	if m != nil {
		return m.Paragraphs
	}
	return nil
}

func (m *ExportArticleResult) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

// Article - article
type Article struct {
	Title                string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author               string     `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	WriteTime            string     `protobuf:"bytes,3,opt,name=writeTime,proto3" json:"writeTime,omitempty"`
	Summary              string     `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`
	Url                  string     `protobuf:"bytes,5,opt,name=url,proto3" json:"url,omitempty"`
	Image                *ImageInfo `protobuf:"bytes,6,opt,name=image,proto3" json:"image,omitempty"`
	SecondTitle          string     `protobuf:"bytes,7,opt,name=secondTitle,proto3" json:"secondTitle,omitempty"`
	Premium              bool       `protobuf:"varint,8,opt,name=premium,proto3" json:"premium,omitempty"`
	Lang                 string     `protobuf:"bytes,9,opt,name=lang,proto3" json:"lang,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *Article) Reset()         { *m = Article{} }
func (m *Article) String() string { return proto.CompactTextString(m) }
func (*Article) ProtoMessage()    {}
func (*Article) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{3}
}
func (m *Article) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Article.Unmarshal(m, b)
}
func (m *Article) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Article.Marshal(b, m, deterministic)
}
func (dst *Article) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Article.Merge(dst, src)
}
func (m *Article) XXX_Size() int {
	return xxx_messageInfo_Article.Size(m)
}
func (m *Article) XXX_DiscardUnknown() {
	xxx_messageInfo_Article.DiscardUnknown(m)
}

var xxx_messageInfo_Article proto.InternalMessageInfo

func (m *Article) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Article) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Article) GetWriteTime() string {
	if m != nil {
		return m.WriteTime
	}
	return ""
}

func (m *Article) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

func (m *Article) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Article) GetImage() *ImageInfo {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *Article) GetSecondTitle() string {
	if m != nil {
		return m.SecondTitle
	}
	return ""
}

func (m *Article) GetPremium() bool {
	if m != nil {
		return m.Premium
	}
	return false
}

func (m *Article) GetLang() string {
	if m != nil {
		return m.Lang
	}
	return ""
}

// ArticleList - article list
type ArticleList struct {
	Articles             []*Article `protobuf:"bytes,1,rep,name=articles,proto3" json:"articles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *ArticleList) Reset()         { *m = ArticleList{} }
func (m *ArticleList) String() string { return proto.CompactTextString(m) }
func (*ArticleList) ProtoMessage()    {}
func (*ArticleList) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{4}
}
func (m *ArticleList) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ArticleList.Unmarshal(m, b)
}
func (m *ArticleList) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ArticleList.Marshal(b, m, deterministic)
}
func (dst *ArticleList) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ArticleList.Merge(dst, src)
}
func (m *ArticleList) XXX_Size() int {
	return xxx_messageInfo_ArticleList.Size(m)
}
func (m *ArticleList) XXX_DiscardUnknown() {
	xxx_messageInfo_ArticleList.DiscardUnknown(m)
}

var xxx_messageInfo_ArticleList proto.InternalMessageInfo

func (m *ArticleList) GetArticles() []*Article {
	if m != nil {
		return m.Articles
	}
	return nil
}

// ConfluenceUpdateItem - confluence all updates - item
type ConfluenceUpdateItem struct {
	Title                string   `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Summary              string   `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConfluenceUpdateItem) Reset()         { *m = ConfluenceUpdateItem{} }
func (m *ConfluenceUpdateItem) String() string { return proto.CompactTextString(m) }
func (*ConfluenceUpdateItem) ProtoMessage()    {}
func (*ConfluenceUpdateItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{5}
}
func (m *ConfluenceUpdateItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfluenceUpdateItem.Unmarshal(m, b)
}
func (m *ConfluenceUpdateItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfluenceUpdateItem.Marshal(b, m, deterministic)
}
func (dst *ConfluenceUpdateItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfluenceUpdateItem.Merge(dst, src)
}
func (m *ConfluenceUpdateItem) XXX_Size() int {
	return xxx_messageInfo_ConfluenceUpdateItem.Size(m)
}
func (m *ConfluenceUpdateItem) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfluenceUpdateItem.DiscardUnknown(m)
}

var xxx_messageInfo_ConfluenceUpdateItem proto.InternalMessageInfo

func (m *ConfluenceUpdateItem) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *ConfluenceUpdateItem) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *ConfluenceUpdateItem) GetSummary() string {
	if m != nil {
		return m.Summary
	}
	return ""
}

// ConfluenceUpdateGrouping - confluence all updates - grouping
type ConfluenceUpdateGrouping struct {
	Author               string                  `protobuf:"bytes,1,opt,name=author,proto3" json:"author,omitempty"`
	Items                []*ConfluenceUpdateItem `protobuf:"bytes,2,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ConfluenceUpdateGrouping) Reset()         { *m = ConfluenceUpdateGrouping{} }
func (m *ConfluenceUpdateGrouping) String() string { return proto.CompactTextString(m) }
func (*ConfluenceUpdateGrouping) ProtoMessage()    {}
func (*ConfluenceUpdateGrouping) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{6}
}
func (m *ConfluenceUpdateGrouping) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfluenceUpdateGrouping.Unmarshal(m, b)
}
func (m *ConfluenceUpdateGrouping) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfluenceUpdateGrouping.Marshal(b, m, deterministic)
}
func (dst *ConfluenceUpdateGrouping) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfluenceUpdateGrouping.Merge(dst, src)
}
func (m *ConfluenceUpdateGrouping) XXX_Size() int {
	return xxx_messageInfo_ConfluenceUpdateGrouping.Size(m)
}
func (m *ConfluenceUpdateGrouping) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfluenceUpdateGrouping.DiscardUnknown(m)
}

var xxx_messageInfo_ConfluenceUpdateGrouping proto.InternalMessageInfo

func (m *ConfluenceUpdateGrouping) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *ConfluenceUpdateGrouping) GetItems() []*ConfluenceUpdateItem {
	if m != nil {
		return m.Items
	}
	return nil
}

// ConfluenceAllUpdates - confluence all updates
type ConfluenceAllUpdates struct {
	Updates              []*ConfluenceUpdateGrouping `protobuf:"bytes,1,rep,name=updates,proto3" json:"updates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *ConfluenceAllUpdates) Reset()         { *m = ConfluenceAllUpdates{} }
func (m *ConfluenceAllUpdates) String() string { return proto.CompactTextString(m) }
func (*ConfluenceAllUpdates) ProtoMessage()    {}
func (*ConfluenceAllUpdates) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{7}
}
func (m *ConfluenceAllUpdates) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConfluenceAllUpdates.Unmarshal(m, b)
}
func (m *ConfluenceAllUpdates) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConfluenceAllUpdates.Marshal(b, m, deterministic)
}
func (dst *ConfluenceAllUpdates) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConfluenceAllUpdates.Merge(dst, src)
}
func (m *ConfluenceAllUpdates) XXX_Size() int {
	return xxx_messageInfo_ConfluenceAllUpdates.Size(m)
}
func (m *ConfluenceAllUpdates) XXX_DiscardUnknown() {
	xxx_messageInfo_ConfluenceAllUpdates.DiscardUnknown(m)
}

var xxx_messageInfo_ConfluenceAllUpdates proto.InternalMessageInfo

func (m *ConfluenceAllUpdates) GetUpdates() []*ConfluenceUpdateGrouping {
	if m != nil {
		return m.Updates
	}
	return nil
}

// YCCompanies - YC Companies
type YCCompanies struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Info                 string   `protobuf:"bytes,3,opt,name=info,proto3" json:"info,omitempty"`
	Batch                string   `protobuf:"bytes,4,opt,name=batch,proto3" json:"batch,omitempty"`
	Isapp                bool     `protobuf:"varint,5,opt,name=isapp,proto3" json:"isapp,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *YCCompanies) Reset()         { *m = YCCompanies{} }
func (m *YCCompanies) String() string { return proto.CompactTextString(m) }
func (*YCCompanies) ProtoMessage()    {}
func (*YCCompanies) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{8}
}
func (m *YCCompanies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_YCCompanies.Unmarshal(m, b)
}
func (m *YCCompanies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_YCCompanies.Marshal(b, m, deterministic)
}
func (dst *YCCompanies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_YCCompanies.Merge(dst, src)
}
func (m *YCCompanies) XXX_Size() int {
	return xxx_messageInfo_YCCompanies.Size(m)
}
func (m *YCCompanies) XXX_DiscardUnknown() {
	xxx_messageInfo_YCCompanies.DiscardUnknown(m)
}

var xxx_messageInfo_YCCompanies proto.InternalMessageInfo

func (m *YCCompanies) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *YCCompanies) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *YCCompanies) GetInfo() string {
	if m != nil {
		return m.Info
	}
	return ""
}

func (m *YCCompanies) GetBatch() string {
	if m != nil {
		return m.Batch
	}
	return ""
}

func (m *YCCompanies) GetIsapp() bool {
	if m != nil {
		return m.Isapp
	}
	return false
}

// CrunchBaseEmployee - CrunchBase Employee
type CrunchBaseEmployee struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string   `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Title                string   `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	StartDate            string   `protobuf:"bytes,4,opt,name=startDate,proto3" json:"startDate,omitempty"`
	EndDate              string   `protobuf:"bytes,5,opt,name=endDate,proto3" json:"endDate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrunchBaseEmployee) Reset()         { *m = CrunchBaseEmployee{} }
func (m *CrunchBaseEmployee) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseEmployee) ProtoMessage()    {}
func (*CrunchBaseEmployee) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{9}
}
func (m *CrunchBaseEmployee) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseEmployee.Unmarshal(m, b)
}
func (m *CrunchBaseEmployee) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseEmployee.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseEmployee) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseEmployee.Merge(dst, src)
}
func (m *CrunchBaseEmployee) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseEmployee.Size(m)
}
func (m *CrunchBaseEmployee) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseEmployee.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseEmployee proto.InternalMessageInfo

func (m *CrunchBaseEmployee) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CrunchBaseEmployee) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CrunchBaseEmployee) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *CrunchBaseEmployee) GetStartDate() string {
	if m != nil {
		return m.StartDate
	}
	return ""
}

func (m *CrunchBaseEmployee) GetEndDate() string {
	if m != nil {
		return m.EndDate
	}
	return ""
}

// CrunchBaseInvestment - CrunchBase Investment
type CrunchBaseInvestment struct {
	AnnouncedDate        string   `protobuf:"bytes,1,opt,name=announcedDate,proto3" json:"announcedDate,omitempty"`
	OrganizationName     string   `protobuf:"bytes,2,opt,name=organizationName,proto3" json:"organizationName,omitempty"`
	LeadInvestor         bool     `protobuf:"varint,3,opt,name=leadInvestor,proto3" json:"leadInvestor,omitempty"`
	FundingRound         string   `protobuf:"bytes,4,opt,name=fundingRound,proto3" json:"fundingRound,omitempty"`
	MoneyRaised          string   `protobuf:"bytes,5,opt,name=moneyRaised,proto3" json:"moneyRaised,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrunchBaseInvestment) Reset()         { *m = CrunchBaseInvestment{} }
func (m *CrunchBaseInvestment) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseInvestment) ProtoMessage()    {}
func (*CrunchBaseInvestment) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{10}
}
func (m *CrunchBaseInvestment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseInvestment.Unmarshal(m, b)
}
func (m *CrunchBaseInvestment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseInvestment.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseInvestment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseInvestment.Merge(dst, src)
}
func (m *CrunchBaseInvestment) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseInvestment.Size(m)
}
func (m *CrunchBaseInvestment) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseInvestment.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseInvestment proto.InternalMessageInfo

func (m *CrunchBaseInvestment) GetAnnouncedDate() string {
	if m != nil {
		return m.AnnouncedDate
	}
	return ""
}

func (m *CrunchBaseInvestment) GetOrganizationName() string {
	if m != nil {
		return m.OrganizationName
	}
	return ""
}

func (m *CrunchBaseInvestment) GetLeadInvestor() bool {
	if m != nil {
		return m.LeadInvestor
	}
	return false
}

func (m *CrunchBaseInvestment) GetFundingRound() string {
	if m != nil {
		return m.FundingRound
	}
	return ""
}

func (m *CrunchBaseInvestment) GetMoneyRaised() string {
	if m != nil {
		return m.MoneyRaised
	}
	return ""
}

// CrunchBaseAcquisition - CrunchBase Acquisition
type CrunchBaseAcquisition struct {
	AcquiredOrganizationName  string   `protobuf:"bytes,1,opt,name=acquiredOrganizationName,proto3" json:"acquiredOrganizationName,omitempty"`
	AcquiredOrganizationCode  string   `protobuf:"bytes,2,opt,name=acquiredOrganizationCode,proto3" json:"acquiredOrganizationCode,omitempty"`
	AnnouncedDate             string   `protobuf:"bytes,3,opt,name=announcedDate,proto3" json:"announcedDate,omitempty"`
	Price                     string   `protobuf:"bytes,4,opt,name=price,proto3" json:"price,omitempty"`
	AcquiringOrganizationName string   `protobuf:"bytes,5,opt,name=acquiringOrganizationName,proto3" json:"acquiringOrganizationName,omitempty"`
	AcquiringOrganizationCode string   `protobuf:"bytes,6,opt,name=acquiringOrganizationCode,proto3" json:"acquiringOrganizationCode,omitempty"`
	XXX_NoUnkeyedLiteral      struct{} `json:"-"`
	XXX_unrecognized          []byte   `json:"-"`
	XXX_sizecache             int32    `json:"-"`
}

func (m *CrunchBaseAcquisition) Reset()         { *m = CrunchBaseAcquisition{} }
func (m *CrunchBaseAcquisition) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseAcquisition) ProtoMessage()    {}
func (*CrunchBaseAcquisition) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{11}
}
func (m *CrunchBaseAcquisition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseAcquisition.Unmarshal(m, b)
}
func (m *CrunchBaseAcquisition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseAcquisition.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseAcquisition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseAcquisition.Merge(dst, src)
}
func (m *CrunchBaseAcquisition) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseAcquisition.Size(m)
}
func (m *CrunchBaseAcquisition) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseAcquisition.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseAcquisition proto.InternalMessageInfo

func (m *CrunchBaseAcquisition) GetAcquiredOrganizationName() string {
	if m != nil {
		return m.AcquiredOrganizationName
	}
	return ""
}

func (m *CrunchBaseAcquisition) GetAcquiredOrganizationCode() string {
	if m != nil {
		return m.AcquiredOrganizationCode
	}
	return ""
}

func (m *CrunchBaseAcquisition) GetAnnouncedDate() string {
	if m != nil {
		return m.AnnouncedDate
	}
	return ""
}

func (m *CrunchBaseAcquisition) GetPrice() string {
	if m != nil {
		return m.Price
	}
	return ""
}

func (m *CrunchBaseAcquisition) GetAcquiringOrganizationName() string {
	if m != nil {
		return m.AcquiringOrganizationName
	}
	return ""
}

func (m *CrunchBaseAcquisition) GetAcquiringOrganizationCode() string {
	if m != nil {
		return m.AcquiringOrganizationCode
	}
	return ""
}

// CrunchBaseInvestor - CrunchBase Investor
type CrunchBaseInvestor struct {
	InvestorName         string   `protobuf:"bytes,1,opt,name=investorName,proto3" json:"investorName,omitempty"`
	LeadInvestor         bool     `protobuf:"varint,2,opt,name=leadInvestor,proto3" json:"leadInvestor,omitempty"`
	Partners             []string `protobuf:"bytes,3,rep,name=Partners,proto3" json:"Partners,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrunchBaseInvestor) Reset()         { *m = CrunchBaseInvestor{} }
func (m *CrunchBaseInvestor) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseInvestor) ProtoMessage()    {}
func (*CrunchBaseInvestor) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{12}
}
func (m *CrunchBaseInvestor) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseInvestor.Unmarshal(m, b)
}
func (m *CrunchBaseInvestor) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseInvestor.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseInvestor) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseInvestor.Merge(dst, src)
}
func (m *CrunchBaseInvestor) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseInvestor.Size(m)
}
func (m *CrunchBaseInvestor) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseInvestor.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseInvestor proto.InternalMessageInfo

func (m *CrunchBaseInvestor) GetInvestorName() string {
	if m != nil {
		return m.InvestorName
	}
	return ""
}

func (m *CrunchBaseInvestor) GetLeadInvestor() bool {
	if m != nil {
		return m.LeadInvestor
	}
	return false
}

func (m *CrunchBaseInvestor) GetPartners() []string {
	if m != nil {
		return m.Partners
	}
	return nil
}

// CrunchBaseFundingRound - CrunchBase FundingRound
type CrunchBaseFundingRound struct {
	AnnouncedDate        string                `protobuf:"bytes,1,opt,name=announcedDate,proto3" json:"announcedDate,omitempty"`
	TransactionName      string                `protobuf:"bytes,2,opt,name=transactionName,proto3" json:"transactionName,omitempty"`
	MoneyRaised          string                `protobuf:"bytes,3,opt,name=moneyRaised,proto3" json:"moneyRaised,omitempty"`
	Investors            []*CrunchBaseInvestor `protobuf:"bytes,100,rep,name=investors,proto3" json:"investors,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *CrunchBaseFundingRound) Reset()         { *m = CrunchBaseFundingRound{} }
func (m *CrunchBaseFundingRound) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseFundingRound) ProtoMessage()    {}
func (*CrunchBaseFundingRound) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{13}
}
func (m *CrunchBaseFundingRound) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseFundingRound.Unmarshal(m, b)
}
func (m *CrunchBaseFundingRound) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseFundingRound.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseFundingRound) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseFundingRound.Merge(dst, src)
}
func (m *CrunchBaseFundingRound) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseFundingRound.Size(m)
}
func (m *CrunchBaseFundingRound) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseFundingRound.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseFundingRound proto.InternalMessageInfo

func (m *CrunchBaseFundingRound) GetAnnouncedDate() string {
	if m != nil {
		return m.AnnouncedDate
	}
	return ""
}

func (m *CrunchBaseFundingRound) GetTransactionName() string {
	if m != nil {
		return m.TransactionName
	}
	return ""
}

func (m *CrunchBaseFundingRound) GetMoneyRaised() string {
	if m != nil {
		return m.MoneyRaised
	}
	return ""
}

func (m *CrunchBaseFundingRound) GetInvestors() []*CrunchBaseInvestor {
	if m != nil {
		return m.Investors
	}
	return nil
}

// CrunchBaseOrganization - CrunchBase Organization
type CrunchBaseOrganization struct {
	Name                 string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Code                 string                    `protobuf:"bytes,2,opt,name=code,proto3" json:"code,omitempty"`
	Categories           []string                  `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
	HeadquartersRegions  []string                  `protobuf:"bytes,4,rep,name=headquartersRegions,proto3" json:"headquartersRegions,omitempty"`
	FoundedDate          string                    `protobuf:"bytes,5,opt,name=foundedDate,proto3" json:"foundedDate,omitempty"`
	Founders             []string                  `protobuf:"bytes,6,rep,name=founders,proto3" json:"founders,omitempty"`
	OperatingStatus      string                    `protobuf:"bytes,7,opt,name=operatingStatus,proto3" json:"operatingStatus,omitempty"`
	FundingStatus        string                    `protobuf:"bytes,8,opt,name=fundingStatus,proto3" json:"fundingStatus,omitempty"`
	LastFundingType      string                    `protobuf:"bytes,9,opt,name=lastFundingType,proto3" json:"lastFundingType,omitempty"`
	LegalName            string                    `protobuf:"bytes,10,opt,name=legalName,proto3" json:"legalName,omitempty"`
	StockSymbol          string                    `protobuf:"bytes,100,opt,name=stockSymbol,proto3" json:"stockSymbol,omitempty"`
	ValuationIPO         string                    `protobuf:"bytes,101,opt,name=valuationIPO,proto3" json:"valuationIPO,omitempty"`
	PriceIPO             string                    `protobuf:"bytes,102,opt,name=priceIPO,proto3" json:"priceIPO,omitempty"`
	DateIPO              string                    `protobuf:"bytes,103,opt,name=dateIPO,proto3" json:"dateIPO,omitempty"`
	MoneyRaisedIPO       string                    `protobuf:"bytes,104,opt,name=moneyRaisedIPO,proto3" json:"moneyRaisedIPO,omitempty"`
	FundingRounds        []*CrunchBaseFundingRound `protobuf:"bytes,200,rep,name=fundingRounds,proto3" json:"fundingRounds,omitempty"`
	CurEmployees         []*CrunchBaseEmployee     `protobuf:"bytes,301,rep,name=curEmployees,proto3" json:"curEmployees,omitempty"`
	BoardMembers         []*CrunchBaseEmployee     `protobuf:"bytes,401,rep,name=boardMembers,proto3" json:"boardMembers,omitempty"`
	PastEmployees        []*CrunchBaseEmployee     `protobuf:"bytes,501,rep,name=pastEmployees,proto3" json:"pastEmployees,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CrunchBaseOrganization) Reset()         { *m = CrunchBaseOrganization{} }
func (m *CrunchBaseOrganization) String() string { return proto.CompactTextString(m) }
func (*CrunchBaseOrganization) ProtoMessage()    {}
func (*CrunchBaseOrganization) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{14}
}
func (m *CrunchBaseOrganization) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrunchBaseOrganization.Unmarshal(m, b)
}
func (m *CrunchBaseOrganization) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrunchBaseOrganization.Marshal(b, m, deterministic)
}
func (dst *CrunchBaseOrganization) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrunchBaseOrganization.Merge(dst, src)
}
func (m *CrunchBaseOrganization) XXX_Size() int {
	return xxx_messageInfo_CrunchBaseOrganization.Size(m)
}
func (m *CrunchBaseOrganization) XXX_DiscardUnknown() {
	xxx_messageInfo_CrunchBaseOrganization.DiscardUnknown(m)
}

var xxx_messageInfo_CrunchBaseOrganization proto.InternalMessageInfo

func (m *CrunchBaseOrganization) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CrunchBaseOrganization) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *CrunchBaseOrganization) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func (m *CrunchBaseOrganization) GetHeadquartersRegions() []string {
	if m != nil {
		return m.HeadquartersRegions
	}
	return nil
}

func (m *CrunchBaseOrganization) GetFoundedDate() string {
	if m != nil {
		return m.FoundedDate
	}
	return ""
}

func (m *CrunchBaseOrganization) GetFounders() []string {
	if m != nil {
		return m.Founders
	}
	return nil
}

func (m *CrunchBaseOrganization) GetOperatingStatus() string {
	if m != nil {
		return m.OperatingStatus
	}
	return ""
}

func (m *CrunchBaseOrganization) GetFundingStatus() string {
	if m != nil {
		return m.FundingStatus
	}
	return ""
}

func (m *CrunchBaseOrganization) GetLastFundingType() string {
	if m != nil {
		return m.LastFundingType
	}
	return ""
}

func (m *CrunchBaseOrganization) GetLegalName() string {
	if m != nil {
		return m.LegalName
	}
	return ""
}

func (m *CrunchBaseOrganization) GetStockSymbol() string {
	if m != nil {
		return m.StockSymbol
	}
	return ""
}

func (m *CrunchBaseOrganization) GetValuationIPO() string {
	if m != nil {
		return m.ValuationIPO
	}
	return ""
}

func (m *CrunchBaseOrganization) GetPriceIPO() string {
	if m != nil {
		return m.PriceIPO
	}
	return ""
}

func (m *CrunchBaseOrganization) GetDateIPO() string {
	if m != nil {
		return m.DateIPO
	}
	return ""
}

func (m *CrunchBaseOrganization) GetMoneyRaisedIPO() string {
	if m != nil {
		return m.MoneyRaisedIPO
	}
	return ""
}

func (m *CrunchBaseOrganization) GetFundingRounds() []*CrunchBaseFundingRound {
	if m != nil {
		return m.FundingRounds
	}
	return nil
}

func (m *CrunchBaseOrganization) GetCurEmployees() []*CrunchBaseEmployee {
	if m != nil {
		return m.CurEmployees
	}
	return nil
}

func (m *CrunchBaseOrganization) GetBoardMembers() []*CrunchBaseEmployee {
	if m != nil {
		return m.BoardMembers
	}
	return nil
}

func (m *CrunchBaseOrganization) GetPastEmployees() []*CrunchBaseEmployee {
	if m != nil {
		return m.PastEmployees
	}
	return nil
}

// RequestTranslate - request translate
type RequestTranslate struct {
	// text - source text
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// platform - it's like google
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// srcLang - source language
	SrcLang string `protobuf:"bytes,3,opt,name=srcLang,proto3" json:"srcLang,omitempty"`
	// destLang - destination language
	DestLang string `protobuf:"bytes,4,opt,name=destLang,proto3" json:"destLang,omitempty"`
	// token - You need to have a valid token in order to get back correctly
	Token                string   `protobuf:"bytes,100,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTranslate) Reset()         { *m = RequestTranslate{} }
func (m *RequestTranslate) String() string { return proto.CompactTextString(m) }
func (*RequestTranslate) ProtoMessage()    {}
func (*RequestTranslate) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{15}
}
func (m *RequestTranslate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTranslate.Unmarshal(m, b)
}
func (m *RequestTranslate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTranslate.Marshal(b, m, deterministic)
}
func (dst *RequestTranslate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTranslate.Merge(dst, src)
}
func (m *RequestTranslate) XXX_Size() int {
	return xxx_messageInfo_RequestTranslate.Size(m)
}
func (m *RequestTranslate) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTranslate.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTranslate proto.InternalMessageInfo

func (m *RequestTranslate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RequestTranslate) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *RequestTranslate) GetSrcLang() string {
	if m != nil {
		return m.SrcLang
	}
	return ""
}

func (m *RequestTranslate) GetDestLang() string {
	if m != nil {
		return m.DestLang
	}
	return ""
}

func (m *RequestTranslate) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// ReplyTranslate - reply translate
type ReplyTranslate struct {
	// text - destination text
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyTranslate) Reset()         { *m = ReplyTranslate{} }
func (m *ReplyTranslate) String() string { return proto.CompactTextString(m) }
func (*ReplyTranslate) ProtoMessage()    {}
func (*ReplyTranslate) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{16}
}
func (m *ReplyTranslate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyTranslate.Unmarshal(m, b)
}
func (m *ReplyTranslate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyTranslate.Marshal(b, m, deterministic)
}
func (dst *ReplyTranslate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyTranslate.Merge(dst, src)
}
func (m *ReplyTranslate) XXX_Size() int {
	return xxx_messageInfo_ReplyTranslate.Size(m)
}
func (m *ReplyTranslate) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyTranslate.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyTranslate proto.InternalMessageInfo

func (m *ReplyTranslate) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// RequestArticle - request article
type RequestArticle struct {
	// url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// is need attach jquery
	AttachJQuery bool `protobuf:"varint,2,opt,name=attachJQuery,proto3" json:"attachJQuery,omitempty"`
	// token - You need to have a valid token in order to get back correctly
	Token                string   `protobuf:"bytes,100,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestArticle) Reset()         { *m = RequestArticle{} }
func (m *RequestArticle) String() string { return proto.CompactTextString(m) }
func (*RequestArticle) ProtoMessage()    {}
func (*RequestArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{17}
}
func (m *RequestArticle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestArticle.Unmarshal(m, b)
}
func (m *RequestArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestArticle.Marshal(b, m, deterministic)
}
func (dst *RequestArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestArticle.Merge(dst, src)
}
func (m *RequestArticle) XXX_Size() int {
	return xxx_messageInfo_RequestArticle.Size(m)
}
func (m *RequestArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestArticle.DiscardUnknown(m)
}

var xxx_messageInfo_RequestArticle proto.InternalMessageInfo

func (m *RequestArticle) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *RequestArticle) GetAttachJQuery() bool {
	if m != nil {
		return m.AttachJQuery
	}
	return false
}

func (m *RequestArticle) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// ReplyArticle - reply article
type ReplyArticle struct {
	// result
	Result *ExportArticleResult `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	// totalLength - If the message is too long,
	// it will send data in multiple msg, this is the total length.
	TotalLength int32 `protobuf:"varint,2,opt,name=totalLength,proto3" json:"totalLength,omitempty"`
	// curStart - The starting point of the current data (in bytes).
	CurStart int32 `protobuf:"varint,3,opt,name=curStart,proto3" json:"curStart,omitempty"`
	// curLength - The length of the current data (in bytes).
	CurLength int32 `protobuf:"varint,4,opt,name=curLength,proto3" json:"curLength,omitempty"`
	// hashData - This is the hash of each paragraph.
	HashData string `protobuf:"bytes,5,opt,name=hashData,proto3" json:"hashData,omitempty"`
	// totalHashData - If multiple messages return data,
	// this is the hash value of all data, only sent in the last message.
	TotalHashData string `protobuf:"bytes,6,opt,name=totalHashData,proto3" json:"totalHashData,omitempty"`
	// data
	Data                 []byte   `protobuf:"bytes,7,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyArticle) Reset()         { *m = ReplyArticle{} }
func (m *ReplyArticle) String() string { return proto.CompactTextString(m) }
func (*ReplyArticle) ProtoMessage()    {}
func (*ReplyArticle) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{18}
}
func (m *ReplyArticle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyArticle.Unmarshal(m, b)
}
func (m *ReplyArticle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyArticle.Marshal(b, m, deterministic)
}
func (dst *ReplyArticle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyArticle.Merge(dst, src)
}
func (m *ReplyArticle) XXX_Size() int {
	return xxx_messageInfo_ReplyArticle.Size(m)
}
func (m *ReplyArticle) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyArticle.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyArticle proto.InternalMessageInfo

func (m *ReplyArticle) GetResult() *ExportArticleResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *ReplyArticle) GetTotalLength() int32 {
	if m != nil {
		return m.TotalLength
	}
	return 0
}

func (m *ReplyArticle) GetCurStart() int32 {
	if m != nil {
		return m.CurStart
	}
	return 0
}

func (m *ReplyArticle) GetCurLength() int32 {
	if m != nil {
		return m.CurLength
	}
	return 0
}

func (m *ReplyArticle) GetHashData() string {
	if m != nil {
		return m.HashData
	}
	return ""
}

func (m *ReplyArticle) GetTotalHashData() string {
	if m != nil {
		return m.TotalHashData
	}
	return ""
}

func (m *ReplyArticle) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

// RequestArticles - request articles
type RequestArticles struct {
	// url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"` // Deprecated: Do not use.
	// is need attach jquery
	AttachJQuery bool `protobuf:"varint,2,opt,name=attachJQuery,proto3" json:"attachJQuery,omitempty"` // Deprecated: Do not use.
	// website
	Website string `protobuf:"bytes,3,opt,name=website,proto3" json:"website,omitempty"`
	// token - You need to have a valid token in order to get back correctly
	Token                string   `protobuf:"bytes,100,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestArticles) Reset()         { *m = RequestArticles{} }
func (m *RequestArticles) String() string { return proto.CompactTextString(m) }
func (*RequestArticles) ProtoMessage()    {}
func (*RequestArticles) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{19}
}
func (m *RequestArticles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestArticles.Unmarshal(m, b)
}
func (m *RequestArticles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestArticles.Marshal(b, m, deterministic)
}
func (dst *RequestArticles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestArticles.Merge(dst, src)
}
func (m *RequestArticles) XXX_Size() int {
	return xxx_messageInfo_RequestArticles.Size(m)
}
func (m *RequestArticles) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestArticles.DiscardUnknown(m)
}

var xxx_messageInfo_RequestArticles proto.InternalMessageInfo

// Deprecated: Do not use.
func (m *RequestArticles) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

// Deprecated: Do not use.
func (m *RequestArticles) GetAttachJQuery() bool {
	if m != nil {
		return m.AttachJQuery
	}
	return false
}

func (m *RequestArticles) GetWebsite() string {
	if m != nil {
		return m.Website
	}
	return ""
}

func (m *RequestArticles) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

// ReplyArticles - reply articles
type ReplyArticles struct {
	// articles
	Articles             *ArticleList `protobuf:"bytes,1,opt,name=articles,proto3" json:"articles,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *ReplyArticles) Reset()         { *m = ReplyArticles{} }
func (m *ReplyArticles) String() string { return proto.CompactTextString(m) }
func (*ReplyArticles) ProtoMessage()    {}
func (*ReplyArticles) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{20}
}
func (m *ReplyArticles) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyArticles.Unmarshal(m, b)
}
func (m *ReplyArticles) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyArticles.Marshal(b, m, deterministic)
}
func (dst *ReplyArticles) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyArticles.Merge(dst, src)
}
func (m *ReplyArticles) XXX_Size() int {
	return xxx_messageInfo_ReplyArticles.Size(m)
}
func (m *ReplyArticles) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyArticles.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyArticles proto.InternalMessageInfo

func (m *ReplyArticles) GetArticles() *ArticleList {
	if m != nil {
		return m.Articles
	}
	return nil
}

// RequestCrunchBaseCompany - request a company infomation in crunchbase
type RequestCrunchBaseCompany struct {
	Search               string   `protobuf:"bytes,1,opt,name=search,proto3" json:"search,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestCrunchBaseCompany) Reset()         { *m = RequestCrunchBaseCompany{} }
func (m *RequestCrunchBaseCompany) String() string { return proto.CompactTextString(m) }
func (*RequestCrunchBaseCompany) ProtoMessage()    {}
func (*RequestCrunchBaseCompany) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{21}
}
func (m *RequestCrunchBaseCompany) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestCrunchBaseCompany.Unmarshal(m, b)
}
func (m *RequestCrunchBaseCompany) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestCrunchBaseCompany.Marshal(b, m, deterministic)
}
func (dst *RequestCrunchBaseCompany) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestCrunchBaseCompany.Merge(dst, src)
}
func (m *RequestCrunchBaseCompany) XXX_Size() int {
	return xxx_messageInfo_RequestCrunchBaseCompany.Size(m)
}
func (m *RequestCrunchBaseCompany) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestCrunchBaseCompany.DiscardUnknown(m)
}

var xxx_messageInfo_RequestCrunchBaseCompany proto.InternalMessageInfo

func (m *RequestCrunchBaseCompany) GetSearch() string {
	if m != nil {
		return m.Search
	}
	return ""
}

// RequestTranslate2 - request translate
type RequestTranslate2 struct {
	// text - source text
	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	// platform - it's like google
	Platform string `protobuf:"bytes,2,opt,name=platform,proto3" json:"platform,omitempty"`
	// srcLang - source language
	SrcLang string `protobuf:"bytes,3,opt,name=srcLang,proto3" json:"srcLang,omitempty"`
	// destLang - destination language
	DestLang             string   `protobuf:"bytes,4,opt,name=destLang,proto3" json:"destLang,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RequestTranslate2) Reset()         { *m = RequestTranslate2{} }
func (m *RequestTranslate2) String() string { return proto.CompactTextString(m) }
func (*RequestTranslate2) ProtoMessage()    {}
func (*RequestTranslate2) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{22}
}
func (m *RequestTranslate2) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestTranslate2.Unmarshal(m, b)
}
func (m *RequestTranslate2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestTranslate2.Marshal(b, m, deterministic)
}
func (dst *RequestTranslate2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestTranslate2.Merge(dst, src)
}
func (m *RequestTranslate2) XXX_Size() int {
	return xxx_messageInfo_RequestTranslate2.Size(m)
}
func (m *RequestTranslate2) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestTranslate2.DiscardUnknown(m)
}

var xxx_messageInfo_RequestTranslate2 proto.InternalMessageInfo

func (m *RequestTranslate2) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *RequestTranslate2) GetPlatform() string {
	if m != nil {
		return m.Platform
	}
	return ""
}

func (m *RequestTranslate2) GetSrcLang() string {
	if m != nil {
		return m.SrcLang
	}
	return ""
}

func (m *RequestTranslate2) GetDestLang() string {
	if m != nil {
		return m.DestLang
	}
	return ""
}

// TranslateResult - reply translate
type TranslateResult struct {
	// text - destination text
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TranslateResult) Reset()         { *m = TranslateResult{} }
func (m *TranslateResult) String() string { return proto.CompactTextString(m) }
func (*TranslateResult) ProtoMessage()    {}
func (*TranslateResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{23}
}
func (m *TranslateResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TranslateResult.Unmarshal(m, b)
}
func (m *TranslateResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TranslateResult.Marshal(b, m, deterministic)
}
func (dst *TranslateResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TranslateResult.Merge(dst, src)
}
func (m *TranslateResult) XXX_Size() int {
	return xxx_messageInfo_TranslateResult.Size(m)
}
func (m *TranslateResult) XXX_DiscardUnknown() {
	xxx_messageInfo_TranslateResult.DiscardUnknown(m)
}

var xxx_messageInfo_TranslateResult proto.InternalMessageInfo

func (m *TranslateResult) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

// AnalyzePage - analyze page
type AnalyzePage struct {
	// url - url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// delay = delay in seconds
	Delay int32 `protobuf:"varint,2,opt,name=delay,proto3" json:"delay,omitempty"`
	// viewportWidth -
	ViewportWidth int32 `protobuf:"varint,3,opt,name=viewportWidth,proto3" json:"viewportWidth,omitempty"`
	// viewportHeight -
	ViewportHeight int32 `protobuf:"varint,4,opt,name=viewportHeight,proto3" json:"viewportHeight,omitempty"`
	// deviceScaleFactor -
	DeviceScaleFactor float32 `protobuf:"fixed32,5,opt,name=deviceScaleFactor,proto3" json:"deviceScaleFactor,omitempty"`
	// isMobile -
	IsMobile bool `protobuf:"varint,6,opt,name=isMobile,proto3" json:"isMobile,omitempty"`
	// isLandscape -
	IsLandscape bool `protobuf:"varint,7,opt,name=isLandscape,proto3" json:"isLandscape,omitempty"`
	// needScreenshots -
	NeedScreenshots bool `protobuf:"varint,8,opt,name=needScreenshots,proto3" json:"needScreenshots,omitempty"`
	// needLogs -
	NeedLogs bool `protobuf:"varint,9,opt,name=needLogs,proto3" json:"needLogs,omitempty"`
	// timeout - timeout in secend
	Timeout              int32    `protobuf:"varint,10,opt,name=timeout,proto3" json:"timeout,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyzePage) Reset()         { *m = AnalyzePage{} }
func (m *AnalyzePage) String() string { return proto.CompactTextString(m) }
func (*AnalyzePage) ProtoMessage()    {}
func (*AnalyzePage) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{24}
}
func (m *AnalyzePage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzePage.Unmarshal(m, b)
}
func (m *AnalyzePage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzePage.Marshal(b, m, deterministic)
}
func (dst *AnalyzePage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzePage.Merge(dst, src)
}
func (m *AnalyzePage) XXX_Size() int {
	return xxx_messageInfo_AnalyzePage.Size(m)
}
func (m *AnalyzePage) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzePage.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzePage proto.InternalMessageInfo

func (m *AnalyzePage) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AnalyzePage) GetDelay() int32 {
	if m != nil {
		return m.Delay
	}
	return 0
}

func (m *AnalyzePage) GetViewportWidth() int32 {
	if m != nil {
		return m.ViewportWidth
	}
	return 0
}

func (m *AnalyzePage) GetViewportHeight() int32 {
	if m != nil {
		return m.ViewportHeight
	}
	return 0
}

func (m *AnalyzePage) GetDeviceScaleFactor() float32 {
	if m != nil {
		return m.DeviceScaleFactor
	}
	return 0
}

func (m *AnalyzePage) GetIsMobile() bool {
	if m != nil {
		return m.IsMobile
	}
	return false
}

func (m *AnalyzePage) GetIsLandscape() bool {
	if m != nil {
		return m.IsLandscape
	}
	return false
}

func (m *AnalyzePage) GetNeedScreenshots() bool {
	if m != nil {
		return m.NeedScreenshots
	}
	return false
}

func (m *AnalyzePage) GetNeedLogs() bool {
	if m != nil {
		return m.NeedLogs
	}
	return false
}

func (m *AnalyzePage) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

// AnalyzeScreenshot - screenshot
type AnalyzeScreenshot struct {
	// name - name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// type - type
	Type AnalyzeScreenshotType `protobuf:"varint,2,opt,name=type,proto3,enum=jarviscrawlercore.AnalyzeScreenshotType" json:"type,omitempty"`
	// buf - buffer
	Buf                  []byte   `protobuf:"bytes,3,opt,name=buf,proto3" json:"buf,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyzeScreenshot) Reset()         { *m = AnalyzeScreenshot{} }
func (m *AnalyzeScreenshot) String() string { return proto.CompactTextString(m) }
func (*AnalyzeScreenshot) ProtoMessage()    {}
func (*AnalyzeScreenshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{25}
}
func (m *AnalyzeScreenshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeScreenshot.Unmarshal(m, b)
}
func (m *AnalyzeScreenshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeScreenshot.Marshal(b, m, deterministic)
}
func (dst *AnalyzeScreenshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeScreenshot.Merge(dst, src)
}
func (m *AnalyzeScreenshot) XXX_Size() int {
	return xxx_messageInfo_AnalyzeScreenshot.Size(m)
}
func (m *AnalyzeScreenshot) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeScreenshot.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeScreenshot proto.InternalMessageInfo

func (m *AnalyzeScreenshot) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AnalyzeScreenshot) GetType() AnalyzeScreenshotType {
	if m != nil {
		return m.Type
	}
	return AnalyzeScreenshotType_AST_JPG
}

func (m *AnalyzeScreenshot) GetBuf() []byte {
	if m != nil {
		return m.Buf
	}
	return nil
}

// AnalyzeImage - analyze request infomation
type AnalyzeReqInfo struct {
	// url - url
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	// downloadTime - download time
	DownloadTime int32 `protobuf:"varint,2,opt,name=downloadTime,proto3" json:"downloadTime,omitempty"`
	// bufBytes - buffer bytes
	BufBytes int32 `protobuf:"varint,3,opt,name=bufBytes,proto3" json:"bufBytes,omitempty"`
	// status - http status
	Status int32 `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`
	// startTime - start time
	StartTime int64 `protobuf:"varint,5,opt,name=startTime,proto3" json:"startTime,omitempty"`
	// isGZip - is gzip
	IsGZip bool `protobuf:"varint,6,opt,name=isGZip,proto3" json:"isGZip,omitempty"`
	// contentType - Content-Type
	ContentType string `protobuf:"bytes,7,opt,name=contentType,proto3" json:"contentType,omitempty"`
	// ipaddr - ip address, it's like 127.0.0.1;192.168.0.1;
	Ipaddr string `protobuf:"bytes,8,opt,name=ipaddr,proto3" json:"ipaddr,omitempty"`
	// remoteaddr - remote address, it's like 127.0.0.1:443
	Remoteaddr string `protobuf:"bytes,9,opt,name=remoteaddr,proto3" json:"remoteaddr,omitempty"`
	// imgWidth -
	ImgWidth int32 `protobuf:"varint,100,opt,name=imgWidth,proto3" json:"imgWidth,omitempty"`
	// imgHeight -
	ImgHeight            int32    `protobuf:"varint,101,opt,name=imgHeight,proto3" json:"imgHeight,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnalyzeReqInfo) Reset()         { *m = AnalyzeReqInfo{} }
func (m *AnalyzeReqInfo) String() string { return proto.CompactTextString(m) }
func (*AnalyzeReqInfo) ProtoMessage()    {}
func (*AnalyzeReqInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{26}
}
func (m *AnalyzeReqInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnalyzeReqInfo.Unmarshal(m, b)
}
func (m *AnalyzeReqInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnalyzeReqInfo.Marshal(b, m, deterministic)
}
func (dst *AnalyzeReqInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnalyzeReqInfo.Merge(dst, src)
}
func (m *AnalyzeReqInfo) XXX_Size() int {
	return xxx_messageInfo_AnalyzeReqInfo.Size(m)
}
func (m *AnalyzeReqInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_AnalyzeReqInfo.DiscardUnknown(m)
}

var xxx_messageInfo_AnalyzeReqInfo proto.InternalMessageInfo

func (m *AnalyzeReqInfo) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *AnalyzeReqInfo) GetDownloadTime() int32 {
	if m != nil {
		return m.DownloadTime
	}
	return 0
}

func (m *AnalyzeReqInfo) GetBufBytes() int32 {
	if m != nil {
		return m.BufBytes
	}
	return 0
}

func (m *AnalyzeReqInfo) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *AnalyzeReqInfo) GetStartTime() int64 {
	if m != nil {
		return m.StartTime
	}
	return 0
}

func (m *AnalyzeReqInfo) GetIsGZip() bool {
	if m != nil {
		return m.IsGZip
	}
	return false
}

func (m *AnalyzeReqInfo) GetContentType() string {
	if m != nil {
		return m.ContentType
	}
	return ""
}

func (m *AnalyzeReqInfo) GetIpaddr() string {
	if m != nil {
		return m.Ipaddr
	}
	return ""
}

func (m *AnalyzeReqInfo) GetRemoteaddr() string {
	if m != nil {
		return m.Remoteaddr
	}
	return ""
}

func (m *AnalyzeReqInfo) GetImgWidth() int32 {
	if m != nil {
		return m.ImgWidth
	}
	return 0
}

func (m *AnalyzeReqInfo) GetImgHeight() int32 {
	if m != nil {
		return m.ImgHeight
	}
	return 0
}

// ReplyAnalyzePage - reply analyze page
type ReplyAnalyzePage struct {
	// pageTime - page time
	PageTime int32 `protobuf:"varint,1,opt,name=pageTime,proto3" json:"pageTime,omitempty"`
	// pageBytes - page bytes
	PageBytes int32 `protobuf:"varint,2,opt,name=pageBytes,proto3" json:"pageBytes,omitempty"`
	// errs - error list
	Errs []string `protobuf:"bytes,100,rep,name=errs,proto3" json:"errs,omitempty"`
	// reqs - request list
	Reqs []*AnalyzeReqInfo `protobuf:"bytes,101,rep,name=reqs,proto3" json:"reqs,omitempty"`
	// screenshots - screenshot list
	Screenshots []*AnalyzeScreenshot `protobuf:"bytes,102,rep,name=screenshots,proto3" json:"screenshots,omitempty"`
	// logs - console.log list
	Logs                 []string `protobuf:"bytes,103,rep,name=logs,proto3" json:"logs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReplyAnalyzePage) Reset()         { *m = ReplyAnalyzePage{} }
func (m *ReplyAnalyzePage) String() string { return proto.CompactTextString(m) }
func (*ReplyAnalyzePage) ProtoMessage()    {}
func (*ReplyAnalyzePage) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{27}
}
func (m *ReplyAnalyzePage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyAnalyzePage.Unmarshal(m, b)
}
func (m *ReplyAnalyzePage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyAnalyzePage.Marshal(b, m, deterministic)
}
func (dst *ReplyAnalyzePage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyAnalyzePage.Merge(dst, src)
}
func (m *ReplyAnalyzePage) XXX_Size() int {
	return xxx_messageInfo_ReplyAnalyzePage.Size(m)
}
func (m *ReplyAnalyzePage) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyAnalyzePage.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyAnalyzePage proto.InternalMessageInfo

func (m *ReplyAnalyzePage) GetPageTime() int32 {
	if m != nil {
		return m.PageTime
	}
	return 0
}

func (m *ReplyAnalyzePage) GetPageBytes() int32 {
	if m != nil {
		return m.PageBytes
	}
	return 0
}

func (m *ReplyAnalyzePage) GetErrs() []string {
	if m != nil {
		return m.Errs
	}
	return nil
}

func (m *ReplyAnalyzePage) GetReqs() []*AnalyzeReqInfo {
	if m != nil {
		return m.Reqs
	}
	return nil
}

func (m *ReplyAnalyzePage) GetScreenshots() []*AnalyzeScreenshot {
	if m != nil {
		return m.Screenshots
	}
	return nil
}

func (m *ReplyAnalyzePage) GetLogs() []string {
	if m != nil {
		return m.Logs
	}
	return nil
}

// CrawlerStatistics - cralwer statistics
type CrawlerStatistics struct {
	PageNums             int32    `protobuf:"varint,1,opt,name=pageNums,proto3" json:"pageNums,omitempty"`
	ByteNums             int32    `protobuf:"varint,2,opt,name=byteNums,proto3" json:"byteNums,omitempty"`
	Time                 int32    `protobuf:"varint,3,opt,name=time,proto3" json:"time,omitempty"`
	RequestNums          int32    `protobuf:"varint,4,opt,name=requestNums,proto3" json:"requestNums,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CrawlerStatistics) Reset()         { *m = CrawlerStatistics{} }
func (m *CrawlerStatistics) String() string { return proto.CompactTextString(m) }
func (*CrawlerStatistics) ProtoMessage()    {}
func (*CrawlerStatistics) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{28}
}
func (m *CrawlerStatistics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CrawlerStatistics.Unmarshal(m, b)
}
func (m *CrawlerStatistics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CrawlerStatistics.Marshal(b, m, deterministic)
}
func (dst *CrawlerStatistics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CrawlerStatistics.Merge(dst, src)
}
func (m *CrawlerStatistics) XXX_Size() int {
	return xxx_messageInfo_CrawlerStatistics.Size(m)
}
func (m *CrawlerStatistics) XXX_DiscardUnknown() {
	xxx_messageInfo_CrawlerStatistics.DiscardUnknown(m)
}

var xxx_messageInfo_CrawlerStatistics proto.InternalMessageInfo

func (m *CrawlerStatistics) GetPageNums() int32 {
	if m != nil {
		return m.PageNums
	}
	return 0
}

func (m *CrawlerStatistics) GetByteNums() int32 {
	if m != nil {
		return m.ByteNums
	}
	return 0
}

func (m *CrawlerStatistics) GetTime() int32 {
	if m != nil {
		return m.Time
	}
	return 0
}

func (m *CrawlerStatistics) GetRequestNums() int32 {
	if m != nil {
		return m.RequestNums
	}
	return 0
}

// RequestCrawler - request crawler
type RequestCrawler struct {
	Token       string      `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	CrawlerType CrawlerType `protobuf:"varint,2,opt,name=crawlerType,proto3,enum=jarviscrawlercore.CrawlerType" json:"crawlerType,omitempty"`
	Timeout     int32       `protobuf:"varint,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Types that are valid to be assigned to CrawlerParam:
	//	*RequestCrawler_CbCompany
	//	*RequestCrawler_Translate2
	//	*RequestCrawler_Dtdata
	//	*RequestCrawler_AnalyzePage
	//	*RequestCrawler_Geoip
	//	*RequestCrawler_Techinasia
	//	*RequestCrawler_Steepandcheap
	//	*RequestCrawler_Jrj
	//	*RequestCrawler_Jd
	//	*RequestCrawler_Alimama
	//	*RequestCrawler_Mountainsteals
	//	*RequestCrawler_Tmall
	//	*RequestCrawler_Taobao
	//	*RequestCrawler_Manhuadb
	//	*RequestCrawler_Douban
	//	*RequestCrawler_Telegraph
	//	*RequestCrawler_Oabt
	//	*RequestCrawler_Hao6V
	//	*RequestCrawler_Publictransit
	//	*RequestCrawler_Article2
	//	*RequestCrawler_P6Vdy
	CrawlerParam         isRequestCrawler_CrawlerParam `protobuf_oneof:"crawlerParam"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *RequestCrawler) Reset()         { *m = RequestCrawler{} }
func (m *RequestCrawler) String() string { return proto.CompactTextString(m) }
func (*RequestCrawler) ProtoMessage()    {}
func (*RequestCrawler) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{29}
}
func (m *RequestCrawler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RequestCrawler.Unmarshal(m, b)
}
func (m *RequestCrawler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RequestCrawler.Marshal(b, m, deterministic)
}
func (dst *RequestCrawler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RequestCrawler.Merge(dst, src)
}
func (m *RequestCrawler) XXX_Size() int {
	return xxx_messageInfo_RequestCrawler.Size(m)
}
func (m *RequestCrawler) XXX_DiscardUnknown() {
	xxx_messageInfo_RequestCrawler.DiscardUnknown(m)
}

var xxx_messageInfo_RequestCrawler proto.InternalMessageInfo

type isRequestCrawler_CrawlerParam interface {
	isRequestCrawler_CrawlerParam()
}

type RequestCrawler_CbCompany struct {
	CbCompany *RequestCrunchBaseCompany `protobuf:"bytes,100,opt,name=cbCompany,proto3,oneof"`
}
type RequestCrawler_Translate2 struct {
	Translate2 *RequestTranslate2 `protobuf:"bytes,101,opt,name=translate2,proto3,oneof"`
}
type RequestCrawler_Dtdata struct {
	Dtdata *RequestDTData `protobuf:"bytes,102,opt,name=dtdata,proto3,oneof"`
}
type RequestCrawler_AnalyzePage struct {
	AnalyzePage *AnalyzePage `protobuf:"bytes,103,opt,name=analyzePage,proto3,oneof"`
}
type RequestCrawler_Geoip struct {
	Geoip *RequestGeoIP `protobuf:"bytes,105,opt,name=geoip,proto3,oneof"`
}
type RequestCrawler_Techinasia struct {
	Techinasia *RequestTechInAsia `protobuf:"bytes,106,opt,name=techinasia,proto3,oneof"`
}
type RequestCrawler_Steepandcheap struct {
	Steepandcheap *RequestSteepAndCheap `protobuf:"bytes,107,opt,name=steepandcheap,proto3,oneof"`
}
type RequestCrawler_Jrj struct {
	Jrj *RequestJRJ `protobuf:"bytes,108,opt,name=jrj,proto3,oneof"`
}
type RequestCrawler_Jd struct {
	Jd *RequestJD `protobuf:"bytes,109,opt,name=jd,proto3,oneof"`
}
type RequestCrawler_Alimama struct {
	Alimama *RequestAlimama `protobuf:"bytes,110,opt,name=alimama,proto3,oneof"`
}
type RequestCrawler_Mountainsteals struct {
	Mountainsteals *RequestMountainSteals `protobuf:"bytes,111,opt,name=mountainsteals,proto3,oneof"`
}
type RequestCrawler_Tmall struct {
	Tmall *RequestTmall `protobuf:"bytes,112,opt,name=tmall,proto3,oneof"`
}
type RequestCrawler_Taobao struct {
	Taobao *RequestTaobao `protobuf:"bytes,113,opt,name=taobao,proto3,oneof"`
}
type RequestCrawler_Manhuadb struct {
	Manhuadb *RequestManhuaDB `protobuf:"bytes,115,opt,name=manhuadb,proto3,oneof"`
}
type RequestCrawler_Douban struct {
	Douban *RequestDouban `protobuf:"bytes,116,opt,name=douban,proto3,oneof"`
}
type RequestCrawler_Telegraph struct {
	Telegraph *RequestTelegraph `protobuf:"bytes,117,opt,name=telegraph,proto3,oneof"`
}
type RequestCrawler_Oabt struct {
	Oabt *RequestOABT `protobuf:"bytes,118,opt,name=oabt,proto3,oneof"`
}
type RequestCrawler_Hao6V struct {
	Hao6V *RequestHao6V `protobuf:"bytes,119,opt,name=hao6v,proto3,oneof"`
}
type RequestCrawler_Publictransit struct {
	Publictransit *RequestPublicTransit `protobuf:"bytes,120,opt,name=publictransit,proto3,oneof"`
}
type RequestCrawler_Article2 struct {
	Article2 *RequestArticle2 `protobuf:"bytes,121,opt,name=article2,proto3,oneof"`
}
type RequestCrawler_P6Vdy struct {
	P6Vdy *Request6Vdy `protobuf:"bytes,122,opt,name=p6vdy,proto3,oneof"`
}

func (*RequestCrawler_CbCompany) isRequestCrawler_CrawlerParam()      {}
func (*RequestCrawler_Translate2) isRequestCrawler_CrawlerParam()     {}
func (*RequestCrawler_Dtdata) isRequestCrawler_CrawlerParam()         {}
func (*RequestCrawler_AnalyzePage) isRequestCrawler_CrawlerParam()    {}
func (*RequestCrawler_Geoip) isRequestCrawler_CrawlerParam()          {}
func (*RequestCrawler_Techinasia) isRequestCrawler_CrawlerParam()     {}
func (*RequestCrawler_Steepandcheap) isRequestCrawler_CrawlerParam()  {}
func (*RequestCrawler_Jrj) isRequestCrawler_CrawlerParam()            {}
func (*RequestCrawler_Jd) isRequestCrawler_CrawlerParam()             {}
func (*RequestCrawler_Alimama) isRequestCrawler_CrawlerParam()        {}
func (*RequestCrawler_Mountainsteals) isRequestCrawler_CrawlerParam() {}
func (*RequestCrawler_Tmall) isRequestCrawler_CrawlerParam()          {}
func (*RequestCrawler_Taobao) isRequestCrawler_CrawlerParam()         {}
func (*RequestCrawler_Manhuadb) isRequestCrawler_CrawlerParam()       {}
func (*RequestCrawler_Douban) isRequestCrawler_CrawlerParam()         {}
func (*RequestCrawler_Telegraph) isRequestCrawler_CrawlerParam()      {}
func (*RequestCrawler_Oabt) isRequestCrawler_CrawlerParam()           {}
func (*RequestCrawler_Hao6V) isRequestCrawler_CrawlerParam()          {}
func (*RequestCrawler_Publictransit) isRequestCrawler_CrawlerParam()  {}
func (*RequestCrawler_Article2) isRequestCrawler_CrawlerParam()       {}
func (*RequestCrawler_P6Vdy) isRequestCrawler_CrawlerParam()          {}

func (m *RequestCrawler) GetCrawlerParam() isRequestCrawler_CrawlerParam {
	if m != nil {
		return m.CrawlerParam
	}
	return nil
}

func (m *RequestCrawler) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *RequestCrawler) GetCrawlerType() CrawlerType {
	if m != nil {
		return m.CrawlerType
	}
	return CrawlerType_CT_TRANSLATE2
}

func (m *RequestCrawler) GetTimeout() int32 {
	if m != nil {
		return m.Timeout
	}
	return 0
}

func (m *RequestCrawler) GetCbCompany() *RequestCrunchBaseCompany {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_CbCompany); ok {
		return x.CbCompany
	}
	return nil
}

func (m *RequestCrawler) GetTranslate2() *RequestTranslate2 {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Translate2); ok {
		return x.Translate2
	}
	return nil
}

func (m *RequestCrawler) GetDtdata() *RequestDTData {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Dtdata); ok {
		return x.Dtdata
	}
	return nil
}

func (m *RequestCrawler) GetAnalyzePage() *AnalyzePage {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_AnalyzePage); ok {
		return x.AnalyzePage
	}
	return nil
}

func (m *RequestCrawler) GetGeoip() *RequestGeoIP {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Geoip); ok {
		return x.Geoip
	}
	return nil
}

func (m *RequestCrawler) GetTechinasia() *RequestTechInAsia {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Techinasia); ok {
		return x.Techinasia
	}
	return nil
}

func (m *RequestCrawler) GetSteepandcheap() *RequestSteepAndCheap {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Steepandcheap); ok {
		return x.Steepandcheap
	}
	return nil
}

func (m *RequestCrawler) GetJrj() *RequestJRJ {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Jrj); ok {
		return x.Jrj
	}
	return nil
}

func (m *RequestCrawler) GetJd() *RequestJD {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Jd); ok {
		return x.Jd
	}
	return nil
}

func (m *RequestCrawler) GetAlimama() *RequestAlimama {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Alimama); ok {
		return x.Alimama
	}
	return nil
}

func (m *RequestCrawler) GetMountainsteals() *RequestMountainSteals {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Mountainsteals); ok {
		return x.Mountainsteals
	}
	return nil
}

func (m *RequestCrawler) GetTmall() *RequestTmall {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Tmall); ok {
		return x.Tmall
	}
	return nil
}

func (m *RequestCrawler) GetTaobao() *RequestTaobao {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Taobao); ok {
		return x.Taobao
	}
	return nil
}

func (m *RequestCrawler) GetManhuadb() *RequestManhuaDB {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Manhuadb); ok {
		return x.Manhuadb
	}
	return nil
}

func (m *RequestCrawler) GetDouban() *RequestDouban {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Douban); ok {
		return x.Douban
	}
	return nil
}

func (m *RequestCrawler) GetTelegraph() *RequestTelegraph {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Telegraph); ok {
		return x.Telegraph
	}
	return nil
}

func (m *RequestCrawler) GetOabt() *RequestOABT {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Oabt); ok {
		return x.Oabt
	}
	return nil
}

func (m *RequestCrawler) GetHao6V() *RequestHao6V {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Hao6V); ok {
		return x.Hao6V
	}
	return nil
}

func (m *RequestCrawler) GetPublictransit() *RequestPublicTransit {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Publictransit); ok {
		return x.Publictransit
	}
	return nil
}

func (m *RequestCrawler) GetArticle2() *RequestArticle2 {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_Article2); ok {
		return x.Article2
	}
	return nil
}

func (m *RequestCrawler) GetP6Vdy() *Request6Vdy {
	if x, ok := m.GetCrawlerParam().(*RequestCrawler_P6Vdy); ok {
		return x.P6Vdy
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*RequestCrawler) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _RequestCrawler_OneofMarshaler, _RequestCrawler_OneofUnmarshaler, _RequestCrawler_OneofSizer, []interface{}{
		(*RequestCrawler_CbCompany)(nil),
		(*RequestCrawler_Translate2)(nil),
		(*RequestCrawler_Dtdata)(nil),
		(*RequestCrawler_AnalyzePage)(nil),
		(*RequestCrawler_Geoip)(nil),
		(*RequestCrawler_Techinasia)(nil),
		(*RequestCrawler_Steepandcheap)(nil),
		(*RequestCrawler_Jrj)(nil),
		(*RequestCrawler_Jd)(nil),
		(*RequestCrawler_Alimama)(nil),
		(*RequestCrawler_Mountainsteals)(nil),
		(*RequestCrawler_Tmall)(nil),
		(*RequestCrawler_Taobao)(nil),
		(*RequestCrawler_Manhuadb)(nil),
		(*RequestCrawler_Douban)(nil),
		(*RequestCrawler_Telegraph)(nil),
		(*RequestCrawler_Oabt)(nil),
		(*RequestCrawler_Hao6V)(nil),
		(*RequestCrawler_Publictransit)(nil),
		(*RequestCrawler_Article2)(nil),
		(*RequestCrawler_P6Vdy)(nil),
	}
}

func _RequestCrawler_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*RequestCrawler)
	// crawlerParam
	switch x := m.CrawlerParam.(type) {
	case *RequestCrawler_CbCompany:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CbCompany); err != nil {
			return err
		}
	case *RequestCrawler_Translate2:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Translate2); err != nil {
			return err
		}
	case *RequestCrawler_Dtdata:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dtdata); err != nil {
			return err
		}
	case *RequestCrawler_AnalyzePage:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AnalyzePage); err != nil {
			return err
		}
	case *RequestCrawler_Geoip:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Geoip); err != nil {
			return err
		}
	case *RequestCrawler_Techinasia:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Techinasia); err != nil {
			return err
		}
	case *RequestCrawler_Steepandcheap:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Steepandcheap); err != nil {
			return err
		}
	case *RequestCrawler_Jrj:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Jrj); err != nil {
			return err
		}
	case *RequestCrawler_Jd:
		b.EncodeVarint(109<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Jd); err != nil {
			return err
		}
	case *RequestCrawler_Alimama:
		b.EncodeVarint(110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Alimama); err != nil {
			return err
		}
	case *RequestCrawler_Mountainsteals:
		b.EncodeVarint(111<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mountainsteals); err != nil {
			return err
		}
	case *RequestCrawler_Tmall:
		b.EncodeVarint(112<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tmall); err != nil {
			return err
		}
	case *RequestCrawler_Taobao:
		b.EncodeVarint(113<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Taobao); err != nil {
			return err
		}
	case *RequestCrawler_Manhuadb:
		b.EncodeVarint(115<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Manhuadb); err != nil {
			return err
		}
	case *RequestCrawler_Douban:
		b.EncodeVarint(116<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Douban); err != nil {
			return err
		}
	case *RequestCrawler_Telegraph:
		b.EncodeVarint(117<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Telegraph); err != nil {
			return err
		}
	case *RequestCrawler_Oabt:
		b.EncodeVarint(118<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oabt); err != nil {
			return err
		}
	case *RequestCrawler_Hao6V:
		b.EncodeVarint(119<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hao6V); err != nil {
			return err
		}
	case *RequestCrawler_Publictransit:
		b.EncodeVarint(120<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Publictransit); err != nil {
			return err
		}
	case *RequestCrawler_Article2:
		b.EncodeVarint(121<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Article2); err != nil {
			return err
		}
	case *RequestCrawler_P6Vdy:
		b.EncodeVarint(122<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.P6Vdy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("RequestCrawler.CrawlerParam has unexpected type %T", x)
	}
	return nil
}

func _RequestCrawler_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*RequestCrawler)
	switch tag {
	case 100: // crawlerParam.cbCompany
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestCrunchBaseCompany)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_CbCompany{msg}
		return true, err
	case 101: // crawlerParam.translate2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestTranslate2)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Translate2{msg}
		return true, err
	case 102: // crawlerParam.dtdata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestDTData)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Dtdata{msg}
		return true, err
	case 103: // crawlerParam.analyzePage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(AnalyzePage)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_AnalyzePage{msg}
		return true, err
	case 105: // crawlerParam.geoip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestGeoIP)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Geoip{msg}
		return true, err
	case 106: // crawlerParam.techinasia
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestTechInAsia)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Techinasia{msg}
		return true, err
	case 107: // crawlerParam.steepandcheap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestSteepAndCheap)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Steepandcheap{msg}
		return true, err
	case 108: // crawlerParam.jrj
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestJRJ)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Jrj{msg}
		return true, err
	case 109: // crawlerParam.jd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestJD)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Jd{msg}
		return true, err
	case 110: // crawlerParam.alimama
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestAlimama)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Alimama{msg}
		return true, err
	case 111: // crawlerParam.mountainsteals
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestMountainSteals)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Mountainsteals{msg}
		return true, err
	case 112: // crawlerParam.tmall
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestTmall)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Tmall{msg}
		return true, err
	case 113: // crawlerParam.taobao
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestTaobao)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Taobao{msg}
		return true, err
	case 115: // crawlerParam.manhuadb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestManhuaDB)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Manhuadb{msg}
		return true, err
	case 116: // crawlerParam.douban
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestDouban)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Douban{msg}
		return true, err
	case 117: // crawlerParam.telegraph
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestTelegraph)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Telegraph{msg}
		return true, err
	case 118: // crawlerParam.oabt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestOABT)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Oabt{msg}
		return true, err
	case 119: // crawlerParam.hao6v
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestHao6V)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Hao6V{msg}
		return true, err
	case 120: // crawlerParam.publictransit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestPublicTransit)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Publictransit{msg}
		return true, err
	case 121: // crawlerParam.article2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(RequestArticle2)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_Article2{msg}
		return true, err
	case 122: // crawlerParam.p6vdy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Request6Vdy)
		err := b.DecodeMessage(msg)
		m.CrawlerParam = &RequestCrawler_P6Vdy{msg}
		return true, err
	default:
		return false, nil
	}
}

func _RequestCrawler_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*RequestCrawler)
	// crawlerParam
	switch x := m.CrawlerParam.(type) {
	case *RequestCrawler_CbCompany:
		s := proto.Size(x.CbCompany)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Translate2:
		s := proto.Size(x.Translate2)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Dtdata:
		s := proto.Size(x.Dtdata)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_AnalyzePage:
		s := proto.Size(x.AnalyzePage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Geoip:
		s := proto.Size(x.Geoip)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Techinasia:
		s := proto.Size(x.Techinasia)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Steepandcheap:
		s := proto.Size(x.Steepandcheap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Jrj:
		s := proto.Size(x.Jrj)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Jd:
		s := proto.Size(x.Jd)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Alimama:
		s := proto.Size(x.Alimama)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Mountainsteals:
		s := proto.Size(x.Mountainsteals)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Tmall:
		s := proto.Size(x.Tmall)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Taobao:
		s := proto.Size(x.Taobao)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Manhuadb:
		s := proto.Size(x.Manhuadb)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Douban:
		s := proto.Size(x.Douban)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Telegraph:
		s := proto.Size(x.Telegraph)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Oabt:
		s := proto.Size(x.Oabt)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Hao6V:
		s := proto.Size(x.Hao6V)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Publictransit:
		s := proto.Size(x.Publictransit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_Article2:
		s := proto.Size(x.Article2)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *RequestCrawler_P6Vdy:
		s := proto.Size(x.P6Vdy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ReplyCrawler - reply crawler
type ReplyCrawler struct {
	CrawlerType CrawlerType        `protobuf:"varint,1,opt,name=crawlerType,proto3,enum=jarviscrawlercore.CrawlerType" json:"crawlerType,omitempty"`
	Statistics  *CrawlerStatistics `protobuf:"bytes,2,opt,name=statistics,proto3" json:"statistics,omitempty"`
	// Types that are valid to be assigned to CrawlerResult:
	//	*ReplyCrawler_CbCompany
	//	*ReplyCrawler_TranslateResult
	//	*ReplyCrawler_Dtdata
	//	*ReplyCrawler_AnalyzePage
	//	*ReplyCrawler_Geoip
	//	*ReplyCrawler_Techinasia
	//	*ReplyCrawler_Steepandcheap
	//	*ReplyCrawler_Jrj
	//	*ReplyCrawler_Jd
	//	*ReplyCrawler_Alimama
	//	*ReplyCrawler_Mountainsteals
	//	*ReplyCrawler_Tmall
	//	*ReplyCrawler_Taobao
	//	*ReplyCrawler_Manhuadb
	//	*ReplyCrawler_Douban
	//	*ReplyCrawler_Telegraph
	//	*ReplyCrawler_Oabt
	//	*ReplyCrawler_Hao6V
	//	*ReplyCrawler_Publictransit
	//	*ReplyCrawler_Article2
	//	*ReplyCrawler_P6Vdy
	CrawlerResult        isReplyCrawler_CrawlerResult `protobuf_oneof:"crawlerResult"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *ReplyCrawler) Reset()         { *m = ReplyCrawler{} }
func (m *ReplyCrawler) String() string { return proto.CompactTextString(m) }
func (*ReplyCrawler) ProtoMessage()    {}
func (*ReplyCrawler) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{30}
}
func (m *ReplyCrawler) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCrawler.Unmarshal(m, b)
}
func (m *ReplyCrawler) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCrawler.Marshal(b, m, deterministic)
}
func (dst *ReplyCrawler) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCrawler.Merge(dst, src)
}
func (m *ReplyCrawler) XXX_Size() int {
	return xxx_messageInfo_ReplyCrawler.Size(m)
}
func (m *ReplyCrawler) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCrawler.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCrawler proto.InternalMessageInfo

type isReplyCrawler_CrawlerResult interface {
	isReplyCrawler_CrawlerResult()
}

type ReplyCrawler_CbCompany struct {
	CbCompany *CrunchBaseOrganization `protobuf:"bytes,100,opt,name=cbCompany,proto3,oneof"`
}
type ReplyCrawler_TranslateResult struct {
	TranslateResult *TranslateResult `protobuf:"bytes,101,opt,name=translateResult,proto3,oneof"`
}
type ReplyCrawler_Dtdata struct {
	Dtdata *ReplyDTData `protobuf:"bytes,102,opt,name=dtdata,proto3,oneof"`
}
type ReplyCrawler_AnalyzePage struct {
	AnalyzePage *ReplyAnalyzePage `protobuf:"bytes,103,opt,name=analyzePage,proto3,oneof"`
}
type ReplyCrawler_Geoip struct {
	Geoip *ReplyGeoIP `protobuf:"bytes,105,opt,name=geoip,proto3,oneof"`
}
type ReplyCrawler_Techinasia struct {
	Techinasia *ReplyTechInAsia `protobuf:"bytes,106,opt,name=techinasia,proto3,oneof"`
}
type ReplyCrawler_Steepandcheap struct {
	Steepandcheap *ReplySteepAndCheap `protobuf:"bytes,107,opt,name=steepandcheap,proto3,oneof"`
}
type ReplyCrawler_Jrj struct {
	Jrj *ReplyJRJ `protobuf:"bytes,108,opt,name=jrj,proto3,oneof"`
}
type ReplyCrawler_Jd struct {
	Jd *ReplyJD `protobuf:"bytes,109,opt,name=jd,proto3,oneof"`
}
type ReplyCrawler_Alimama struct {
	Alimama *ReplyAlimama `protobuf:"bytes,110,opt,name=alimama,proto3,oneof"`
}
type ReplyCrawler_Mountainsteals struct {
	Mountainsteals *ReplyMountainSteals `protobuf:"bytes,111,opt,name=mountainsteals,proto3,oneof"`
}
type ReplyCrawler_Tmall struct {
	Tmall *ReplyTmall `protobuf:"bytes,112,opt,name=tmall,proto3,oneof"`
}
type ReplyCrawler_Taobao struct {
	Taobao *ReplyTaobao `protobuf:"bytes,113,opt,name=taobao,proto3,oneof"`
}
type ReplyCrawler_Manhuadb struct {
	Manhuadb *ReplyManhuaDB `protobuf:"bytes,115,opt,name=manhuadb,proto3,oneof"`
}
type ReplyCrawler_Douban struct {
	Douban *ReplyDouban `protobuf:"bytes,116,opt,name=douban,proto3,oneof"`
}
type ReplyCrawler_Telegraph struct {
	Telegraph *ReplyTelegraph `protobuf:"bytes,117,opt,name=telegraph,proto3,oneof"`
}
type ReplyCrawler_Oabt struct {
	Oabt *ReplyOABT `protobuf:"bytes,118,opt,name=oabt,proto3,oneof"`
}
type ReplyCrawler_Hao6V struct {
	Hao6V *ReplyHao6V `protobuf:"bytes,119,opt,name=hao6v,proto3,oneof"`
}
type ReplyCrawler_Publictransit struct {
	Publictransit *ReplyPublicTransit `protobuf:"bytes,120,opt,name=publictransit,proto3,oneof"`
}
type ReplyCrawler_Article2 struct {
	Article2 *ReplyArticle2 `protobuf:"bytes,121,opt,name=article2,proto3,oneof"`
}
type ReplyCrawler_P6Vdy struct {
	P6Vdy *Reply6Vdy `protobuf:"bytes,122,opt,name=p6vdy,proto3,oneof"`
}

func (*ReplyCrawler_CbCompany) isReplyCrawler_CrawlerResult()       {}
func (*ReplyCrawler_TranslateResult) isReplyCrawler_CrawlerResult() {}
func (*ReplyCrawler_Dtdata) isReplyCrawler_CrawlerResult()          {}
func (*ReplyCrawler_AnalyzePage) isReplyCrawler_CrawlerResult()     {}
func (*ReplyCrawler_Geoip) isReplyCrawler_CrawlerResult()           {}
func (*ReplyCrawler_Techinasia) isReplyCrawler_CrawlerResult()      {}
func (*ReplyCrawler_Steepandcheap) isReplyCrawler_CrawlerResult()   {}
func (*ReplyCrawler_Jrj) isReplyCrawler_CrawlerResult()             {}
func (*ReplyCrawler_Jd) isReplyCrawler_CrawlerResult()              {}
func (*ReplyCrawler_Alimama) isReplyCrawler_CrawlerResult()         {}
func (*ReplyCrawler_Mountainsteals) isReplyCrawler_CrawlerResult()  {}
func (*ReplyCrawler_Tmall) isReplyCrawler_CrawlerResult()           {}
func (*ReplyCrawler_Taobao) isReplyCrawler_CrawlerResult()          {}
func (*ReplyCrawler_Manhuadb) isReplyCrawler_CrawlerResult()        {}
func (*ReplyCrawler_Douban) isReplyCrawler_CrawlerResult()          {}
func (*ReplyCrawler_Telegraph) isReplyCrawler_CrawlerResult()       {}
func (*ReplyCrawler_Oabt) isReplyCrawler_CrawlerResult()            {}
func (*ReplyCrawler_Hao6V) isReplyCrawler_CrawlerResult()           {}
func (*ReplyCrawler_Publictransit) isReplyCrawler_CrawlerResult()   {}
func (*ReplyCrawler_Article2) isReplyCrawler_CrawlerResult()        {}
func (*ReplyCrawler_P6Vdy) isReplyCrawler_CrawlerResult()           {}

func (m *ReplyCrawler) GetCrawlerResult() isReplyCrawler_CrawlerResult {
	if m != nil {
		return m.CrawlerResult
	}
	return nil
}

func (m *ReplyCrawler) GetCrawlerType() CrawlerType {
	if m != nil {
		return m.CrawlerType
	}
	return CrawlerType_CT_TRANSLATE2
}

func (m *ReplyCrawler) GetStatistics() *CrawlerStatistics {
	if m != nil {
		return m.Statistics
	}
	return nil
}

func (m *ReplyCrawler) GetCbCompany() *CrunchBaseOrganization {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_CbCompany); ok {
		return x.CbCompany
	}
	return nil
}

func (m *ReplyCrawler) GetTranslateResult() *TranslateResult {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_TranslateResult); ok {
		return x.TranslateResult
	}
	return nil
}

func (m *ReplyCrawler) GetDtdata() *ReplyDTData {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Dtdata); ok {
		return x.Dtdata
	}
	return nil
}

func (m *ReplyCrawler) GetAnalyzePage() *ReplyAnalyzePage {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_AnalyzePage); ok {
		return x.AnalyzePage
	}
	return nil
}

func (m *ReplyCrawler) GetGeoip() *ReplyGeoIP {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Geoip); ok {
		return x.Geoip
	}
	return nil
}

func (m *ReplyCrawler) GetTechinasia() *ReplyTechInAsia {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Techinasia); ok {
		return x.Techinasia
	}
	return nil
}

func (m *ReplyCrawler) GetSteepandcheap() *ReplySteepAndCheap {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Steepandcheap); ok {
		return x.Steepandcheap
	}
	return nil
}

func (m *ReplyCrawler) GetJrj() *ReplyJRJ {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Jrj); ok {
		return x.Jrj
	}
	return nil
}

func (m *ReplyCrawler) GetJd() *ReplyJD {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Jd); ok {
		return x.Jd
	}
	return nil
}

func (m *ReplyCrawler) GetAlimama() *ReplyAlimama {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Alimama); ok {
		return x.Alimama
	}
	return nil
}

func (m *ReplyCrawler) GetMountainsteals() *ReplyMountainSteals {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Mountainsteals); ok {
		return x.Mountainsteals
	}
	return nil
}

func (m *ReplyCrawler) GetTmall() *ReplyTmall {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Tmall); ok {
		return x.Tmall
	}
	return nil
}

func (m *ReplyCrawler) GetTaobao() *ReplyTaobao {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Taobao); ok {
		return x.Taobao
	}
	return nil
}

func (m *ReplyCrawler) GetManhuadb() *ReplyManhuaDB {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Manhuadb); ok {
		return x.Manhuadb
	}
	return nil
}

func (m *ReplyCrawler) GetDouban() *ReplyDouban {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Douban); ok {
		return x.Douban
	}
	return nil
}

func (m *ReplyCrawler) GetTelegraph() *ReplyTelegraph {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Telegraph); ok {
		return x.Telegraph
	}
	return nil
}

func (m *ReplyCrawler) GetOabt() *ReplyOABT {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Oabt); ok {
		return x.Oabt
	}
	return nil
}

func (m *ReplyCrawler) GetHao6V() *ReplyHao6V {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Hao6V); ok {
		return x.Hao6V
	}
	return nil
}

func (m *ReplyCrawler) GetPublictransit() *ReplyPublicTransit {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Publictransit); ok {
		return x.Publictransit
	}
	return nil
}

func (m *ReplyCrawler) GetArticle2() *ReplyArticle2 {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_Article2); ok {
		return x.Article2
	}
	return nil
}

func (m *ReplyCrawler) GetP6Vdy() *Reply6Vdy {
	if x, ok := m.GetCrawlerResult().(*ReplyCrawler_P6Vdy); ok {
		return x.P6Vdy
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ReplyCrawler) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ReplyCrawler_OneofMarshaler, _ReplyCrawler_OneofUnmarshaler, _ReplyCrawler_OneofSizer, []interface{}{
		(*ReplyCrawler_CbCompany)(nil),
		(*ReplyCrawler_TranslateResult)(nil),
		(*ReplyCrawler_Dtdata)(nil),
		(*ReplyCrawler_AnalyzePage)(nil),
		(*ReplyCrawler_Geoip)(nil),
		(*ReplyCrawler_Techinasia)(nil),
		(*ReplyCrawler_Steepandcheap)(nil),
		(*ReplyCrawler_Jrj)(nil),
		(*ReplyCrawler_Jd)(nil),
		(*ReplyCrawler_Alimama)(nil),
		(*ReplyCrawler_Mountainsteals)(nil),
		(*ReplyCrawler_Tmall)(nil),
		(*ReplyCrawler_Taobao)(nil),
		(*ReplyCrawler_Manhuadb)(nil),
		(*ReplyCrawler_Douban)(nil),
		(*ReplyCrawler_Telegraph)(nil),
		(*ReplyCrawler_Oabt)(nil),
		(*ReplyCrawler_Hao6V)(nil),
		(*ReplyCrawler_Publictransit)(nil),
		(*ReplyCrawler_Article2)(nil),
		(*ReplyCrawler_P6Vdy)(nil),
	}
}

func _ReplyCrawler_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ReplyCrawler)
	// crawlerResult
	switch x := m.CrawlerResult.(type) {
	case *ReplyCrawler_CbCompany:
		b.EncodeVarint(100<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.CbCompany); err != nil {
			return err
		}
	case *ReplyCrawler_TranslateResult:
		b.EncodeVarint(101<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.TranslateResult); err != nil {
			return err
		}
	case *ReplyCrawler_Dtdata:
		b.EncodeVarint(102<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Dtdata); err != nil {
			return err
		}
	case *ReplyCrawler_AnalyzePage:
		b.EncodeVarint(103<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.AnalyzePage); err != nil {
			return err
		}
	case *ReplyCrawler_Geoip:
		b.EncodeVarint(105<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Geoip); err != nil {
			return err
		}
	case *ReplyCrawler_Techinasia:
		b.EncodeVarint(106<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Techinasia); err != nil {
			return err
		}
	case *ReplyCrawler_Steepandcheap:
		b.EncodeVarint(107<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Steepandcheap); err != nil {
			return err
		}
	case *ReplyCrawler_Jrj:
		b.EncodeVarint(108<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Jrj); err != nil {
			return err
		}
	case *ReplyCrawler_Jd:
		b.EncodeVarint(109<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Jd); err != nil {
			return err
		}
	case *ReplyCrawler_Alimama:
		b.EncodeVarint(110<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Alimama); err != nil {
			return err
		}
	case *ReplyCrawler_Mountainsteals:
		b.EncodeVarint(111<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Mountainsteals); err != nil {
			return err
		}
	case *ReplyCrawler_Tmall:
		b.EncodeVarint(112<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Tmall); err != nil {
			return err
		}
	case *ReplyCrawler_Taobao:
		b.EncodeVarint(113<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Taobao); err != nil {
			return err
		}
	case *ReplyCrawler_Manhuadb:
		b.EncodeVarint(115<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Manhuadb); err != nil {
			return err
		}
	case *ReplyCrawler_Douban:
		b.EncodeVarint(116<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Douban); err != nil {
			return err
		}
	case *ReplyCrawler_Telegraph:
		b.EncodeVarint(117<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Telegraph); err != nil {
			return err
		}
	case *ReplyCrawler_Oabt:
		b.EncodeVarint(118<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Oabt); err != nil {
			return err
		}
	case *ReplyCrawler_Hao6V:
		b.EncodeVarint(119<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Hao6V); err != nil {
			return err
		}
	case *ReplyCrawler_Publictransit:
		b.EncodeVarint(120<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Publictransit); err != nil {
			return err
		}
	case *ReplyCrawler_Article2:
		b.EncodeVarint(121<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Article2); err != nil {
			return err
		}
	case *ReplyCrawler_P6Vdy:
		b.EncodeVarint(122<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.P6Vdy); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("ReplyCrawler.CrawlerResult has unexpected type %T", x)
	}
	return nil
}

func _ReplyCrawler_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ReplyCrawler)
	switch tag {
	case 100: // crawlerResult.cbCompany
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(CrunchBaseOrganization)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_CbCompany{msg}
		return true, err
	case 101: // crawlerResult.translateResult
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TranslateResult)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_TranslateResult{msg}
		return true, err
	case 102: // crawlerResult.dtdata
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyDTData)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Dtdata{msg}
		return true, err
	case 103: // crawlerResult.analyzePage
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyAnalyzePage)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_AnalyzePage{msg}
		return true, err
	case 105: // crawlerResult.geoip
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyGeoIP)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Geoip{msg}
		return true, err
	case 106: // crawlerResult.techinasia
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTechInAsia)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Techinasia{msg}
		return true, err
	case 107: // crawlerResult.steepandcheap
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplySteepAndCheap)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Steepandcheap{msg}
		return true, err
	case 108: // crawlerResult.jrj
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyJRJ)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Jrj{msg}
		return true, err
	case 109: // crawlerResult.jd
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyJD)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Jd{msg}
		return true, err
	case 110: // crawlerResult.alimama
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyAlimama)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Alimama{msg}
		return true, err
	case 111: // crawlerResult.mountainsteals
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyMountainSteals)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Mountainsteals{msg}
		return true, err
	case 112: // crawlerResult.tmall
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTmall)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Tmall{msg}
		return true, err
	case 113: // crawlerResult.taobao
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTaobao)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Taobao{msg}
		return true, err
	case 115: // crawlerResult.manhuadb
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyManhuaDB)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Manhuadb{msg}
		return true, err
	case 116: // crawlerResult.douban
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyDouban)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Douban{msg}
		return true, err
	case 117: // crawlerResult.telegraph
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyTelegraph)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Telegraph{msg}
		return true, err
	case 118: // crawlerResult.oabt
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyOABT)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Oabt{msg}
		return true, err
	case 119: // crawlerResult.hao6v
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyHao6V)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Hao6V{msg}
		return true, err
	case 120: // crawlerResult.publictransit
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyPublicTransit)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Publictransit{msg}
		return true, err
	case 121: // crawlerResult.article2
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(ReplyArticle2)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_Article2{msg}
		return true, err
	case 122: // crawlerResult.p6vdy
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(Reply6Vdy)
		err := b.DecodeMessage(msg)
		m.CrawlerResult = &ReplyCrawler_P6Vdy{msg}
		return true, err
	default:
		return false, nil
	}
}

func _ReplyCrawler_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ReplyCrawler)
	// crawlerResult
	switch x := m.CrawlerResult.(type) {
	case *ReplyCrawler_CbCompany:
		s := proto.Size(x.CbCompany)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_TranslateResult:
		s := proto.Size(x.TranslateResult)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Dtdata:
		s := proto.Size(x.Dtdata)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_AnalyzePage:
		s := proto.Size(x.AnalyzePage)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Geoip:
		s := proto.Size(x.Geoip)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Techinasia:
		s := proto.Size(x.Techinasia)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Steepandcheap:
		s := proto.Size(x.Steepandcheap)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Jrj:
		s := proto.Size(x.Jrj)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Jd:
		s := proto.Size(x.Jd)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Alimama:
		s := proto.Size(x.Alimama)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Mountainsteals:
		s := proto.Size(x.Mountainsteals)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Tmall:
		s := proto.Size(x.Tmall)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Taobao:
		s := proto.Size(x.Taobao)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Manhuadb:
		s := proto.Size(x.Manhuadb)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Douban:
		s := proto.Size(x.Douban)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Telegraph:
		s := proto.Size(x.Telegraph)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Oabt:
		s := proto.Size(x.Oabt)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Hao6V:
		s := proto.Size(x.Hao6V)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Publictransit:
		s := proto.Size(x.Publictransit)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_Article2:
		s := proto.Size(x.Article2)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ReplyCrawler_P6Vdy:
		s := proto.Size(x.P6Vdy)
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

// ReplyCrawler - reply crawler
type ReplyCrawlerStream struct {
	// totalLength - If the message is too long,
	// it will send data in multiple msg, this is the total length.
	TotalLength int32 `protobuf:"varint,1,opt,name=totalLength,proto3" json:"totalLength,omitempty"`
	// curStart - The starting point of the current data (in bytes).
	CurStart int32 `protobuf:"varint,2,opt,name=curStart,proto3" json:"curStart,omitempty"`
	// curLength - The length of the current data (in bytes).
	CurLength int32 `protobuf:"varint,3,opt,name=curLength,proto3" json:"curLength,omitempty"`
	// hashData - This is the hash of each paragraph.
	HashData string `protobuf:"bytes,4,opt,name=hashData,proto3" json:"hashData,omitempty"`
	// totalHashData - If multiple messages return data,
	// this is the hash value of all data, only sent in the last message.
	TotalHashData string `protobuf:"bytes,5,opt,name=totalHashData,proto3" json:"totalHashData,omitempty"`
	// data
	Data                 []byte        `protobuf:"bytes,6,opt,name=data,proto3" json:"data,omitempty"`
	Error                string        `protobuf:"bytes,100,opt,name=error,proto3" json:"error,omitempty"`
	ReplyCrawler         *ReplyCrawler `protobuf:"bytes,200,opt,name=replyCrawler,proto3" json:"replyCrawler,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *ReplyCrawlerStream) Reset()         { *m = ReplyCrawlerStream{} }
func (m *ReplyCrawlerStream) String() string { return proto.CompactTextString(m) }
func (*ReplyCrawlerStream) ProtoMessage()    {}
func (*ReplyCrawlerStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_result_ce44c8df94b8d6ff, []int{31}
}
func (m *ReplyCrawlerStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReplyCrawlerStream.Unmarshal(m, b)
}
func (m *ReplyCrawlerStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReplyCrawlerStream.Marshal(b, m, deterministic)
}
func (dst *ReplyCrawlerStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReplyCrawlerStream.Merge(dst, src)
}
func (m *ReplyCrawlerStream) XXX_Size() int {
	return xxx_messageInfo_ReplyCrawlerStream.Size(m)
}
func (m *ReplyCrawlerStream) XXX_DiscardUnknown() {
	xxx_messageInfo_ReplyCrawlerStream.DiscardUnknown(m)
}

var xxx_messageInfo_ReplyCrawlerStream proto.InternalMessageInfo

func (m *ReplyCrawlerStream) GetTotalLength() int32 {
	if m != nil {
		return m.TotalLength
	}
	return 0
}

func (m *ReplyCrawlerStream) GetCurStart() int32 {
	if m != nil {
		return m.CurStart
	}
	return 0
}

func (m *ReplyCrawlerStream) GetCurLength() int32 {
	if m != nil {
		return m.CurLength
	}
	return 0
}

func (m *ReplyCrawlerStream) GetHashData() string {
	if m != nil {
		return m.HashData
	}
	return ""
}

func (m *ReplyCrawlerStream) GetTotalHashData() string {
	if m != nil {
		return m.TotalHashData
	}
	return ""
}

func (m *ReplyCrawlerStream) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *ReplyCrawlerStream) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *ReplyCrawlerStream) GetReplyCrawler() *ReplyCrawler {
	if m != nil {
		return m.ReplyCrawler
	}
	return nil
}

func init() {
	proto.RegisterType((*ImageInfo)(nil), "jarviscrawlercore.ImageInfo")
	proto.RegisterType((*Paragraph)(nil), "jarviscrawlercore.Paragraph")
	proto.RegisterType((*ExportArticleResult)(nil), "jarviscrawlercore.ExportArticleResult")
	proto.RegisterType((*Article)(nil), "jarviscrawlercore.Article")
	proto.RegisterType((*ArticleList)(nil), "jarviscrawlercore.ArticleList")
	proto.RegisterType((*ConfluenceUpdateItem)(nil), "jarviscrawlercore.ConfluenceUpdateItem")
	proto.RegisterType((*ConfluenceUpdateGrouping)(nil), "jarviscrawlercore.ConfluenceUpdateGrouping")
	proto.RegisterType((*ConfluenceAllUpdates)(nil), "jarviscrawlercore.ConfluenceAllUpdates")
	proto.RegisterType((*YCCompanies)(nil), "jarviscrawlercore.YCCompanies")
	proto.RegisterType((*CrunchBaseEmployee)(nil), "jarviscrawlercore.CrunchBaseEmployee")
	proto.RegisterType((*CrunchBaseInvestment)(nil), "jarviscrawlercore.CrunchBaseInvestment")
	proto.RegisterType((*CrunchBaseAcquisition)(nil), "jarviscrawlercore.CrunchBaseAcquisition")
	proto.RegisterType((*CrunchBaseInvestor)(nil), "jarviscrawlercore.CrunchBaseInvestor")
	proto.RegisterType((*CrunchBaseFundingRound)(nil), "jarviscrawlercore.CrunchBaseFundingRound")
	proto.RegisterType((*CrunchBaseOrganization)(nil), "jarviscrawlercore.CrunchBaseOrganization")
	proto.RegisterType((*RequestTranslate)(nil), "jarviscrawlercore.RequestTranslate")
	proto.RegisterType((*ReplyTranslate)(nil), "jarviscrawlercore.ReplyTranslate")
	proto.RegisterType((*RequestArticle)(nil), "jarviscrawlercore.RequestArticle")
	proto.RegisterType((*ReplyArticle)(nil), "jarviscrawlercore.ReplyArticle")
	proto.RegisterType((*RequestArticles)(nil), "jarviscrawlercore.RequestArticles")
	proto.RegisterType((*ReplyArticles)(nil), "jarviscrawlercore.ReplyArticles")
	proto.RegisterType((*RequestCrunchBaseCompany)(nil), "jarviscrawlercore.RequestCrunchBaseCompany")
	proto.RegisterType((*RequestTranslate2)(nil), "jarviscrawlercore.RequestTranslate2")
	proto.RegisterType((*TranslateResult)(nil), "jarviscrawlercore.TranslateResult")
	proto.RegisterType((*AnalyzePage)(nil), "jarviscrawlercore.AnalyzePage")
	proto.RegisterType((*AnalyzeScreenshot)(nil), "jarviscrawlercore.AnalyzeScreenshot")
	proto.RegisterType((*AnalyzeReqInfo)(nil), "jarviscrawlercore.AnalyzeReqInfo")
	proto.RegisterType((*ReplyAnalyzePage)(nil), "jarviscrawlercore.ReplyAnalyzePage")
	proto.RegisterType((*CrawlerStatistics)(nil), "jarviscrawlercore.CrawlerStatistics")
	proto.RegisterType((*RequestCrawler)(nil), "jarviscrawlercore.RequestCrawler")
	proto.RegisterType((*ReplyCrawler)(nil), "jarviscrawlercore.ReplyCrawler")
	proto.RegisterType((*ReplyCrawlerStream)(nil), "jarviscrawlercore.ReplyCrawlerStream")
	proto.RegisterEnum("jarviscrawlercore.ParagraphType", ParagraphType_name, ParagraphType_value)
	proto.RegisterEnum("jarviscrawlercore.CrawlerType", CrawlerType_name, CrawlerType_value)
	proto.RegisterEnum("jarviscrawlercore.AnalyzeScreenshotType", AnalyzeScreenshotType_name, AnalyzeScreenshotType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// JarvisCrawlerServiceClient is the client API for JarvisCrawlerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type JarvisCrawlerServiceClient interface {
	// translate - translate text
	Translate(ctx context.Context, in *RequestTranslate, opts ...grpc.CallOption) (*ReplyTranslate, error)
	// exportArticle - export article
	ExportArticle(ctx context.Context, in *RequestArticle, opts ...grpc.CallOption) (JarvisCrawlerService_ExportArticleClient, error)
	// getArticles - get articles
	GetArticles(ctx context.Context, in *RequestArticles, opts ...grpc.CallOption) (*ReplyArticles, error)
	// getDTData - get DT data
	GetDTData(ctx context.Context, in *RequestDTData, opts ...grpc.CallOption) (*ReplyDTData, error)
	// requestCrawler - request crawler
	RequestCrawler(ctx context.Context, in *RequestCrawler, opts ...grpc.CallOption) (JarvisCrawlerService_RequestCrawlerClient, error)
}

type jarvisCrawlerServiceClient struct {
	cc *grpc.ClientConn
}

func NewJarvisCrawlerServiceClient(cc *grpc.ClientConn) JarvisCrawlerServiceClient {
	return &jarvisCrawlerServiceClient{cc}
}

func (c *jarvisCrawlerServiceClient) Translate(ctx context.Context, in *RequestTranslate, opts ...grpc.CallOption) (*ReplyTranslate, error) {
	out := new(ReplyTranslate)
	err := c.cc.Invoke(ctx, "/jarviscrawlercore.JarvisCrawlerService/translate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jarvisCrawlerServiceClient) ExportArticle(ctx context.Context, in *RequestArticle, opts ...grpc.CallOption) (JarvisCrawlerService_ExportArticleClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JarvisCrawlerService_serviceDesc.Streams[0], "/jarviscrawlercore.JarvisCrawlerService/exportArticle", opts...)
	if err != nil {
		return nil, err
	}
	x := &jarvisCrawlerServiceExportArticleClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JarvisCrawlerService_ExportArticleClient interface {
	Recv() (*ReplyArticle, error)
	grpc.ClientStream
}

type jarvisCrawlerServiceExportArticleClient struct {
	grpc.ClientStream
}

func (x *jarvisCrawlerServiceExportArticleClient) Recv() (*ReplyArticle, error) {
	m := new(ReplyArticle)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *jarvisCrawlerServiceClient) GetArticles(ctx context.Context, in *RequestArticles, opts ...grpc.CallOption) (*ReplyArticles, error) {
	out := new(ReplyArticles)
	err := c.cc.Invoke(ctx, "/jarviscrawlercore.JarvisCrawlerService/getArticles", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jarvisCrawlerServiceClient) GetDTData(ctx context.Context, in *RequestDTData, opts ...grpc.CallOption) (*ReplyDTData, error) {
	out := new(ReplyDTData)
	err := c.cc.Invoke(ctx, "/jarviscrawlercore.JarvisCrawlerService/getDTData", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *jarvisCrawlerServiceClient) RequestCrawler(ctx context.Context, in *RequestCrawler, opts ...grpc.CallOption) (JarvisCrawlerService_RequestCrawlerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_JarvisCrawlerService_serviceDesc.Streams[1], "/jarviscrawlercore.JarvisCrawlerService/requestCrawler", opts...)
	if err != nil {
		return nil, err
	}
	x := &jarvisCrawlerServiceRequestCrawlerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type JarvisCrawlerService_RequestCrawlerClient interface {
	Recv() (*ReplyCrawlerStream, error)
	grpc.ClientStream
}

type jarvisCrawlerServiceRequestCrawlerClient struct {
	grpc.ClientStream
}

func (x *jarvisCrawlerServiceRequestCrawlerClient) Recv() (*ReplyCrawlerStream, error) {
	m := new(ReplyCrawlerStream)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// JarvisCrawlerServiceServer is the server API for JarvisCrawlerService service.
type JarvisCrawlerServiceServer interface {
	// translate - translate text
	Translate(context.Context, *RequestTranslate) (*ReplyTranslate, error)
	// exportArticle - export article
	ExportArticle(*RequestArticle, JarvisCrawlerService_ExportArticleServer) error
	// getArticles - get articles
	GetArticles(context.Context, *RequestArticles) (*ReplyArticles, error)
	// getDTData - get DT data
	GetDTData(context.Context, *RequestDTData) (*ReplyDTData, error)
	// requestCrawler - request crawler
	RequestCrawler(*RequestCrawler, JarvisCrawlerService_RequestCrawlerServer) error
}

func RegisterJarvisCrawlerServiceServer(s *grpc.Server, srv JarvisCrawlerServiceServer) {
	s.RegisterService(&_JarvisCrawlerService_serviceDesc, srv)
}

func _JarvisCrawlerService_Translate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestTranslate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JarvisCrawlerServiceServer).Translate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jarviscrawlercore.JarvisCrawlerService/Translate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JarvisCrawlerServiceServer).Translate(ctx, req.(*RequestTranslate))
	}
	return interceptor(ctx, in, info, handler)
}

func _JarvisCrawlerService_ExportArticle_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestArticle)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JarvisCrawlerServiceServer).ExportArticle(m, &jarvisCrawlerServiceExportArticleServer{stream})
}

type JarvisCrawlerService_ExportArticleServer interface {
	Send(*ReplyArticle) error
	grpc.ServerStream
}

type jarvisCrawlerServiceExportArticleServer struct {
	grpc.ServerStream
}

func (x *jarvisCrawlerServiceExportArticleServer) Send(m *ReplyArticle) error {
	return x.ServerStream.SendMsg(m)
}

func _JarvisCrawlerService_GetArticles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestArticles)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JarvisCrawlerServiceServer).GetArticles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jarviscrawlercore.JarvisCrawlerService/GetArticles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JarvisCrawlerServiceServer).GetArticles(ctx, req.(*RequestArticles))
	}
	return interceptor(ctx, in, info, handler)
}

func _JarvisCrawlerService_GetDTData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RequestDTData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(JarvisCrawlerServiceServer).GetDTData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/jarviscrawlercore.JarvisCrawlerService/GetDTData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(JarvisCrawlerServiceServer).GetDTData(ctx, req.(*RequestDTData))
	}
	return interceptor(ctx, in, info, handler)
}

func _JarvisCrawlerService_RequestCrawler_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(RequestCrawler)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(JarvisCrawlerServiceServer).RequestCrawler(m, &jarvisCrawlerServiceRequestCrawlerServer{stream})
}

type JarvisCrawlerService_RequestCrawlerServer interface {
	Send(*ReplyCrawlerStream) error
	grpc.ServerStream
}

type jarvisCrawlerServiceRequestCrawlerServer struct {
	grpc.ServerStream
}

func (x *jarvisCrawlerServiceRequestCrawlerServer) Send(m *ReplyCrawlerStream) error {
	return x.ServerStream.SendMsg(m)
}

var _JarvisCrawlerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "jarviscrawlercore.JarvisCrawlerService",
	HandlerType: (*JarvisCrawlerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "translate",
			Handler:    _JarvisCrawlerService_Translate_Handler,
		},
		{
			MethodName: "getArticles",
			Handler:    _JarvisCrawlerService_GetArticles_Handler,
		},
		{
			MethodName: "getDTData",
			Handler:    _JarvisCrawlerService_GetDTData_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "exportArticle",
			Handler:       _JarvisCrawlerService_ExportArticle_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "requestCrawler",
			Handler:       _JarvisCrawlerService_RequestCrawler_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "result.proto",
}

func init() { proto.RegisterFile("result.proto", fileDescriptor_result_ce44c8df94b8d6ff) }

var fileDescriptor_result_ce44c8df94b8d6ff = []byte{
	// 3271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x5a, 0xcd, 0x6f, 0x23, 0xc7,
	0x95, 0xe7, 0x87, 0x28, 0x91, 0x45, 0x49, 0xd3, 0xaa, 0xd1, 0x18, 0xbd, 0xda, 0xb1, 0xad, 0x69,
	0x7b, 0xc6, 0xda, 0x59, 0x63, 0x76, 0xac, 0xf5, 0xcc, 0x1a, 0x5e, 0xdb, 0x70, 0x8b, 0xe2, 0x88,
	0x94, 0x29, 0x8a, 0x5b, 0x6c, 0xd9, 0x1e, 0x63, 0x13, 0xa1, 0xd8, 0x5d, 0x22, 0x5b, 0xee, 0x0f,
	0x4e, 0x77, 0xb5, 0x34, 0x74, 0x0e, 0x49, 0x0e, 0xb9, 0x24, 0x40, 0x80, 0xfc, 0x0b, 0xb9, 0xe7,
	0xbf, 0x30, 0x10, 0x9f, 0x62, 0x20, 0xf7, 0x1c, 0x72, 0xf4, 0x39, 0xc8, 0x3d, 0xa8, 0x8f, 0x26,
	0xbb, 0xc9, 0x6e, 0x71, 0x0c, 0x04, 0xb9, 0xd5, 0x7b, 0x7c, 0xef, 0xd5, 0xab, 0xf7, 0x5e, 0xfd,
	0xea, 0x55, 0x35, 0xc1, 0x7a, 0x40, 0xc2, 0xc8, 0xa1, 0x8f, 0xc6, 0x81, 0x4f, 0x7d, 0xb8, 0x75,
	0x89, 0x83, 0x2b, 0x3b, 0x34, 0x03, 0x7c, 0xed, 0x90, 0xc0, 0xf4, 0x03, 0xb2, 0xb3, 0x81, 0x1d,
	0xdb, 0xc5, 0x2e, 0x16, 0x12, 0x3b, 0xb7, 0x43, 0x4a, 0xc8, 0x18, 0x7b, 0x96, 0x39, 0x22, 0x78,
	0x2c, 0x99, 0xdb, 0xae, 0x1f, 0x79, 0x14, 0xdb, 0x5e, 0x48, 0x09, 0x76, 0x42, 0xc9, 0xad, 0x53,
	0x17, 0x3b, 0x8e, 0x24, 0xd6, 0x29, 0xf6, 0x07, 0xd8, 0x97, 0xd4, 0xa6, 0x8b, 0xbd, 0x51, 0x84,
	0xad, 0x41, 0xfc, 0xab, 0xe5, 0x47, 0x03, 0xec, 0x49, 0xaa, 0x76, 0x19, 0x5c, 0xca, 0xe1, 0x2d,
	0x4a, 0x1c, 0x32, 0x0c, 0xf0, 0x78, 0x24, 0x19, 0xc0, 0xc7, 0x03, 0x1a, 0x4f, 0x30, 0xc2, 0xfe,
	0xd3, 0xab, 0xd8, 0xb1, 0x71, 0x34, 0x70, 0x6c, 0x93, 0x06, 0xd8, 0x0b, 0xed, 0x58, 0xa2, 0x7a,
	0x69, 0xc9, 0x91, 0x42, 0x89, 0x39, 0xb2, 0x3d, 0x1c, 0xda, 0xf1, 0x4a, 0xea, 0x43, 0xe2, 0xdb,
	0xf1, 0x0a, 0xaa, 0x56, 0xac, 0xb2, 0x89, 0x03, 0x6a, 0x9b, 0x0e, 0xd9, 0x8f, 0xc5, 0xc6, 0x4f,
	0xaf, 0xac, 0x89, 0x20, 0xb4, 0x9f, 0x81, 0x5a, 0xdb, 0xc5, 0x43, 0xd2, 0xf6, 0x2e, 0x7c, 0xb8,
	0x03, 0xaa, 0x23, 0x1c, 0x8e, 0xba, 0xd8, 0x25, 0x6a, 0x71, 0xb7, 0xb8, 0x57, 0x43, 0x53, 0x1a,
	0x2a, 0xa0, 0x1c, 0x05, 0x8e, 0x5a, 0xe2, 0x6c, 0x36, 0x84, 0xdb, 0xa0, 0x72, 0x6d, 0x5b, 0x74,
	0xa4, 0x96, 0x77, 0x8b, 0x7b, 0x15, 0x24, 0x08, 0xf8, 0x1a, 0x58, 0x1d, 0x11, 0x7b, 0x38, 0xa2,
	0xea, 0x0a, 0x67, 0x4b, 0x0a, 0x42, 0xb0, 0x62, 0x61, 0x8a, 0xd5, 0xca, 0x6e, 0x71, 0x6f, 0x1d,
	0xf1, 0xb1, 0xf6, 0x9b, 0x22, 0xa8, 0xf5, 0x70, 0x80, 0x79, 0x38, 0xe0, 0x63, 0x50, 0x1a, 0x53,
	0x3e, 0xef, 0xe6, 0xfe, 0xee, 0xa3, 0x85, 0xbc, 0x3d, 0x9a, 0x4a, 0x1a, 0x93, 0x31, 0x41, 0xa5,
	0x31, 0x85, 0xbb, 0xa0, 0x6e, 0xbb, 0xc3, 0x56, 0xec, 0xb2, 0xf0, 0x2d, 0xc9, 0x62, 0xb3, 0x52,
	0xf2, 0x92, 0x72, 0x17, 0x6b, 0x88, 0x8f, 0x99, 0x87, 0xb6, 0x3b, 0x3c, 0x43, 0x1d, 0xee, 0x61,
	0x0d, 0x49, 0x4a, 0xfb, 0xa1, 0x04, 0x6e, 0x37, 0x5f, 0x8e, 0xfd, 0x80, 0xea, 0x22, 0x60, 0x88,
	0x17, 0x12, 0x5b, 0x27, 0xb5, 0xa9, 0x13, 0x87, 0x44, 0x10, 0xcc, 0x0a, 0x8e, 0xe8, 0xc8, 0x0f,
	0xe4, 0xb4, 0x92, 0x82, 0x77, 0x41, 0xed, 0x3a, 0xb0, 0x29, 0x31, 0x6c, 0x97, 0xc8, 0x69, 0x67,
	0x0c, 0xa8, 0x82, 0x35, 0x99, 0x0d, 0x39, 0x79, 0x4c, 0xc6, 0xf1, 0xad, 0xcc, 0xe2, 0xfb, 0x18,
	0xac, 0xd8, 0xee, 0x30, 0x54, 0x57, 0x77, 0xcb, 0x7b, 0xf5, 0xfd, 0xbb, 0x19, 0x11, 0x99, 0x66,
	0x0e, 0x71, 0x49, 0xf8, 0x11, 0x00, 0xdc, 0x39, 0xce, 0x57, 0xd7, 0x76, 0x8b, 0x4b, 0xf5, 0x12,
	0xf2, 0x3c, 0x56, 0x78, 0x18, 0xaa, 0xd5, 0xdd, 0x32, 0x8f, 0x15, 0x16, 0x16, 0xc7, 0x71, 0xd8,
	0x43, 0xb5, 0x96, 0xeb, 0xc9, 0x34, 0x37, 0x28, 0x21, 0xcf, 0x56, 0x1b, 0x46, 0xae, 0x8b, 0x83,
	0x89, 0x0a, 0xc4, 0x6a, 0x25, 0xa9, 0xfd, 0xaa, 0x04, 0xd6, 0x64, 0x94, 0xff, 0xd9, 0xf1, 0x8d,
	0x67, 0x5c, 0x49, 0xcd, 0x98, 0x11, 0xdf, 0x7d, 0x50, 0xb1, 0x79, 0xa0, 0x56, 0x5f, 0x21, 0x50,
	0x42, 0x94, 0x55, 0x5c, 0x48, 0x4c, 0xdf, 0xb3, 0x0c, 0xee, 0xf1, 0x9a, 0xa8, 0xb8, 0x04, 0x8b,
	0x79, 0x30, 0x0e, 0x88, 0x6b, 0x47, 0xae, 0x5a, 0xdd, 0x2d, 0xee, 0x55, 0x51, 0x4c, 0xb2, 0xf8,
	0x3a, 0xd8, 0x1b, 0xaa, 0x35, 0x51, 0x8b, 0x6c, 0xac, 0x35, 0x41, 0x5d, 0x86, 0xa1, 0x63, 0x87,
	0x14, 0x3e, 0x05, 0x55, 0x59, 0x0f, 0xa1, 0x5a, 0xe4, 0xc1, 0xde, 0xc9, 0xf0, 0x2a, 0x2e, 0xcf,
	0xa9, 0xac, 0xf6, 0x25, 0xd8, 0x6e, 0xf8, 0xde, 0x85, 0x13, 0x11, 0xcf, 0x24, 0x67, 0x63, 0x0b,
	0x53, 0xd2, 0xa6, 0xc4, 0xcd, 0x09, 0xed, 0xe2, 0x56, 0x4e, 0x84, 0xad, 0x9c, 0x4e, 0xd4, 0x0b,
	0xa0, 0xce, 0x5b, 0x3e, 0x0a, 0xfc, 0x68, 0x6c, 0x7b, 0xc3, 0x44, 0x8a, 0x8a, 0xa9, 0x14, 0x7d,
	0x0c, 0x2a, 0x36, 0x25, 0x6e, 0xa8, 0x96, 0xf8, 0x12, 0xde, 0xc9, 0x58, 0x42, 0x96, 0xb7, 0x48,
	0x68, 0x69, 0x3f, 0x49, 0x2e, 0x46, 0x77, 0x1c, 0x21, 0x11, 0xc2, 0x26, 0x58, 0x8b, 0xc4, 0x50,
	0xc6, 0xe6, 0x3f, 0x5f, 0xc1, 0x70, 0xec, 0x2c, 0x8a, 0x75, 0xb5, 0x10, 0xd4, 0x9f, 0x37, 0x1a,
	0xbe, 0x3b, 0xc6, 0x9e, 0x4d, 0x42, 0x96, 0x15, 0x6f, 0x86, 0x77, 0x7c, 0x9c, 0x11, 0x20, 0x08,
	0x56, 0x6c, 0xef, 0xc2, 0x8f, 0x71, 0x84, 0x8d, 0x59, 0x70, 0x07, 0x98, 0x9a, 0x23, 0x59, 0x69,
	0x82, 0x60, 0x5c, 0x3b, 0xc4, 0xe3, 0x31, 0xaf, 0xb4, 0x2a, 0x12, 0x84, 0xf6, 0xeb, 0x22, 0x80,
	0x8d, 0x20, 0xf2, 0xcc, 0xd1, 0x01, 0x0e, 0x49, 0xd3, 0x1d, 0x3b, 0xfe, 0x84, 0x90, 0xcc, 0xc9,
	0x21, 0x58, 0x31, 0x7d, 0x2b, 0x46, 0x33, 0x3e, 0x9e, 0xe5, 0xb1, 0x9c, 0xcc, 0xe3, 0x5d, 0x50,
	0x0b, 0x29, 0x0e, 0xe8, 0x21, 0xa6, 0x31, 0x9c, 0xcc, 0x18, 0x2c, 0xa7, 0xc4, 0xb3, 0xf8, 0x6f,
	0xa2, 0xe8, 0x63, 0x52, 0xfb, 0x73, 0x11, 0x6c, 0xcf, 0x9c, 0x69, 0x7b, 0x57, 0x24, 0xa4, 0x2e,
	0xf1, 0x28, 0x7c, 0x1b, 0x6c, 0x60, 0xcf, 0xf3, 0x23, 0xcf, 0x24, 0x42, 0x51, 0xf8, 0x95, 0x66,
	0xc2, 0x87, 0x40, 0xf1, 0x83, 0x21, 0xf6, 0xec, 0x6f, 0x30, 0xb5, 0x7d, 0x2f, 0x01, 0xbd, 0x0b,
	0x7c, 0xa8, 0x81, 0x75, 0x87, 0x60, 0x4b, 0xcc, 0xe1, 0x07, 0xdc, 0xff, 0x2a, 0x4a, 0xf1, 0x98,
	0xcc, 0x45, 0xe4, 0x59, 0x2c, 0x49, 0x7e, 0xe4, 0x59, 0x72, 0x25, 0x29, 0x1e, 0xdb, 0x77, 0xae,
	0xef, 0x91, 0x09, 0xc2, 0x76, 0x48, 0x2c, 0xb9, 0xa0, 0x24, 0x4b, 0xfb, 0x63, 0x09, 0xdc, 0x99,
	0x2d, 0x4a, 0x37, 0x5f, 0x44, 0x76, 0x68, 0x33, 0x3f, 0xe0, 0x87, 0x40, 0xc5, 0x8c, 0x0c, 0x88,
	0x75, 0x3a, 0xef, 0xb7, 0x58, 0x60, 0xee, 0xef, 0x79, 0xba, 0x8d, 0x59, 0x82, 0x72, 0x7f, 0x5f,
	0x8c, 0x66, 0x39, 0x2b, 0x9a, 0xdb, 0xa0, 0x32, 0x0e, 0x6c, 0x33, 0x4e, 0xa0, 0x20, 0xe0, 0x47,
	0xe0, 0xdf, 0x84, 0x5d, 0xdb, 0x1b, 0x2e, 0x38, 0x2d, 0x56, 0x9f, 0x2f, 0x90, 0xab, 0xcd, 0xdd,
	0x5e, 0xbd, 0x41, 0x9b, 0x09, 0x68, 0x2f, 0x93, 0xa5, 0x9a, 0xcc, 0x92, 0x2d, 0xc7, 0x89, 0xc8,
	0xa5, 0x78, 0x0b, 0xd9, 0x2e, 0x65, 0x64, 0x7b, 0x07, 0x54, 0x7b, 0x38, 0xa0, 0x1e, 0x09, 0x42,
	0xb5, 0xcc, 0x4f, 0x9a, 0x29, 0xad, 0x7d, 0x5f, 0x04, 0xaf, 0xcd, 0xa6, 0x7e, 0x96, 0x2c, 0x80,
	0x57, 0x2b, 0xcd, 0x3d, 0x70, 0x8b, 0xb7, 0x4b, 0xd8, 0x9c, 0xab, 0xcc, 0x79, 0xf6, 0x7c, 0x41,
	0x95, 0x17, 0x0a, 0x0a, 0x36, 0x40, 0x2d, 0x5e, 0x5c, 0xa8, 0x5a, 0x1c, 0x70, 0xee, 0x67, 0x01,
	0xce, 0x42, 0xa8, 0xd0, 0x4c, 0x4f, 0xfb, 0x76, 0x35, 0xb9, 0xa2, 0x64, 0xa8, 0x5f, 0x79, 0xef,
	0xbf, 0x01, 0x80, 0x89, 0x29, 0x19, 0xfa, 0x81, 0x4d, 0xe2, 0x90, 0x25, 0x38, 0xf0, 0x31, 0xb8,
	0x3d, 0x22, 0xd8, 0x7a, 0x11, 0xe1, 0x80, 0x92, 0x20, 0x44, 0x64, 0x68, 0xfb, 0x5e, 0xa8, 0xae,
	0x70, 0xc1, 0xac, 0x9f, 0xd8, 0xda, 0x2f, 0x58, 0x50, 0x49, 0x12, 0x1d, 0x92, 0x2c, 0x96, 0x24,
	0x41, 0x06, 0xa2, 0xfd, 0xa8, 0xa1, 0x29, 0xcd, 0x62, 0xec, 0x8f, 0x49, 0x80, 0xa9, 0xed, 0x0d,
	0xfb, 0x14, 0xd3, 0x28, 0x94, 0xc7, 0xe0, 0x3c, 0x9b, 0xe5, 0x4c, 0x6e, 0x62, 0x29, 0x57, 0x15,
	0x39, 0x4b, 0x31, 0x99, 0x3d, 0x07, 0x87, 0x54, 0x66, 0x9b, 0xf5, 0x76, 0xf2, 0x84, 0x9c, 0x67,
	0x33, 0xbc, 0x73, 0xc8, 0x10, 0x3b, 0x3c, 0xaf, 0xa2, 0xa1, 0x98, 0x31, 0xf8, 0xd1, 0x4c, 0x7d,
	0xf3, 0xeb, 0xfe, 0xc4, 0x1d, 0xf8, 0x8e, 0x6a, 0xc9, 0xa3, 0x79, 0xc6, 0x62, 0xe5, 0x79, 0x85,
	0x9d, 0x88, 0x87, 0xbf, 0xdd, 0x3b, 0x55, 0x89, 0x28, 0xe1, 0x24, 0x8f, 0xad, 0x9c, 0xef, 0x40,
	0xf6, 0xfb, 0x85, 0x68, 0x81, 0x63, 0x9a, 0x21, 0x2a, 0x3f, 0xab, 0x7a, 0xa7, 0xea, 0x50, 0x20,
	0xaa, 0x24, 0xe1, 0x03, 0xb0, 0x99, 0x28, 0x1d, 0x26, 0x30, 0xe2, 0x02, 0x73, 0x5c, 0xd8, 0x9b,
	0x46, 0x84, 0x57, 0x75, 0xa8, 0x7e, 0x27, 0x4e, 0xb2, 0xff, 0xb8, 0xb1, 0xb0, 0x92, 0x1b, 0x01,
	0xa5, 0x0d, 0xc0, 0x63, 0xb0, 0x6e, 0x46, 0x41, 0x7c, 0xa0, 0x84, 0xea, 0x1f, 0x4a, 0xaf, 0x50,
	0xa9, 0xb1, 0x38, 0x4a, 0xe9, 0x32, 0x5b, 0x03, 0x1f, 0x07, 0xd6, 0x09, 0x71, 0x07, 0x2c, 0xf3,
	0xbf, 0x2b, 0xff, 0x28, 0x5b, 0x49, 0x5d, 0xd8, 0x01, 0x1b, 0x63, 0x1c, 0xd2, 0x99, 0x63, 0x7f,
	0xff, 0x51, 0xc6, 0xd2, 0xca, 0xda, 0x6f, 0x8b, 0x40, 0x41, 0xe4, 0x45, 0x44, 0x42, 0x6a, 0xb0,
	0x8d, 0xec, 0xb0, 0x22, 0x8d, 0x7b, 0xfb, 0x62, 0xa2, 0xb7, 0x67, 0xe9, 0x73, 0x30, 0xbd, 0xf0,
	0x03, 0x57, 0x6e, 0xa2, 0x29, 0xcd, 0x9b, 0x9c, 0xc0, 0xec, 0xb0, 0x16, 0x2c, 0x6e, 0x72, 0x04,
	0xc9, 0xb4, 0x2c, 0x12, 0x52, 0xfe, 0x93, 0x80, 0xe1, 0x29, 0xcd, 0x8f, 0x5e, 0xff, 0x6b, 0xe2,
	0xc9, 0x82, 0x12, 0x84, 0xf6, 0x36, 0xd8, 0x44, 0x64, 0xec, 0x4c, 0x6e, 0xf4, 0x46, 0xfb, 0x7f,
	0x26, 0xc5, 0xbd, 0xd6, 0xd3, 0x5d, 0x7e, 0x71, 0xd6, 0x59, 0x68, 0x60, 0x1d, 0x53, 0x8a, 0xcd,
	0xd1, 0xf1, 0xff, 0x45, 0x24, 0x98, 0xc4, 0x98, 0x99, 0xe4, 0xe5, 0xf8, 0xf0, 0x8b, 0x12, 0x58,
	0xe7, 0x4e, 0xc4, 0xc6, 0x3f, 0x01, 0xab, 0xe2, 0xee, 0xcb, 0xed, 0xd7, 0xf7, 0x1f, 0x64, 0xc4,
	0x3a, 0xe3, 0x82, 0x83, 0xa4, 0x16, 0xdb, 0x41, 0xd4, 0xa7, 0xd8, 0xe9, 0x10, 0x6f, 0x48, 0x47,
	0xdc, 0x93, 0x0a, 0x4a, 0xb2, 0x58, 0xa0, 0xcc, 0x28, 0xe8, 0xb3, 0x1e, 0x43, 0xde, 0xfa, 0xa6,
	0x34, 0xdb, 0x9d, 0x66, 0x14, 0x48, 0x5d, 0x71, 0xf7, 0x9b, 0x31, 0xe2, 0xab, 0xe5, 0x61, 0x7c,
	0x05, 0x94, 0x57, 0x4b, 0x46, 0x33, 0x9c, 0xe0, 0x93, 0xb4, 0x62, 0x01, 0x71, 0x44, 0xa5, 0x99,
	0xd3, 0x0b, 0xe4, 0x5a, 0xe2, 0x02, 0xf9, 0x73, 0x70, 0x2b, 0x1d, 0xe0, 0x10, 0x6e, 0x27, 0x22,
	0x7c, 0x50, 0x52, 0x8b, 0x22, 0xca, 0x0f, 0xb2, 0xa2, 0xcc, 0x7f, 0x4e, 0x47, 0x5a, 0x05, 0x6b,
	0xd7, 0x64, 0x10, 0xda, 0xd3, 0xd3, 0x3a, 0x26, 0x73, 0x72, 0xf0, 0x19, 0xd8, 0x48, 0xa6, 0x20,
	0x84, 0x1f, 0xa6, 0x3a, 0x78, 0x96, 0x85, 0x37, 0xf2, 0x3b, 0x78, 0xd6, 0xf3, 0x27, 0xba, 0xf8,
	0x7d, 0xa0, 0xca, 0xd5, 0xcc, 0x76, 0x84, 0x68, 0x54, 0x27, 0xac, 0xd7, 0x0e, 0x09, 0x0e, 0xcc,
	0x51, 0xdc, 0x6b, 0x0b, 0x4a, 0x9b, 0x80, 0xad, 0xf9, 0x8d, 0xb1, 0xff, 0xaf, 0xd9, 0x19, 0xda,
	0x7d, 0x70, 0x6b, 0x3a, 0xa7, 0xbc, 0x2a, 0x67, 0x6d, 0x82, 0xef, 0x4b, 0xa0, 0xae, 0x7b, 0xd8,
	0x99, 0x7c, 0x43, 0x7a, 0xec, 0x0a, 0xb5, 0xb8, 0x05, 0xb6, 0x41, 0xc5, 0x22, 0x0e, 0x9e, 0xc8,
	0x8a, 0x13, 0x04, 0xab, 0x8a, 0x2b, 0x9b, 0x5c, 0xb3, 0x72, 0xfd, 0x22, 0xf1, 0xcc, 0x90, 0x66,
	0x32, 0xe4, 0x8d, 0x19, 0xad, 0xe4, 0xb3, 0xc3, 0x1c, 0x17, 0xbe, 0x0b, 0xb6, 0x2c, 0x72, 0x65,
	0x9b, 0xa4, 0x6f, 0x62, 0x87, 0x3c, 0xc3, 0x26, 0xeb, 0x4f, 0x58, 0x21, 0x96, 0xd0, 0xe2, 0x0f,
	0x6c, 0xd9, 0x76, 0x78, 0xe2, 0x0f, 0x6c, 0x47, 0xf4, 0x4b, 0x55, 0x34, 0xa5, 0xf9, 0xa3, 0x43,
	0xd8, 0xc1, 0x9e, 0x15, 0x9a, 0x78, 0x2c, 0xae, 0x80, 0x55, 0x94, 0x64, 0xb1, 0x13, 0xcd, 0x23,
	0xc4, 0xea, 0x9b, 0x01, 0x21, 0x5e, 0x38, 0xf2, 0x69, 0x28, 0xaf, 0x82, 0xf3, 0x6c, 0x36, 0x0f,
	0x63, 0x75, 0xfc, 0x61, 0xc8, 0x0f, 0xbd, 0x2a, 0x9a, 0xd2, 0x2c, 0x29, 0xd4, 0x76, 0x89, 0x1f,
	0x51, 0x7e, 0xd6, 0x55, 0x50, 0x4c, 0x6a, 0xd7, 0x60, 0x4b, 0x06, 0x74, 0x66, 0x2b, 0xb3, 0x9d,
	0xf8, 0x08, 0xac, 0x50, 0x76, 0x9e, 0x96, 0xf8, 0x9b, 0xca, 0x5e, 0x56, 0x21, 0xce, 0xdb, 0xe1,
	0x6f, 0x2b, 0x5c, 0x8b, 0x25, 0x6a, 0x10, 0x5d, 0xf0, 0xb0, 0xaf, 0x23, 0x36, 0xd4, 0xbe, 0x2d,
	0x81, 0x4d, 0xa9, 0x81, 0xc8, 0x0b, 0xfe, 0x64, 0x94, 0x09, 0x68, 0x96, 0x7f, 0xed, 0x39, 0x3e,
	0xb6, 0xf8, 0x1d, 0x5d, 0x24, 0x35, 0xc5, 0x63, 0xeb, 0x1e, 0x44, 0x17, 0x07, 0x13, 0xca, 0x3b,
	0x1a, 0x8e, 0x23, 0x31, 0xcd, 0x2b, 0x5d, 0xb4, 0x0b, 0xf2, 0x01, 0x49, 0x50, 0xd3, 0xdb, 0x0e,
	0x37, 0xca, 0x32, 0x57, 0x46, 0x33, 0x06, 0x7f, 0xd4, 0x09, 0x8f, 0xbe, 0xb2, 0xc7, 0x32, 0x5f,
	0x92, 0x62, 0xd9, 0x32, 0x7d, 0x8f, 0x12, 0x8f, 0xaf, 0x2c, 0xbe, 0xb0, 0x27, 0x58, 0x5c, 0x73,
	0x8c, 0x2d, 0x2b, 0x90, 0xed, 0x89, 0xa4, 0x58, 0xdf, 0x15, 0x10, 0xd7, 0xa7, 0x84, 0xff, 0x26,
	0x5a, 0x92, 0x04, 0x87, 0xd7, 0x88, 0x3b, 0x14, 0xa5, 0x69, 0x89, 0x35, 0xc4, 0x34, 0xf3, 0xd5,
	0x76, 0x87, 0xb2, 0x20, 0x89, 0xc0, 0xc2, 0x29, 0x43, 0xfb, 0x1b, 0x3f, 0xcd, 0x18, 0x6a, 0x24,
	0xb6, 0x05, 0xdb, 0x9f, 0x78, 0x28, 0x9e, 0x35, 0x8a, 0xc2, 0x5c, 0x4c, 0x33, 0x73, 0x6c, 0x2c,
	0xe2, 0x25, 0xe2, 0x39, 0x63, 0xb0, 0xcc, 0x93, 0x40, 0xf6, 0xa8, 0x35, 0xc4, 0xc7, 0xf0, 0x09,
	0x58, 0x09, 0xc8, 0x8b, 0x50, 0x25, 0xfc, 0xd0, 0xbd, 0x97, 0x9f, 0x79, 0x99, 0x47, 0xc4, 0xc5,
	0xe1, 0x33, 0x50, 0x0f, 0x13, 0x55, 0x7b, 0xc1, 0xb5, 0xdf, 0x7e, 0x95, 0xba, 0x41, 0x49, 0x45,
	0xfe, 0xd4, 0xc1, 0x6a, 0x7a, 0x28, 0x5c, 0x62, 0x63, 0xed, 0x97, 0x45, 0xb0, 0xd5, 0x10, 0x26,
	0x58, 0xe7, 0x67, 0x87, 0xd4, 0x36, 0xc3, 0x78, 0xd9, 0xdd, 0xc8, 0x0d, 0x93, 0xcb, 0x66, 0x34,
	0xaf, 0x92, 0x09, 0x15, 0xbf, 0x95, 0x64, 0x95, 0x48, 0x9a, 0x23, 0x4d, 0xfc, 0x02, 0x54, 0x41,
	0x7c, 0xcc, 0x72, 0x1d, 0x08, 0x2c, 0xe4, 0x2a, 0xa2, 0x7c, 0x92, 0x2c, 0xed, 0xaf, 0xf5, 0xe9,
	0x89, 0x2c, 0x5d, 0x99, 0xe1, 0x7a, 0x31, 0x81, 0xeb, 0xf0, 0x53, 0x50, 0x97, 0xcb, 0x35, 0x66,
	0x1b, 0xe8, 0x8d, 0xcc, 0xde, 0x65, 0x2a, 0x85, 0x92, 0x2a, 0xc9, 0xed, 0x5b, 0x4e, 0x6d, 0x5f,
	0xf8, 0x19, 0xa8, 0x99, 0x03, 0x89, 0xeb, 0xbc, 0x72, 0xb2, 0x5f, 0x32, 0xf2, 0x8e, 0x82, 0x56,
	0x01, 0xcd, 0xf4, 0xe1, 0x33, 0x00, 0xe8, 0x14, 0xf8, 0x79, 0xa9, 0x65, 0x27, 0x6c, 0xe1, 0x90,
	0x68, 0x15, 0x50, 0x42, 0x13, 0x7e, 0x08, 0x56, 0x2d, 0xca, 0xcf, 0xd7, 0x0b, 0x6e, 0x63, 0x37,
	0xdf, 0xc6, 0xa1, 0xc1, 0xce, 0xe3, 0x56, 0x01, 0x49, 0x0d, 0x78, 0x00, 0xea, 0x78, 0x56, 0xc9,
	0xbc, 0x37, 0xce, 0x39, 0xf6, 0x66, 0x52, 0xad, 0x02, 0x4a, 0x2a, 0xc1, 0xff, 0x01, 0x15, 0xfe,
	0x7a, 0xad, 0xda, 0x5c, 0xfb, 0xcd, 0xfc, 0xe9, 0x8f, 0x88, 0xdf, 0xee, 0xb5, 0x0a, 0x48, 0xc8,
	0xf3, 0x00, 0x4c, 0x1f, 0xc2, 0xd5, 0xcb, 0xa5, 0x01, 0x20, 0xe6, 0xa8, 0xed, 0xe9, 0xa1, 0x8d,
	0x79, 0x00, 0xa6, 0x9a, 0xf0, 0x14, 0x6c, 0xa4, 0x3e, 0x04, 0xa8, 0x5f, 0x73, 0x53, 0xef, 0xe4,
	0x9b, 0xea, 0x33, 0x71, 0xdd, 0xb3, 0x1a, 0x4c, 0xbc, 0x55, 0x40, 0x69, 0x7d, 0xf8, 0x1e, 0x28,
	0x5f, 0x06, 0x97, 0xaa, 0xc3, 0xcd, 0xbc, 0x9e, 0x6f, 0xe6, 0x18, 0x1d, 0xb7, 0x0a, 0x88, 0xc9,
	0xc2, 0x47, 0xa0, 0x74, 0x69, 0xa9, 0x6e, 0xee, 0x73, 0x64, 0xac, 0x71, 0xd8, 0x2a, 0xa0, 0xd2,
	0xa5, 0x05, 0x3f, 0x06, 0x6b, 0xf2, 0x5b, 0x86, 0xea, 0x71, 0xa5, 0x7b, 0xf9, 0x4a, 0xba, 0x10,
	0x6c, 0x15, 0x50, 0xac, 0x03, 0x11, 0xbb, 0xb5, 0x24, 0x3f, 0x73, 0xa8, 0x3e, 0xb7, 0xb2, 0x97,
	0x6f, 0xe5, 0x44, 0xca, 0xf7, 0xb9, 0x7c, 0xab, 0x80, 0xe6, 0x2c, 0xb0, 0x3c, 0xf2, 0x8f, 0x24,
	0xea, 0x78, 0x59, 0x1e, 0x0d, 0x26, 0xc6, 0xf2, 0xc8, 0xe5, 0x59, 0x01, 0x8a, 0x0f, 0x2a, 0xea,
	0x8b, 0x65, 0x05, 0x68, 0x70, 0x39, 0x56, 0x80, 0x42, 0x03, 0x7e, 0x0a, 0xaa, 0xf1, 0xe7, 0x17,
	0x35, 0xe4, 0xda, 0xda, 0x0d, 0x4b, 0xe0, 0x92, 0x87, 0x07, 0xad, 0x02, 0x9a, 0x6a, 0xf1, 0xf2,
	0xe7, 0x1f, 0x6c, 0x54, 0xba, 0xb4, 0xfc, 0xb9, 0x1c, 0x2f, 0x7f, 0x3e, 0x82, 0x0d, 0x50, 0x9b,
	0x7e, 0xd3, 0x51, 0x23, 0xae, 0xfe, 0xd6, 0x4d, 0x05, 0x28, 0x45, 0xd9, 0x3e, 0x9e, 0xea, 0xc1,
	0xf7, 0xc1, 0x8a, 0x8f, 0x07, 0x54, 0xbd, 0xca, 0xdd, 0x3c, 0x52, 0xff, 0x54, 0x3f, 0x30, 0x5a,
	0x05, 0xc4, 0xa5, 0x59, 0xb4, 0xf9, 0x17, 0x23, 0xf5, 0x7a, 0x59, 0xb4, 0x5b, 0x4c, 0x8c, 0x45,
	0x9b, 0xcb, 0xb3, 0x6a, 0x4f, 0x7d, 0x5d, 0x52, 0x5f, 0x2e, 0xab, 0xf6, 0x1e, 0x17, 0x37, 0x84,
	0x38, 0xab, 0xf6, 0x94, 0x3e, 0x4b, 0x41, 0xfc, 0x99, 0x49, 0x9d, 0x2c, 0x4b, 0x81, 0x6c, 0x7f,
	0x19, 0x06, 0x4d, 0xb5, 0xe0, 0x53, 0x50, 0xe1, 0x1f, 0xa6, 0xd4, 0x6f, 0x96, 0x85, 0x80, 0x49,
	0xb1, 0xa5, 0x70, 0xf1, 0x83, 0x4d, 0xb0, 0x2e, 0x65, 0x7a, 0x38, 0xc0, 0xae, 0xf6, 0x97, 0xba,
	0xbc, 0x16, 0xc5, 0x08, 0x3f, 0x87, 0xe5, 0xc5, 0x1f, 0x8f, 0xe5, 0x87, 0x00, 0x84, 0xd3, 0x23,
	0x8b, 0x1f, 0x06, 0xd9, 0x18, 0xb3, 0x70, 0xbc, 0xa1, 0x84, 0x1e, 0x6c, 0x2f, 0xe2, 0xfe, 0xcd,
	0xf7, 0xfe, 0xe4, 0x73, 0x51, 0x1a, 0xf5, 0xbb, 0xf2, 0x9d, 0x6b, 0xd6, 0x7a, 0x4b, 0xe8, 0xcf,
	0x0a, 0xfa, 0x5c, 0x93, 0xde, 0x2a, 0xa0, 0x79, 0x65, 0xf8, 0xc1, 0x1c, 0xfa, 0x67, 0x07, 0x7f,
	0xec, 0x4c, 0x16, 0xb0, 0xff, 0x28, 0x0b, 0xfb, 0xdf, 0xca, 0x53, 0xbf, 0xe1, 0x00, 0x78, 0x92,
	0x3e, 0x00, 0x5e, 0xcf, 0x33, 0x31, 0x07, 0xff, 0x87, 0x19, 0xf0, 0xaf, 0xe5, 0xe9, 0xe6, 0x82,
	0xff, 0x49, 0x36, 0xf8, 0xdf, 0xcf, 0x33, 0xb4, 0x04, 0xfa, 0xff, 0x2b, 0x09, 0xfd, 0xff, 0x9e,
	0x67, 0x24, 0x01, 0xfc, 0xef, 0x26, 0x80, 0x7f, 0x27, 0x57, 0x3e, 0x86, 0xfd, 0xff, 0x9d, 0x87,
	0xfd, 0x37, 0x73, 0xe3, 0xbd, 0x08, 0xfa, 0xbd, 0x1c, 0xd0, 0x7f, 0x90, 0x67, 0x63, 0x29, 0xe4,
	0x3f, 0x49, 0x43, 0x7e, 0x6e, 0xe6, 0xe6, 0x00, 0xff, 0x83, 0x39, 0xc0, 0xcf, 0xad, 0xb9, 0x05,
	0xb8, 0xff, 0x64, 0x01, 0xee, 0x77, 0x73, 0x9d, 0xcf, 0x02, 0xfb, 0x0f, 0xe6, 0xc0, 0x3e, 0xbf,
	0xda, 0xe7, 0xa1, 0x5e, 0x5f, 0x84, 0xfa, 0x7b, 0xf9, 0xc5, 0x96, 0x09, 0xf4, 0xfb, 0x29, 0xa0,
	0xbf, 0x9b, 0xa7, 0x9d, 0x82, 0xf9, 0x27, 0x69, 0x98, 0xcf, 0x8d, 0xf0, 0x1c, 0xc8, 0x9f, 0x64,
	0x83, 0x7c, 0x6e, 0x55, 0x2f, 0x81, 0xf8, 0x4f, 0x16, 0x20, 0x3e, 0x37, 0xec, 0x99, 0x00, 0xff,
	0x7e, 0x1a, 0xe0, 0x73, 0x97, 0x9e, 0x86, 0xf7, 0x5b, 0x60, 0x43, 0x4a, 0x08, 0xac, 0xd2, 0x7e,
	0x5f, 0x02, 0x30, 0x89, 0xef, 0x7d, 0x1a, 0x10, 0xec, 0xce, 0x3f, 0x5e, 0x15, 0x6f, 0x7e, 0xbc,
	0x2a, 0xdd, 0xf4, 0x78, 0x55, 0xbe, 0xe9, 0xf1, 0x6a, 0x65, 0xd9, 0xe3, 0x55, 0xe5, 0xa6, 0xc7,
	0xab, 0xd5, 0xd9, 0xe3, 0x15, 0xbb, 0x79, 0x90, 0x20, 0xf0, 0x83, 0xf8, 0x45, 0x89, 0x13, 0xf0,
	0x10, 0xac, 0x07, 0x89, 0xd5, 0xa9, 0xdf, 0x15, 0x6f, 0xde, 0xe2, 0x52, 0x0e, 0xa5, 0xb4, 0x1e,
	0xda, 0x60, 0x23, 0xf5, 0x77, 0x09, 0x58, 0x07, 0x6b, 0x3d, 0xe3, 0xbc, 0x7b, 0xd6, 0xe9, 0x28,
	0x05, 0x49, 0x18, 0xcd, 0x2f, 0x0d, 0xa5, 0x08, 0xd7, 0x41, 0xb5, 0x67, 0x9c, 0xb7, 0x4f, 0xf4,
	0xa3, 0xa6, 0x52, 0x82, 0xb7, 0x40, 0xbd, 0x67, 0x9c, 0xb7, 0x9a, 0xfa, 0x61, 0xa7, 0xdd, 0x6d,
	0x2a, 0x65, 0xc9, 0xe8, 0x9d, 0xf6, 0x8d, 0x4e, 0xbb, 0x6f, 0x28, 0x2b, 0x70, 0x13, 0x80, 0x9e,
	0x71, 0xde, 0x38, 0x3d, 0x39, 0x69, 0x76, 0x0d, 0xa5, 0xf2, 0xf0, 0x87, 0x12, 0xa8, 0x27, 0x4e,
	0x4e, 0xb8, 0x05, 0x36, 0x1a, 0xc6, 0xb9, 0x81, 0xf4, 0x6e, 0xbf, 0xa3, 0x1b, 0xcd, 0x7d, 0xa5,
	0x20, 0x59, 0x8d, 0x03, 0xa6, 0xd5, 0xd3, 0xbb, 0xcf, 0x95, 0x22, 0xdc, 0x00, 0xb5, 0x86, 0x71,
	0x7e, 0x68, 0x1c, 0xea, 0x86, 0xae, 0x94, 0x20, 0x04, 0x9b, 0x0d, 0xe3, 0x5c, 0xef, 0xea, 0x9d,
	0xe7, 0x5f, 0x35, 0x7b, 0xcc, 0x95, 0x32, 0x73, 0xac, 0x61, 0x9c, 0x1f, 0x35, 0x4f, 0xdb, 0x3d,
	0xa5, 0x12, 0x9b, 0x6d, 0x36, 0x5a, 0xed, 0xae, 0xde, 0x6f, 0xeb, 0xca, 0x2a, 0xdc, 0x06, 0x4a,
	0xc3, 0x38, 0xef, 0x1b, 0xcd, 0x66, 0x4f, 0xef, 0x1e, 0x36, 0x5a, 0x4d, 0xbd, 0xa7, 0xac, 0x41,
	0x00, 0x56, 0x1b, 0xc6, 0xf9, 0x31, 0x3a, 0x56, 0xaa, 0xb0, 0x06, 0x2a, 0x6c, 0x7c, 0xa8, 0xd4,
	0x98, 0xdb, 0x6c, 0x86, 0x4e, 0xfb, 0x44, 0x3f, 0xd1, 0x15, 0x00, 0xef, 0x80, 0xad, 0x86, 0x71,
	0x7e, 0x72, 0x7a, 0xd6, 0x35, 0xf4, 0x76, 0xb7, 0x6f, 0x34, 0xf5, 0x4e, 0x5f, 0xa9, 0xcb, 0x49,
	0x8d, 0x13, 0xbd, 0xd3, 0x51, 0xd6, 0xa5, 0x97, 0x86, 0x7e, 0x7a, 0xa0, 0x9f, 0x2a, 0x1b, 0x2c,
	0x16, 0x4c, 0x47, 0xef, 0xb6, 0xce, 0xf4, 0xc3, 0x03, 0xe5, 0x56, 0xbc, 0x8a, 0xd3, 0xb3, 0x03,
	0xbd, 0xab, 0x28, 0x50, 0x01, 0xeb, 0xdc, 0xc7, 0x4e, 0xf3, 0x08, 0xe9, 0xbd, 0x96, 0xb2, 0xc5,
	0x22, 0xdd, 0x30, 0xce, 0xd9, 0x66, 0x56, 0xa0, 0xb4, 0xdd, 0xd2, 0x4f, 0x9f, 0x7e, 0xae, 0xdc,
	0x96, 0xde, 0xf7, 0xce, 0x0e, 0x3a, 0xed, 0x06, 0x8f, 0x56, 0xdb, 0x50, 0xb6, 0xe5, 0x14, 0x3a,
	0x32, 0xda, 0x8d, 0x4e, 0x73, 0x5f, 0xb9, 0x23, 0x2d, 0x3c, 0xfd, 0xfc, 0xf0, 0xb9, 0xf2, 0xda,
	0xc3, 0xf7, 0xc0, 0x9d, 0xcc, 0x17, 0x1b, 0x26, 0xa5, 0xf7, 0x8d, 0xf3, 0xe3, 0xde, 0x91, 0x48,
	0x2f, 0x23, 0x7a, 0xdd, 0x23, 0xa5, 0xb8, 0xff, 0xa7, 0x32, 0xd8, 0x3e, 0xe6, 0xa5, 0x13, 0xef,
	0x17, 0x12, 0x5c, 0xd9, 0x26, 0x81, 0x67, 0xa0, 0x36, 0x6d, 0x03, 0xe0, 0x5b, 0xaf, 0x70, 0x65,
	0xdc, 0xc9, 0x87, 0xba, 0x58, 0x44, 0x2b, 0xc0, 0x2f, 0xc0, 0x06, 0x49, 0xbe, 0x31, 0xc3, 0x7b,
	0x4b, 0xfb, 0xc0, 0x9d, 0x37, 0x97, 0xe0, 0x88, 0x56, 0x78, 0x5c, 0x84, 0x67, 0xa0, 0x3e, 0x24,
	0xb3, 0x77, 0xde, 0xe5, 0xed, 0x65, 0xb8, 0xb3, 0x0c, 0x9f, 0x42, 0xad, 0x00, 0x4f, 0x41, 0x6d,
	0x48, 0xe4, 0x9d, 0x16, 0x2e, 0xbd, 0xf5, 0xee, 0x2c, 0xe9, 0x8c, 0xb4, 0x02, 0xfc, 0x29, 0xd8,
	0x0c, 0xd2, 0x4f, 0x0c, 0xf7, 0x6e, 0xba, 0xdd, 0x73, 0xd6, 0xce, 0xfd, 0x25, 0xdb, 0x5b, 0x80,
	0x1c, 0x8b, 0xc3, 0x60, 0x95, 0xff, 0x71, 0xeb, 0xbf, 0xff, 0x11, 0x00, 0x00, 0xff, 0xff, 0x15,
	0x2f, 0xb4, 0x4d, 0xe8, 0x26, 0x00, 0x00,
}
