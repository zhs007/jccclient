// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.2
// source: douban.proto

package jccclient

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// DoubanMode - douban mode
type DoubanMode int32

const (
	// DBM_SEARCH - search
	DoubanMode_DBM_SEARCH DoubanMode = 0
	// DBM_BOOK - book
	DoubanMode_DBM_BOOK DoubanMode = 1
)

// Enum value maps for DoubanMode.
var (
	DoubanMode_name = map[int32]string{
		0: "DBM_SEARCH",
		1: "DBM_BOOK",
	}
	DoubanMode_value = map[string]int32{
		"DBM_SEARCH": 0,
		"DBM_BOOK":   1,
	}
)

func (x DoubanMode) Enum() *DoubanMode {
	p := new(DoubanMode)
	*p = x
	return p
}

func (x DoubanMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DoubanMode) Descriptor() protoreflect.EnumDescriptor {
	return file_douban_proto_enumTypes[0].Descriptor()
}

func (DoubanMode) Type() protoreflect.EnumType {
	return &file_douban_proto_enumTypes[0]
}

func (x DoubanMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DoubanMode.Descriptor instead.
func (DoubanMode) EnumDescriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{0}
}

// DoubanType - douban type
type DoubanType int32

const (
	// DBT_BOOK - book
	DoubanType_DBT_BOOK DoubanType = 0
)

// Enum value maps for DoubanType.
var (
	DoubanType_name = map[int32]string{
		0: "DBT_BOOK",
	}
	DoubanType_value = map[string]int32{
		"DBT_BOOK": 0,
	}
)

func (x DoubanType) Enum() *DoubanType {
	p := new(DoubanType)
	*p = x
	return p
}

func (x DoubanType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DoubanType) Descriptor() protoreflect.EnumDescriptor {
	return file_douban_proto_enumTypes[1].Descriptor()
}

func (DoubanType) Type() protoreflect.EnumType {
	return &file_douban_proto_enumTypes[1]
}

func (x DoubanType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DoubanType.Descriptor instead.
func (DoubanType) EnumDescriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{1}
}

// DoubanSubject - douban subject
type DoubanSubject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string     `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url        string     `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	DoubanType DoubanType `protobuf:"varint,3,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
	Id         string     `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DoubanSubject) Reset() {
	*x = DoubanSubject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubanSubject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubanSubject) ProtoMessage() {}

func (x *DoubanSubject) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubanSubject.ProtoReflect.Descriptor instead.
func (*DoubanSubject) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{0}
}

func (x *DoubanSubject) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DoubanSubject) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DoubanSubject) GetDoubanType() DoubanType {
	if x != nil {
		return x.DoubanType
	}
	return DoubanType_DBT_BOOK
}

func (x *DoubanSubject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// DoubanSearch - douban search
type DoubanSearch struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string           `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Subjects   []*DoubanSubject `protobuf:"bytes,2,rep,name=subjects,proto3" json:"subjects,omitempty"`
	DoubanType DoubanType       `protobuf:"varint,3,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
}

func (x *DoubanSearch) Reset() {
	*x = DoubanSearch{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubanSearch) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubanSearch) ProtoMessage() {}

func (x *DoubanSearch) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubanSearch.ProtoReflect.Descriptor instead.
func (*DoubanSearch) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{1}
}

func (x *DoubanSearch) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *DoubanSearch) GetSubjects() []*DoubanSubject {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *DoubanSearch) GetDoubanType() DoubanType {
	if x != nil {
		return x.DoubanType
	}
	return DoubanType_DBT_BOOK
}

// DoubanBook - douban book
type DoubanBook struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Url             string           `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Id              string           `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	Cover           string           `protobuf:"bytes,4,opt,name=cover,proto3" json:"cover,omitempty"`
	Authors         []string         `protobuf:"bytes,5,rep,name=authors,proto3" json:"authors,omitempty"`
	Score           float32          `protobuf:"fixed32,6,opt,name=score,proto3" json:"score,omitempty"`
	RatingNums      int32            `protobuf:"varint,7,opt,name=ratingNums,proto3" json:"ratingNums,omitempty"`
	Intro           string           `protobuf:"bytes,8,opt,name=intro,proto3" json:"intro,omitempty"`
	LstLink         []*DoubanSubject `protobuf:"bytes,9,rep,name=lstLink,proto3" json:"lstLink,omitempty"`
	Tags            []string         `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`
	OtherTitle      []string         `protobuf:"bytes,11,rep,name=otherTitle,proto3" json:"otherTitle,omitempty"`
	LastUpdatedTime int64            `protobuf:"varint,12,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (x *DoubanBook) Reset() {
	*x = DoubanBook{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubanBook) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubanBook) ProtoMessage() {}

func (x *DoubanBook) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubanBook.ProtoReflect.Descriptor instead.
func (*DoubanBook) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{2}
}

func (x *DoubanBook) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DoubanBook) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *DoubanBook) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *DoubanBook) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *DoubanBook) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *DoubanBook) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *DoubanBook) GetRatingNums() int32 {
	if x != nil {
		return x.RatingNums
	}
	return 0
}

func (x *DoubanBook) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *DoubanBook) GetLstLink() []*DoubanSubject {
	if x != nil {
		return x.LstLink
	}
	return nil
}

func (x *DoubanBook) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DoubanBook) GetOtherTitle() []string {
	if x != nil {
		return x.OtherTitle
	}
	return nil
}

func (x *DoubanBook) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

// DoubanComic - douban comic
type DoubanComic struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string           `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Covers          []string         `protobuf:"bytes,2,rep,name=covers,proto3" json:"covers,omitempty"`
	Authors         []string         `protobuf:"bytes,3,rep,name=authors,proto3" json:"authors,omitempty"`
	Score           float32          `protobuf:"fixed32,4,opt,name=score,proto3" json:"score,omitempty"`
	RatingNums      int32            `protobuf:"varint,5,opt,name=ratingNums,proto3" json:"ratingNums,omitempty"`
	Intro           string           `protobuf:"bytes,6,opt,name=intro,proto3" json:"intro,omitempty"`
	Tags            []string         `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
	LastUpdatedTime int64            `protobuf:"varint,8,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
	Books           []*DoubanBook    `protobuf:"bytes,9,rep,name=books,proto3" json:"books,omitempty"`
	LstLink         []*DoubanSubject `protobuf:"bytes,10,rep,name=lstLink,proto3" json:"lstLink,omitempty"`
	LinkComics      []string         `protobuf:"bytes,11,rep,name=linkComics,proto3" json:"linkComics,omitempty"`
}

func (x *DoubanComic) Reset() {
	*x = DoubanComic{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubanComic) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubanComic) ProtoMessage() {}

func (x *DoubanComic) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubanComic.ProtoReflect.Descriptor instead.
func (*DoubanComic) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{3}
}

func (x *DoubanComic) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DoubanComic) GetCovers() []string {
	if x != nil {
		return x.Covers
	}
	return nil
}

func (x *DoubanComic) GetAuthors() []string {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *DoubanComic) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *DoubanComic) GetRatingNums() int32 {
	if x != nil {
		return x.RatingNums
	}
	return 0
}

func (x *DoubanComic) GetIntro() string {
	if x != nil {
		return x.Intro
	}
	return ""
}

func (x *DoubanComic) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *DoubanComic) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

func (x *DoubanComic) GetBooks() []*DoubanBook {
	if x != nil {
		return x.Books
	}
	return nil
}

func (x *DoubanComic) GetLstLink() []*DoubanSubject {
	if x != nil {
		return x.LstLink
	}
	return nil
}

func (x *DoubanComic) GetLinkComics() []string {
	if x != nil {
		return x.LinkComics
	}
	return nil
}

// RequestDouban - request douban
type RequestDouban struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode       DoubanMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.DoubanMode" json:"mode,omitempty"`
	Text       string     `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Id         string     `protobuf:"bytes,3,opt,name=id,proto3" json:"id,omitempty"`
	DoubanType DoubanType `protobuf:"varint,4,opt,name=doubanType,proto3,enum=jarviscrawlercore.DoubanType" json:"doubanType,omitempty"`
}

func (x *RequestDouban) Reset() {
	*x = RequestDouban{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestDouban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestDouban) ProtoMessage() {}

func (x *RequestDouban) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestDouban.ProtoReflect.Descriptor instead.
func (*RequestDouban) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{4}
}

func (x *RequestDouban) GetMode() DoubanMode {
	if x != nil {
		return x.Mode
	}
	return DoubanMode_DBM_SEARCH
}

func (x *RequestDouban) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RequestDouban) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RequestDouban) GetDoubanType() DoubanType {
	if x != nil {
		return x.DoubanType
	}
	return DoubanType_DBT_BOOK
}

// ReplyDouban - reply douban
type ReplyDouban struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode DoubanMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.DoubanMode" json:"mode,omitempty"`
	// Types that are assignable to Reply:
	//	*ReplyDouban_Search
	//	*ReplyDouban_Book
	Reply isReplyDouban_Reply `protobuf_oneof:"reply"`
}

func (x *ReplyDouban) Reset() {
	*x = ReplyDouban{}
	if protoimpl.UnsafeEnabled {
		mi := &file_douban_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyDouban) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyDouban) ProtoMessage() {}

func (x *ReplyDouban) ProtoReflect() protoreflect.Message {
	mi := &file_douban_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyDouban.ProtoReflect.Descriptor instead.
func (*ReplyDouban) Descriptor() ([]byte, []int) {
	return file_douban_proto_rawDescGZIP(), []int{5}
}

func (x *ReplyDouban) GetMode() DoubanMode {
	if x != nil {
		return x.Mode
	}
	return DoubanMode_DBM_SEARCH
}

func (m *ReplyDouban) GetReply() isReplyDouban_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *ReplyDouban) GetSearch() *DoubanSearch {
	if x, ok := x.GetReply().(*ReplyDouban_Search); ok {
		return x.Search
	}
	return nil
}

func (x *ReplyDouban) GetBook() *DoubanBook {
	if x, ok := x.GetReply().(*ReplyDouban_Book); ok {
		return x.Book
	}
	return nil
}

type isReplyDouban_Reply interface {
	isReplyDouban_Reply()
}

type ReplyDouban_Search struct {
	Search *DoubanSearch `protobuf:"bytes,100,opt,name=search,proto3,oneof"`
}

type ReplyDouban_Book struct {
	Book *DoubanBook `protobuf:"bytes,101,opt,name=book,proto3,oneof"`
}

func (*ReplyDouban_Search) isReplyDouban_Reply() {}

func (*ReplyDouban_Book) isReplyDouban_Reply() {}

var File_douban_proto protoreflect.FileDescriptor

var file_douban_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72,
	0x65, 0x22, 0x86, 0x01, 0x0a, 0x0d, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x0a, 0x64,
	0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a,
	0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x0c, 0x44,
	0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12,
	0x3c, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x08, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x12, 0x3d, 0x0a,
	0x0a, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0xda, 0x02, 0x0a,
	0x0a, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74,
	0x72, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12,
	0x3a, 0x0a, 0x07, 0x6c, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x07, 0x6c, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0b, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22, 0xf0, 0x02, 0x0a, 0x0b, 0x44, 0x6f,
	0x75, 0x62, 0x61, 0x6e, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f,
	0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x73, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x4e, 0x75, 0x6d, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x72, 0x61, 0x74,
	0x69, 0x6e, 0x67, 0x4e, 0x75, 0x6d, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x69, 0x6e, 0x74, 0x72, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x33, 0x0a, 0x05, 0x62,
	0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x72,
	0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44,
	0x6f, 0x75, 0x62, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73,
	0x12, 0x3a, 0x0a, 0x07, 0x6c, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x53, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x52, 0x07, 0x6c, 0x73, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x6c, 0x69, 0x6e, 0x6b, 0x43, 0x6f, 0x6d, 0x69, 0x63, 0x73, 0x22, 0xa5, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x12, 0x31,
	0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6a,
	0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3d, 0x0a, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76,
	0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f,
	0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0a, 0x64, 0x6f, 0x75, 0x62, 0x61, 0x6e,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xb9, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x44, 0x6f,
	0x75, 0x62, 0x61, 0x6e, 0x12, 0x31, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62,
	0x61, 0x6e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x48, 0x00, 0x52, 0x06, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x12, 0x33, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72,
	0x63, 0x6f, 0x72, 0x65, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x42, 0x6f, 0x6f, 0x6b, 0x48,
	0x00, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x42, 0x07, 0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79,
	0x2a, 0x2a, 0x0a, 0x0a, 0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0e,
	0x0a, 0x0a, 0x44, 0x42, 0x4d, 0x5f, 0x53, 0x45, 0x41, 0x52, 0x43, 0x48, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x42, 0x4d, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x01, 0x2a, 0x1a, 0x0a, 0x0a,
	0x44, 0x6f, 0x75, 0x62, 0x61, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x42,
	0x54, 0x5f, 0x42, 0x4f, 0x4f, 0x4b, 0x10, 0x00, 0x42, 0x19, 0x5a, 0x17, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2f, 0x7a, 0x68, 0x73, 0x30, 0x30, 0x37, 0x2f, 0x6a, 0x63, 0x63, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_douban_proto_rawDescOnce sync.Once
	file_douban_proto_rawDescData = file_douban_proto_rawDesc
)

func file_douban_proto_rawDescGZIP() []byte {
	file_douban_proto_rawDescOnce.Do(func() {
		file_douban_proto_rawDescData = protoimpl.X.CompressGZIP(file_douban_proto_rawDescData)
	})
	return file_douban_proto_rawDescData
}

var file_douban_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_douban_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_douban_proto_goTypes = []interface{}{
	(DoubanMode)(0),       // 0: jarviscrawlercore.DoubanMode
	(DoubanType)(0),       // 1: jarviscrawlercore.DoubanType
	(*DoubanSubject)(nil), // 2: jarviscrawlercore.DoubanSubject
	(*DoubanSearch)(nil),  // 3: jarviscrawlercore.DoubanSearch
	(*DoubanBook)(nil),    // 4: jarviscrawlercore.DoubanBook
	(*DoubanComic)(nil),   // 5: jarviscrawlercore.DoubanComic
	(*RequestDouban)(nil), // 6: jarviscrawlercore.RequestDouban
	(*ReplyDouban)(nil),   // 7: jarviscrawlercore.ReplyDouban
}
var file_douban_proto_depIdxs = []int32{
	1,  // 0: jarviscrawlercore.DoubanSubject.doubanType:type_name -> jarviscrawlercore.DoubanType
	2,  // 1: jarviscrawlercore.DoubanSearch.subjects:type_name -> jarviscrawlercore.DoubanSubject
	1,  // 2: jarviscrawlercore.DoubanSearch.doubanType:type_name -> jarviscrawlercore.DoubanType
	2,  // 3: jarviscrawlercore.DoubanBook.lstLink:type_name -> jarviscrawlercore.DoubanSubject
	4,  // 4: jarviscrawlercore.DoubanComic.books:type_name -> jarviscrawlercore.DoubanBook
	2,  // 5: jarviscrawlercore.DoubanComic.lstLink:type_name -> jarviscrawlercore.DoubanSubject
	0,  // 6: jarviscrawlercore.RequestDouban.mode:type_name -> jarviscrawlercore.DoubanMode
	1,  // 7: jarviscrawlercore.RequestDouban.doubanType:type_name -> jarviscrawlercore.DoubanType
	0,  // 8: jarviscrawlercore.ReplyDouban.mode:type_name -> jarviscrawlercore.DoubanMode
	3,  // 9: jarviscrawlercore.ReplyDouban.search:type_name -> jarviscrawlercore.DoubanSearch
	4,  // 10: jarviscrawlercore.ReplyDouban.book:type_name -> jarviscrawlercore.DoubanBook
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_douban_proto_init() }
func file_douban_proto_init() {
	if File_douban_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_douban_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubanSubject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_douban_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubanSearch); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_douban_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubanBook); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_douban_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DoubanComic); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_douban_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestDouban); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_douban_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyDouban); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_douban_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*ReplyDouban_Search)(nil),
		(*ReplyDouban_Book)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_douban_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_douban_proto_goTypes,
		DependencyIndexes: file_douban_proto_depIdxs,
		EnumInfos:         file_douban_proto_enumTypes,
		MessageInfos:      file_douban_proto_msgTypes,
	}.Build()
	File_douban_proto = out.File
	file_douban_proto_rawDesc = nil
	file_douban_proto_goTypes = nil
	file_douban_proto_depIdxs = nil
}
