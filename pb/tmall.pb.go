// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.22.0
// 	protoc        v3.11.2
// source: tmall.proto

package jccclient

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// TmallMode - tmall mode
type TmallMode int32

const (
	// TMM_PRODUCT - product
	TmallMode_TMM_PRODUCT TmallMode = 0
	// TMM_MOBILEPRODUCT - mobile product
	TmallMode_TMM_MOBILEPRODUCT TmallMode = 1
)

// Enum value maps for TmallMode.
var (
	TmallMode_name = map[int32]string{
		0: "TMM_PRODUCT",
		1: "TMM_MOBILEPRODUCT",
	}
	TmallMode_value = map[string]int32{
		"TMM_PRODUCT":       0,
		"TMM_MOBILEPRODUCT": 1,
	}
)

func (x TmallMode) Enum() *TmallMode {
	p := new(TmallMode)
	*p = x
	return p
}

func (x TmallMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TmallMode) Descriptor() protoreflect.EnumDescriptor {
	return file_tmall_proto_enumTypes[0].Descriptor()
}

func (TmallMode) Type() protoreflect.EnumType {
	return &file_tmall_proto_enumTypes[0]
}

func (x TmallMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TmallMode.Descriptor instead.
func (TmallMode) EnumDescriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{0}
}

// TmallSKUInfo - tmall sku infomation
type TmallSKUInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skuid         string  `protobuf:"bytes,1,opt,name=skuid,proto3" json:"skuid,omitempty"`
	Price         float32 `protobuf:"fixed32,2,opt,name=price,proto3" json:"price,omitempty"`
	Title         string  `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"`
	Img           string  `protobuf:"bytes,4,opt,name=img,proto3" json:"img,omitempty"`
	Stock         int32   `protobuf:"varint,5,opt,name=stock,proto3" json:"stock,omitempty"`
	OriginalPrice float32 `protobuf:"fixed32,6,opt,name=originalPrice,proto3" json:"originalPrice,omitempty"`
	Wl            string  `protobuf:"bytes,7,opt,name=wl,proto3" json:"wl,omitempty"`
	WlPrice       float32 `protobuf:"fixed32,8,opt,name=wlPrice,proto3" json:"wlPrice,omitempty"`
	WlStr         string  `protobuf:"bytes,9,opt,name=wlStr,proto3" json:"wlStr,omitempty"`
	Itemid        string  `protobuf:"bytes,10,opt,name=itemid,proto3" json:"itemid,omitempty"`
}

func (x *TmallSKUInfo) Reset() {
	*x = TmallSKUInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallSKUInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallSKUInfo) ProtoMessage() {}

func (x *TmallSKUInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallSKUInfo.ProtoReflect.Descriptor instead.
func (*TmallSKUInfo) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{0}
}

func (x *TmallSKUInfo) GetSkuid() string {
	if x != nil {
		return x.Skuid
	}
	return ""
}

func (x *TmallSKUInfo) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TmallSKUInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TmallSKUInfo) GetImg() string {
	if x != nil {
		return x.Img
	}
	return ""
}

func (x *TmallSKUInfo) GetStock() int32 {
	if x != nil {
		return x.Stock
	}
	return 0
}

func (x *TmallSKUInfo) GetOriginalPrice() float32 {
	if x != nil {
		return x.OriginalPrice
	}
	return 0
}

func (x *TmallSKUInfo) GetWl() string {
	if x != nil {
		return x.Wl
	}
	return ""
}

func (x *TmallSKUInfo) GetWlPrice() float32 {
	if x != nil {
		return x.WlPrice
	}
	return 0
}

func (x *TmallSKUInfo) GetWlStr() string {
	if x != nil {
		return x.WlStr
	}
	return ""
}

func (x *TmallSKUInfo) GetItemid() string {
	if x != nil {
		return x.Itemid
	}
	return ""
}

// TmallProductHistory - tmall sku infomation
type TmallProductHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Skus            []*TmallSKUInfo `protobuf:"bytes,1,rep,name=skus,proto3" json:"skus,omitempty"`
	LastUpdatedTime int64           `protobuf:"varint,2,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
}

func (x *TmallProductHistory) Reset() {
	*x = TmallProductHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallProductHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallProductHistory) ProtoMessage() {}

func (x *TmallProductHistory) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallProductHistory.ProtoReflect.Descriptor instead.
func (*TmallProductHistory) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{1}
}

func (x *TmallProductHistory) GetSkus() []*TmallSKUInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *TmallProductHistory) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

// TmallReviewTag - tmall review tag
type TmallReviewTag struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag   string `protobuf:"bytes,1,opt,name=tag,proto3" json:"tag,omitempty"`
	Times int32  `protobuf:"varint,2,opt,name=times,proto3" json:"times,omitempty"`
	Type  int32  `protobuf:"varint,3,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *TmallReviewTag) Reset() {
	*x = TmallReviewTag{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallReviewTag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallReviewTag) ProtoMessage() {}

func (x *TmallReviewTag) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallReviewTag.ProtoReflect.Descriptor instead.
func (*TmallReviewTag) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{2}
}

func (x *TmallReviewTag) GetTag() string {
	if x != nil {
		return x.Tag
	}
	return ""
}

func (x *TmallReviewTag) GetTimes() int32 {
	if x != nil {
		return x.Times
	}
	return 0
}

func (x *TmallReviewTag) GetType() int32 {
	if x != nil {
		return x.Type
	}
	return 0
}

// TmallShopInfo - tmall shop infomation
type TmallShopInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Gold               bool      `protobuf:"varint,2,opt,name=gold,proto3" json:"gold,omitempty"`
	Url                string    `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
	Rank               string    `protobuf:"bytes,4,opt,name=rank,proto3" json:"rank,omitempty"`                    // cap/gold ...
	Rating             int32     `protobuf:"varint,5,opt,name=rating,proto3" json:"rating,omitempty"`               // 3/4/5 ...
	RateLevel          []int32   `protobuf:"varint,6,rep,packed,name=rateLevel,proto3" json:"rateLevel,omitempty"`  // 描述、服务、物流，-1表示低，0表示等于，1表示高
	RateScore          []float32 `protobuf:"fixed32,7,rep,packed,name=rateScore,proto3" json:"rateScore,omitempty"` // 描述、服务、物流，具体分数
	Shopid             string    `protobuf:"bytes,8,opt,name=shopid,proto3" json:"shopid,omitempty"`
	Userid             string    `protobuf:"bytes,9,opt,name=userid,proto3" json:"userid,omitempty"`
	CreditLevel        int32     `protobuf:"varint,10,opt,name=creditLevel,proto3" json:"creditLevel,omitempty"`
	AllItemCount       int32     `protobuf:"varint,11,opt,name=allItemCount,proto3" json:"allItemCount,omitempty"`
	NewItemCount       int32     `protobuf:"varint,12,opt,name=newItemCount,proto3" json:"newItemCount,omitempty"`
	StrFans            string    `protobuf:"bytes,13,opt,name=strFans,proto3" json:"strFans,omitempty"`
	GoodRatePercentage float32   `protobuf:"fixed32,14,opt,name=goodRatePercentage,proto3" json:"goodRatePercentage,omitempty"`
	RateOffset         []float32 `protobuf:"fixed32,15,rep,packed,name=rateOffset,proto3" json:"rateOffset,omitempty"`
}

func (x *TmallShopInfo) Reset() {
	*x = TmallShopInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallShopInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallShopInfo) ProtoMessage() {}

func (x *TmallShopInfo) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallShopInfo.ProtoReflect.Descriptor instead.
func (*TmallShopInfo) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{3}
}

func (x *TmallShopInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TmallShopInfo) GetGold() bool {
	if x != nil {
		return x.Gold
	}
	return false
}

func (x *TmallShopInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TmallShopInfo) GetRank() string {
	if x != nil {
		return x.Rank
	}
	return ""
}

func (x *TmallShopInfo) GetRating() int32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *TmallShopInfo) GetRateLevel() []int32 {
	if x != nil {
		return x.RateLevel
	}
	return nil
}

func (x *TmallShopInfo) GetRateScore() []float32 {
	if x != nil {
		return x.RateScore
	}
	return nil
}

func (x *TmallShopInfo) GetShopid() string {
	if x != nil {
		return x.Shopid
	}
	return ""
}

func (x *TmallShopInfo) GetUserid() string {
	if x != nil {
		return x.Userid
	}
	return ""
}

func (x *TmallShopInfo) GetCreditLevel() int32 {
	if x != nil {
		return x.CreditLevel
	}
	return 0
}

func (x *TmallShopInfo) GetAllItemCount() int32 {
	if x != nil {
		return x.AllItemCount
	}
	return 0
}

func (x *TmallShopInfo) GetNewItemCount() int32 {
	if x != nil {
		return x.NewItemCount
	}
	return 0
}

func (x *TmallShopInfo) GetStrFans() string {
	if x != nil {
		return x.StrFans
	}
	return ""
}

func (x *TmallShopInfo) GetGoodRatePercentage() float32 {
	if x != nil {
		return x.GoodRatePercentage
	}
	return 0
}

func (x *TmallShopInfo) GetRateOffset() []float32 {
	if x != nil {
		return x.RateOffset
	}
	return nil
}

// TmallProperty - tmall property
type TmallProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RootIndex int32  `protobuf:"varint,1,opt,name=rootIndex,proto3" json:"rootIndex,omitempty"`
	RootName  string `protobuf:"bytes,2,opt,name=rootName,proto3" json:"rootName,omitempty"`
	Key       string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value     string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *TmallProperty) Reset() {
	*x = TmallProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallProperty) ProtoMessage() {}

func (x *TmallProperty) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallProperty.ProtoReflect.Descriptor instead.
func (*TmallProperty) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{4}
}

func (x *TmallProperty) GetRootIndex() int32 {
	if x != nil {
		return x.RootIndex
	}
	return 0
}

func (x *TmallProperty) GetRootName() string {
	if x != nil {
		return x.RootName
	}
	return ""
}

func (x *TmallProperty) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *TmallProperty) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type TmallRelatedItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID    string `protobuf:"bytes,1,opt,name=itemID,proto3" json:"itemID,omitempty"`
	Url       string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	IsCurrent bool   `protobuf:"varint,4,opt,name=isCurrent,proto3" json:"isCurrent,omitempty"`
}

func (x *TmallRelatedItem) Reset() {
	*x = TmallRelatedItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallRelatedItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallRelatedItem) ProtoMessage() {}

func (x *TmallRelatedItem) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallRelatedItem.ProtoReflect.Descriptor instead.
func (*TmallRelatedItem) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{5}
}

func (x *TmallRelatedItem) GetItemID() string {
	if x != nil {
		return x.ItemID
	}
	return ""
}

func (x *TmallRelatedItem) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *TmallRelatedItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TmallRelatedItem) GetIsCurrent() bool {
	if x != nil {
		return x.IsCurrent
	}
	return false
}

// TmallProduct - tmall product
type TmallProduct struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ItemID          string                 `protobuf:"bytes,1,opt,name=itemID,proto3" json:"itemID,omitempty"`
	Skus            []*TmallSKUInfo        `protobuf:"bytes,2,rep,name=skus,proto3" json:"skus,omitempty"`
	Brand           string                 `protobuf:"bytes,3,opt,name=brand,proto3" json:"brand,omitempty"`
	BrandID         string                 `protobuf:"bytes,4,opt,name=brandID,proto3" json:"brandID,omitempty"`
	CategoryID      string                 `protobuf:"bytes,5,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	Title           string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`
	Newinfo         string                 `protobuf:"bytes,7,opt,name=newinfo,proto3" json:"newinfo,omitempty"`
	Reviews         int32                  `protobuf:"varint,8,opt,name=reviews,proto3" json:"reviews,omitempty"`
	Rating          float32                `protobuf:"fixed32,9,opt,name=rating,proto3" json:"rating,omitempty"`
	ReviewTags      []*TmallReviewTag      `protobuf:"bytes,10,rep,name=reviewTags,proto3" json:"reviewTags,omitempty"`
	LastUpdatedTime int64                  `protobuf:"varint,11,opt,name=lastUpdatedTime,proto3" json:"lastUpdatedTime,omitempty"`
	SellCount       int32                  `protobuf:"varint,12,opt,name=sellCount,proto3" json:"sellCount,omitempty"`
	StrSellCount    string                 `protobuf:"bytes,13,opt,name=strSellCount,proto3" json:"strSellCount,omitempty"`
	LstHistory      []*TmallProductHistory `protobuf:"bytes,14,rep,name=lstHistory,proto3" json:"lstHistory,omitempty"`
	RootCategoryID  string                 `protobuf:"bytes,15,opt,name=rootCategoryID,proto3" json:"rootCategoryID,omitempty"`
	TbItemID        string                 `protobuf:"bytes,16,opt,name=tbItemID,proto3" json:"tbItemID,omitempty"`
	BrandValueID    string                 `protobuf:"bytes,17,opt,name=brandValueID,proto3" json:"brandValueID,omitempty"`
	FavCount        int32                  `protobuf:"varint,18,opt,name=favCount,proto3" json:"favCount,omitempty"`
	Imgs            []string               `protobuf:"bytes,19,rep,name=imgs,proto3" json:"imgs,omitempty"`
	Shop            *TmallShopInfo         `protobuf:"bytes,20,opt,name=shop,proto3" json:"shop,omitempty"`
	Props           []*TmallProperty       `protobuf:"bytes,21,rep,name=props,proto3" json:"props,omitempty"`
	Price           float32                `protobuf:"fixed32,22,opt,name=price,proto3" json:"price,omitempty"`
	RelatedItems    []*TmallRelatedItem    `protobuf:"bytes,23,rep,name=relatedItems,proto3" json:"relatedItems,omitempty"`
}

func (x *TmallProduct) Reset() {
	*x = TmallProduct{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmallProduct) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmallProduct) ProtoMessage() {}

func (x *TmallProduct) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmallProduct.ProtoReflect.Descriptor instead.
func (*TmallProduct) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{6}
}

func (x *TmallProduct) GetItemID() string {
	if x != nil {
		return x.ItemID
	}
	return ""
}

func (x *TmallProduct) GetSkus() []*TmallSKUInfo {
	if x != nil {
		return x.Skus
	}
	return nil
}

func (x *TmallProduct) GetBrand() string {
	if x != nil {
		return x.Brand
	}
	return ""
}

func (x *TmallProduct) GetBrandID() string {
	if x != nil {
		return x.BrandID
	}
	return ""
}

func (x *TmallProduct) GetCategoryID() string {
	if x != nil {
		return x.CategoryID
	}
	return ""
}

func (x *TmallProduct) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *TmallProduct) GetNewinfo() string {
	if x != nil {
		return x.Newinfo
	}
	return ""
}

func (x *TmallProduct) GetReviews() int32 {
	if x != nil {
		return x.Reviews
	}
	return 0
}

func (x *TmallProduct) GetRating() float32 {
	if x != nil {
		return x.Rating
	}
	return 0
}

func (x *TmallProduct) GetReviewTags() []*TmallReviewTag {
	if x != nil {
		return x.ReviewTags
	}
	return nil
}

func (x *TmallProduct) GetLastUpdatedTime() int64 {
	if x != nil {
		return x.LastUpdatedTime
	}
	return 0
}

func (x *TmallProduct) GetSellCount() int32 {
	if x != nil {
		return x.SellCount
	}
	return 0
}

func (x *TmallProduct) GetStrSellCount() string {
	if x != nil {
		return x.StrSellCount
	}
	return ""
}

func (x *TmallProduct) GetLstHistory() []*TmallProductHistory {
	if x != nil {
		return x.LstHistory
	}
	return nil
}

func (x *TmallProduct) GetRootCategoryID() string {
	if x != nil {
		return x.RootCategoryID
	}
	return ""
}

func (x *TmallProduct) GetTbItemID() string {
	if x != nil {
		return x.TbItemID
	}
	return ""
}

func (x *TmallProduct) GetBrandValueID() string {
	if x != nil {
		return x.BrandValueID
	}
	return ""
}

func (x *TmallProduct) GetFavCount() int32 {
	if x != nil {
		return x.FavCount
	}
	return 0
}

func (x *TmallProduct) GetImgs() []string {
	if x != nil {
		return x.Imgs
	}
	return nil
}

func (x *TmallProduct) GetShop() *TmallShopInfo {
	if x != nil {
		return x.Shop
	}
	return nil
}

func (x *TmallProduct) GetProps() []*TmallProperty {
	if x != nil {
		return x.Props
	}
	return nil
}

func (x *TmallProduct) GetPrice() float32 {
	if x != nil {
		return x.Price
	}
	return 0
}

func (x *TmallProduct) GetRelatedItems() []*TmallRelatedItem {
	if x != nil {
		return x.RelatedItems
	}
	return nil
}

// RequestTmall - request tmall
type RequestTmall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode   TmallMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.TmallMode" json:"mode,omitempty"`
	Url    string    `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Device string    `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`
}

func (x *RequestTmall) Reset() {
	*x = RequestTmall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RequestTmall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RequestTmall) ProtoMessage() {}

func (x *RequestTmall) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RequestTmall.ProtoReflect.Descriptor instead.
func (*RequestTmall) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{7}
}

func (x *RequestTmall) GetMode() TmallMode {
	if x != nil {
		return x.Mode
	}
	return TmallMode_TMM_PRODUCT
}

func (x *RequestTmall) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *RequestTmall) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

// ReplyTmall - reply tmall
type ReplyTmall struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode TmallMode `protobuf:"varint,1,opt,name=mode,proto3,enum=jarviscrawlercore.TmallMode" json:"mode,omitempty"`
	// Types that are assignable to Reply:
	//	*ReplyTmall_Product
	Reply isReplyTmall_Reply `protobuf_oneof:"reply"`
}

func (x *ReplyTmall) Reset() {
	*x = ReplyTmall{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tmall_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplyTmall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplyTmall) ProtoMessage() {}

func (x *ReplyTmall) ProtoReflect() protoreflect.Message {
	mi := &file_tmall_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplyTmall.ProtoReflect.Descriptor instead.
func (*ReplyTmall) Descriptor() ([]byte, []int) {
	return file_tmall_proto_rawDescGZIP(), []int{8}
}

func (x *ReplyTmall) GetMode() TmallMode {
	if x != nil {
		return x.Mode
	}
	return TmallMode_TMM_PRODUCT
}

func (m *ReplyTmall) GetReply() isReplyTmall_Reply {
	if m != nil {
		return m.Reply
	}
	return nil
}

func (x *ReplyTmall) GetProduct() *TmallProduct {
	if x, ok := x.GetReply().(*ReplyTmall_Product); ok {
		return x.Product
	}
	return nil
}

type isReplyTmall_Reply interface {
	isReplyTmall_Reply()
}

type ReplyTmall_Product struct {
	Product *TmallProduct `protobuf:"bytes,100,opt,name=product,proto3,oneof"`
}

func (*ReplyTmall_Product) isReplyTmall_Reply() {}

var File_tmall_proto protoreflect.FileDescriptor

var file_tmall_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6d, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6a,
	0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65,
	0x22, 0xf6, 0x01, 0x0a, 0x0c, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x4b, 0x55, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x73, 0x6b, 0x75, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x69, 0x6d, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x0d, 0x6f,
	0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0d, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x50, 0x72, 0x69, 0x63,
	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x77, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x77,
	0x6c, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x07, 0x77, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x6c, 0x53, 0x74, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6c, 0x53, 0x74,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x13, 0x54, 0x6d, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x33, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f,
	0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f,
	0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x4b, 0x55, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f,
	0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x22,
	0x4c, 0x0a, 0x0e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x61,
	0x67, 0x12, 0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x74, 0x61, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x05, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0xb5, 0x03,
	0x0a, 0x0d, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x04, 0x67, 0x6f, 0x6c, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x61, 0x6e, 0x6b, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x02, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x73, 0x68, 0x6f, 0x70, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69,
	0x64, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x65, 0x76, 0x65, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x64, 0x69, 0x74, 0x4c, 0x65,
	0x76, 0x65, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x6c, 0x6c, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x61, 0x6c, 0x6c, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6e, 0x65, 0x77, 0x49, 0x74,
	0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6e,
	0x65, 0x77, 0x49, 0x74, 0x65, 0x6d, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x74, 0x72, 0x46, 0x61, 0x6e, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x74,
	0x72, 0x46, 0x61, 0x6e, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x52, 0x61, 0x74,
	0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x12, 0x67, 0x6f, 0x6f, 0x64, 0x52, 0x61, 0x74, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x66,
	0x73, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x02, 0x52, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x22, 0x71, 0x0a, 0x0d, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x49, 0x6e,
	0x64, 0x65, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x6f, 0x6f, 0x74, 0x49,
	0x6e, 0x64, 0x65, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6f, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6e, 0x0a, 0x10, 0x54, 0x6d, 0x61, 0x6c,
	0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06,
	0x69, 0x74, 0x65, 0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74,
	0x65, 0x6d, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69,
	0x73, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x22, 0xe9, 0x06, 0x0a, 0x0c, 0x54, 0x6d, 0x61,
	0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x74, 0x65,
	0x6d, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x74, 0x65, 0x6d, 0x49,
	0x44, 0x12, 0x33, 0x0a, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63,
	0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x53, 0x4b, 0x55, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x73, 0x6b, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x62, 0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62,
	0x72, 0x61, 0x6e, 0x64, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x6e, 0x65, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6e,
	0x65, 0x77, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x06, 0x72, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x41, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x54, 0x61, 0x67, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6a,
	0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x52,
	0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x61, 0x67, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x72, 0x53, 0x65, 0x6c, 0x6c, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x72, 0x53, 0x65,
	0x6c, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x46, 0x0a, 0x0a, 0x6c, 0x73, 0x74, 0x48, 0x69,
	0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x6a, 0x61,
	0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e,
	0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x52, 0x0a, 0x6c, 0x73, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x26, 0x0a, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x6f, 0x6f, 0x74, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x62, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x62, 0x49, 0x74, 0x65,
	0x6d, 0x49, 0x44, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x49, 0x44, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x72, 0x61, 0x6e, 0x64,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x61, 0x76, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x61, 0x76, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x18, 0x13, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x69, 0x6d, 0x67, 0x73, 0x12, 0x34, 0x0a, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x53,
	0x68, 0x6f, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x36, 0x0a,
	0x05, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x15, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x6a,
	0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72, 0x65,
	0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x05,
	0x70, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x0c, 0x72,
	0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x73, 0x18, 0x17, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65,
	0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x6c, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x73, 0x22, 0x6a, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x54,
	0x6d, 0x61, 0x6c, 0x6c, 0x12, 0x30, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x84, 0x01, 0x0a, 0x0a, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x12,
	0x30, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x65, 0x72, 0x63, 0x6f, 0x72,
	0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64,
	0x65, 0x12, 0x3b, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x64, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6a, 0x61, 0x72, 0x76, 0x69, 0x73, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x65, 0x72, 0x63, 0x6f, 0x72, 0x65, 0x2e, 0x54, 0x6d, 0x61, 0x6c, 0x6c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x48, 0x00, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x07,
	0x0a, 0x05, 0x72, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x33, 0x0a, 0x09, 0x54, 0x6d, 0x61, 0x6c, 0x6c,
	0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x4d, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x44,
	0x55, 0x43, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x4d, 0x4d, 0x5f, 0x4d, 0x4f, 0x42,
	0x49, 0x4c, 0x45, 0x50, 0x52, 0x4f, 0x44, 0x55, 0x43, 0x54, 0x10, 0x01, 0x42, 0x19, 0x5a, 0x17,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2f, 0x7a, 0x68, 0x73, 0x30, 0x30, 0x37, 0x2f, 0x6a, 0x63,
	0x63, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tmall_proto_rawDescOnce sync.Once
	file_tmall_proto_rawDescData = file_tmall_proto_rawDesc
)

func file_tmall_proto_rawDescGZIP() []byte {
	file_tmall_proto_rawDescOnce.Do(func() {
		file_tmall_proto_rawDescData = protoimpl.X.CompressGZIP(file_tmall_proto_rawDescData)
	})
	return file_tmall_proto_rawDescData
}

var file_tmall_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_tmall_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_tmall_proto_goTypes = []interface{}{
	(TmallMode)(0),              // 0: jarviscrawlercore.TmallMode
	(*TmallSKUInfo)(nil),        // 1: jarviscrawlercore.TmallSKUInfo
	(*TmallProductHistory)(nil), // 2: jarviscrawlercore.TmallProductHistory
	(*TmallReviewTag)(nil),      // 3: jarviscrawlercore.TmallReviewTag
	(*TmallShopInfo)(nil),       // 4: jarviscrawlercore.TmallShopInfo
	(*TmallProperty)(nil),       // 5: jarviscrawlercore.TmallProperty
	(*TmallRelatedItem)(nil),    // 6: jarviscrawlercore.TmallRelatedItem
	(*TmallProduct)(nil),        // 7: jarviscrawlercore.TmallProduct
	(*RequestTmall)(nil),        // 8: jarviscrawlercore.RequestTmall
	(*ReplyTmall)(nil),          // 9: jarviscrawlercore.ReplyTmall
}
var file_tmall_proto_depIdxs = []int32{
	1,  // 0: jarviscrawlercore.TmallProductHistory.skus:type_name -> jarviscrawlercore.TmallSKUInfo
	1,  // 1: jarviscrawlercore.TmallProduct.skus:type_name -> jarviscrawlercore.TmallSKUInfo
	3,  // 2: jarviscrawlercore.TmallProduct.reviewTags:type_name -> jarviscrawlercore.TmallReviewTag
	2,  // 3: jarviscrawlercore.TmallProduct.lstHistory:type_name -> jarviscrawlercore.TmallProductHistory
	4,  // 4: jarviscrawlercore.TmallProduct.shop:type_name -> jarviscrawlercore.TmallShopInfo
	5,  // 5: jarviscrawlercore.TmallProduct.props:type_name -> jarviscrawlercore.TmallProperty
	6,  // 6: jarviscrawlercore.TmallProduct.relatedItems:type_name -> jarviscrawlercore.TmallRelatedItem
	0,  // 7: jarviscrawlercore.RequestTmall.mode:type_name -> jarviscrawlercore.TmallMode
	0,  // 8: jarviscrawlercore.ReplyTmall.mode:type_name -> jarviscrawlercore.TmallMode
	7,  // 9: jarviscrawlercore.ReplyTmall.product:type_name -> jarviscrawlercore.TmallProduct
	10, // [10:10] is the sub-list for method output_type
	10, // [10:10] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_tmall_proto_init() }
func file_tmall_proto_init() {
	if File_tmall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tmall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallSKUInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallProductHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallReviewTag); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallShopInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallRelatedItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmallProduct); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RequestTmall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tmall_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplyTmall); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tmall_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*ReplyTmall_Product)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tmall_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_tmall_proto_goTypes,
		DependencyIndexes: file_tmall_proto_depIdxs,
		EnumInfos:         file_tmall_proto_enumTypes,
		MessageInfos:      file_tmall_proto_msgTypes,
	}.Build()
	File_tmall_proto = out.File
	file_tmall_proto_rawDesc = nil
	file_tmall_proto_goTypes = nil
	file_tmall_proto_depIdxs = nil
}
